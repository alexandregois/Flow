// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: maxpb_lora.proto

package maxpb;

public final class MaxpbLora {
  private MaxpbLora() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code maxpb.LoraNetwork}
   */
  public enum LoraNetwork
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LN_UNKNOWN = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LN_UNKNOWN(0, 0),
    /**
     * <code>LN_LORAWAN = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LN_LORAWAN(1, 1),
    /**
     * <code>LN_P2P = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LN_P2P(2, 2),
    ;

    /**
     * <code>LN_UNKNOWN = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LN_UNKNOWN_VALUE = 0;
    /**
     * <code>LN_LORAWAN = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LN_LORAWAN_VALUE = 1;
    /**
     * <code>LN_P2P = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LN_P2P_VALUE = 2;


    public final int getNumber() { return value; }

    public static LoraNetwork valueOf(int value) {
      switch (value) {
        case 0: return LN_UNKNOWN;
        case 1: return LN_LORAWAN;
        case 2: return LN_P2P;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LoraNetwork>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LoraNetwork>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LoraNetwork>() {
            public LoraNetwork findValueByNumber(int number) {
              return LoraNetwork.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbLora.getDescriptor().getEnumTypes().get(0);
    }

    private static final LoraNetwork[] VALUES = values();

    public static LoraNetwork valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private LoraNetwork(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.LoraNetwork)
  }

  /**
   * Protobuf enum {@code maxpb.LoraCodingRate}
   */
  public enum LoraCodingRate
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CR_UNKNOWN = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    CR_UNKNOWN(0, 0),
    /**
     * <code>CR_4_5 = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    CR_4_5(1, 1),
    /**
     * <code>CR_4_6 = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    CR_4_6(2, 2),
    /**
     * <code>CR_4_7 = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    CR_4_7(3, 3),
    /**
     * <code>CR_4_8 = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    CR_4_8(4, 4),
    ;

    /**
     * <code>CR_UNKNOWN = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int CR_UNKNOWN_VALUE = 0;
    /**
     * <code>CR_4_5 = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int CR_4_5_VALUE = 1;
    /**
     * <code>CR_4_6 = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int CR_4_6_VALUE = 2;
    /**
     * <code>CR_4_7 = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int CR_4_7_VALUE = 3;
    /**
     * <code>CR_4_8 = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int CR_4_8_VALUE = 4;


    public final int getNumber() { return value; }

    public static LoraCodingRate valueOf(int value) {
      switch (value) {
        case 0: return CR_UNKNOWN;
        case 1: return CR_4_5;
        case 2: return CR_4_6;
        case 3: return CR_4_7;
        case 4: return CR_4_8;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LoraCodingRate>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LoraCodingRate>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LoraCodingRate>() {
            public LoraCodingRate findValueByNumber(int number) {
              return LoraCodingRate.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbLora.getDescriptor().getEnumTypes().get(1);
    }

    private static final LoraCodingRate[] VALUES = values();

    public static LoraCodingRate valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private LoraCodingRate(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.LoraCodingRate)
  }

  /**
   * Protobuf enum {@code maxpb.LoraSpreadingFactor}
   */
  public enum LoraSpreadingFactor
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SF_UNKOWN = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    SF_UNKOWN(0, 0),
    /**
     * <code>SF6 = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    SF6(1, 6),
    /**
     * <code>SF7 = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    SF7(2, 7),
    /**
     * <code>SF8 = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    SF8(3, 8),
    /**
     * <code>SF9 = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    SF9(4, 9),
    /**
     * <code>SF10 = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    SF10(5, 10),
    /**
     * <code>SF11 = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    SF11(6, 11),
    /**
     * <code>SF12 = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    SF12(7, 12),
    ;

    /**
     * <code>SF_UNKOWN = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int SF_UNKOWN_VALUE = 0;
    /**
     * <code>SF6 = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int SF6_VALUE = 6;
    /**
     * <code>SF7 = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int SF7_VALUE = 7;
    /**
     * <code>SF8 = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int SF8_VALUE = 8;
    /**
     * <code>SF9 = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int SF9_VALUE = 9;
    /**
     * <code>SF10 = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int SF10_VALUE = 10;
    /**
     * <code>SF11 = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int SF11_VALUE = 11;
    /**
     * <code>SF12 = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int SF12_VALUE = 12;


    public final int getNumber() { return value; }

    public static LoraSpreadingFactor valueOf(int value) {
      switch (value) {
        case 0: return SF_UNKOWN;
        case 6: return SF6;
        case 7: return SF7;
        case 8: return SF8;
        case 9: return SF9;
        case 10: return SF10;
        case 11: return SF11;
        case 12: return SF12;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LoraSpreadingFactor>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LoraSpreadingFactor>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LoraSpreadingFactor>() {
            public LoraSpreadingFactor findValueByNumber(int number) {
              return LoraSpreadingFactor.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbLora.getDescriptor().getEnumTypes().get(2);
    }

    private static final LoraSpreadingFactor[] VALUES = values();

    public static LoraSpreadingFactor valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private LoraSpreadingFactor(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.LoraSpreadingFactor)
  }

  /**
   * Protobuf enum {@code maxpb.LoraBandwidth}
   */
  public enum LoraBandwidth
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LBW_UNKNOWN = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LBW_UNKNOWN(0, 0),
    /**
     * <code>LBW_125kHz = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LBW_125kHz(1, 1),
    /**
     * <code>LBW_250kHz = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LBW_250kHz(2, 2),
    /**
     * <code>LBW_500kHz = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LBW_500kHz(3, 3),
    ;

    /**
     * <code>LBW_UNKNOWN = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LBW_UNKNOWN_VALUE = 0;
    /**
     * <code>LBW_125kHz = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LBW_125kHz_VALUE = 1;
    /**
     * <code>LBW_250kHz = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LBW_250kHz_VALUE = 2;
    /**
     * <code>LBW_500kHz = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LBW_500kHz_VALUE = 3;


    public final int getNumber() { return value; }

    public static LoraBandwidth valueOf(int value) {
      switch (value) {
        case 0: return LBW_UNKNOWN;
        case 1: return LBW_125kHz;
        case 2: return LBW_250kHz;
        case 3: return LBW_500kHz;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LoraBandwidth>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LoraBandwidth>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LoraBandwidth>() {
            public LoraBandwidth findValueByNumber(int number) {
              return LoraBandwidth.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbLora.getDescriptor().getEnumTypes().get(3);
    }

    private static final LoraBandwidth[] VALUES = values();

    public static LoraBandwidth valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private LoraBandwidth(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.LoraBandwidth)
  }

  /**
   * Protobuf enum {@code maxpb.LoraMode}
   */
  public enum LoraMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LM_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LM_NONE(0, 0),
    /**
     * <code>LM_P2P_POSITIONS = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LM_P2P_POSITIONS(1, 1),
    /**
     * <code>LM_P2P_ALARM = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LM_P2P_ALARM(2, 2),
    /**
     * <code>LM_WAN_POSITIONS = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LM_WAN_POSITIONS(3, 3),
    /**
     * <code>LM_WAN_ALARM = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LM_WAN_ALARM(4, 4),
    /**
     * <code>LM_P2P_WAN_POSITIONS = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LM_P2P_WAN_POSITIONS(5, 5),
    /**
     * <code>LM_P2P_WAN_ALARM = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LM_P2P_WAN_ALARM(6, 6),
    /**
     * <code>LM_P2P_GATEWAY = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LM_P2P_GATEWAY(7, 7),
    /**
     * <code>LM_P2P_FINDER = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LM_P2P_FINDER(8, 8),
    /**
     * <code>LM_P2P_PARING_DEVICE = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LM_P2P_PARING_DEVICE(9, 9),
    /**
     * <code>LM_P2P_PARING_COORDINATOR = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LM_P2P_PARING_COORDINATOR(10, 10),
    /**
     * <code>LM_RFU_01 = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    LM_RFU_01(11, 11),
    /**
     * <code>LM_RFU_02 = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    LM_RFU_02(12, 12),
    /**
     * <code>LM_RFU_03 = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    LM_RFU_03(13, 13),
    /**
     * <code>LM_RFU_04 = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    LM_RFU_04(14, 14),
    /**
     * <code>LM_RFU_05 = 15;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    LM_RFU_05(15, 15),
    ;

    /**
     * <code>LM_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LM_NONE_VALUE = 0;
    /**
     * <code>LM_P2P_POSITIONS = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LM_P2P_POSITIONS_VALUE = 1;
    /**
     * <code>LM_P2P_ALARM = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LM_P2P_ALARM_VALUE = 2;
    /**
     * <code>LM_WAN_POSITIONS = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LM_WAN_POSITIONS_VALUE = 3;
    /**
     * <code>LM_WAN_ALARM = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LM_WAN_ALARM_VALUE = 4;
    /**
     * <code>LM_P2P_WAN_POSITIONS = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LM_P2P_WAN_POSITIONS_VALUE = 5;
    /**
     * <code>LM_P2P_WAN_ALARM = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LM_P2P_WAN_ALARM_VALUE = 6;
    /**
     * <code>LM_P2P_GATEWAY = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LM_P2P_GATEWAY_VALUE = 7;
    /**
     * <code>LM_P2P_FINDER = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LM_P2P_FINDER_VALUE = 8;
    /**
     * <code>LM_P2P_PARING_DEVICE = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LM_P2P_PARING_DEVICE_VALUE = 9;
    /**
     * <code>LM_P2P_PARING_COORDINATOR = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LM_P2P_PARING_COORDINATOR_VALUE = 10;
    /**
     * <code>LM_RFU_01 = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int LM_RFU_01_VALUE = 11;
    /**
     * <code>LM_RFU_02 = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int LM_RFU_02_VALUE = 12;
    /**
     * <code>LM_RFU_03 = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int LM_RFU_03_VALUE = 13;
    /**
     * <code>LM_RFU_04 = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int LM_RFU_04_VALUE = 14;
    /**
     * <code>LM_RFU_05 = 15;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int LM_RFU_05_VALUE = 15;


    public final int getNumber() { return value; }

    public static LoraMode valueOf(int value) {
      switch (value) {
        case 0: return LM_NONE;
        case 1: return LM_P2P_POSITIONS;
        case 2: return LM_P2P_ALARM;
        case 3: return LM_WAN_POSITIONS;
        case 4: return LM_WAN_ALARM;
        case 5: return LM_P2P_WAN_POSITIONS;
        case 6: return LM_P2P_WAN_ALARM;
        case 7: return LM_P2P_GATEWAY;
        case 8: return LM_P2P_FINDER;
        case 9: return LM_P2P_PARING_DEVICE;
        case 10: return LM_P2P_PARING_COORDINATOR;
        case 11: return LM_RFU_01;
        case 12: return LM_RFU_02;
        case 13: return LM_RFU_03;
        case 14: return LM_RFU_04;
        case 15: return LM_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LoraMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LoraMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LoraMode>() {
            public LoraMode findValueByNumber(int number) {
              return LoraMode.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbLora.getDescriptor().getEnumTypes().get(4);
    }

    private static final LoraMode[] VALUES = values();

    public static LoraMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private LoraMode(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.LoraMode)
  }

  /**
   * Protobuf enum {@code maxpb.LoraProtocol}
   */
  public enum LoraProtocol
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LP_VER1 = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LP_VER1(0, 0),
    /**
     * <code>LP_RFU_01 = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    LP_RFU_01(1, 1),
    /**
     * <code>LP_RFU_02 = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    LP_RFU_02(2, 2),
    /**
     * <code>LP_RFU_03 = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    LP_RFU_03(3, 3),
    /**
     * <code>LP_RFU_04 = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    LP_RFU_04(4, 4),
    /**
     * <code>LP_RFU_05 = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    LP_RFU_05(5, 5),
    ;

    /**
     * <code>LP_VER1 = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LP_VER1_VALUE = 0;
    /**
     * <code>LP_RFU_01 = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int LP_RFU_01_VALUE = 1;
    /**
     * <code>LP_RFU_02 = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int LP_RFU_02_VALUE = 2;
    /**
     * <code>LP_RFU_03 = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int LP_RFU_03_VALUE = 3;
    /**
     * <code>LP_RFU_04 = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int LP_RFU_04_VALUE = 4;
    /**
     * <code>LP_RFU_05 = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int LP_RFU_05_VALUE = 5;


    public final int getNumber() { return value; }

    public static LoraProtocol valueOf(int value) {
      switch (value) {
        case 0: return LP_VER1;
        case 1: return LP_RFU_01;
        case 2: return LP_RFU_02;
        case 3: return LP_RFU_03;
        case 4: return LP_RFU_04;
        case 5: return LP_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LoraProtocol>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LoraProtocol>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LoraProtocol>() {
            public LoraProtocol findValueByNumber(int number) {
              return LoraProtocol.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbLora.getDescriptor().getEnumTypes().get(5);
    }

    private static final LoraProtocol[] VALUES = values();

    public static LoraProtocol valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private LoraProtocol(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.LoraProtocol)
  }

  /**
   * Protobuf enum {@code maxpb.LoraWanFrequencyPlan}
   */
  public enum LoraWanFrequencyPlan
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LWF_US915 = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LWF_US915(0, 0),
    /**
     * <code>LWF_US915_HYBRID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LWF_US915_HYBRID(1, 1),
    /**
     * <code>LWF_EU868 = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LWF_EU868(2, 2),
    /**
     * <code>LWF_AUS915 = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LWF_AUS915(3, 3),
    /**
     * <code>LWF_BR915 = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LWF_BR915(4, 4),
    /**
     * <code>LWF_RFU_01 = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    LWF_RFU_01(5, 5),
    /**
     * <code>LWF_RFU_02 = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    LWF_RFU_02(6, 6),
    /**
     * <code>LWF_RFU_03 = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    LWF_RFU_03(7, 7),
    /**
     * <code>LWF_RFU_04 = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    LWF_RFU_04(8, 8),
    /**
     * <code>LWF_RFU_05 = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    LWF_RFU_05(9, 9),
    ;

    /**
     * <code>LWF_US915 = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LWF_US915_VALUE = 0;
    /**
     * <code>LWF_US915_HYBRID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LWF_US915_HYBRID_VALUE = 1;
    /**
     * <code>LWF_EU868 = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LWF_EU868_VALUE = 2;
    /**
     * <code>LWF_AUS915 = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LWF_AUS915_VALUE = 3;
    /**
     * <code>LWF_BR915 = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LWF_BR915_VALUE = 4;
    /**
     * <code>LWF_RFU_01 = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int LWF_RFU_01_VALUE = 5;
    /**
     * <code>LWF_RFU_02 = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int LWF_RFU_02_VALUE = 6;
    /**
     * <code>LWF_RFU_03 = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int LWF_RFU_03_VALUE = 7;
    /**
     * <code>LWF_RFU_04 = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int LWF_RFU_04_VALUE = 8;
    /**
     * <code>LWF_RFU_05 = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int LWF_RFU_05_VALUE = 9;


    public final int getNumber() { return value; }

    public static LoraWanFrequencyPlan valueOf(int value) {
      switch (value) {
        case 0: return LWF_US915;
        case 1: return LWF_US915_HYBRID;
        case 2: return LWF_EU868;
        case 3: return LWF_AUS915;
        case 4: return LWF_BR915;
        case 5: return LWF_RFU_01;
        case 6: return LWF_RFU_02;
        case 7: return LWF_RFU_03;
        case 8: return LWF_RFU_04;
        case 9: return LWF_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LoraWanFrequencyPlan>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LoraWanFrequencyPlan>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LoraWanFrequencyPlan>() {
            public LoraWanFrequencyPlan findValueByNumber(int number) {
              return LoraWanFrequencyPlan.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbLora.getDescriptor().getEnumTypes().get(6);
    }

    private static final LoraWanFrequencyPlan[] VALUES = values();

    public static LoraWanFrequencyPlan valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private LoraWanFrequencyPlan(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.LoraWanFrequencyPlan)
  }

  /**
   * Protobuf enum {@code maxpb.LoraWanActivation}
   */
  public enum LoraWanActivation
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LWA_OTAA = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LWA_OTAA(0, 0),
    /**
     * <code>LWA_ABP = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    LWA_ABP(1, 1),
    ;

    /**
     * <code>LWA_OTAA = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LWA_OTAA_VALUE = 0;
    /**
     * <code>LWA_ABP = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int LWA_ABP_VALUE = 1;


    public final int getNumber() { return value; }

    public static LoraWanActivation valueOf(int value) {
      switch (value) {
        case 0: return LWA_OTAA;
        case 1: return LWA_ABP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LoraWanActivation>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LoraWanActivation>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LoraWanActivation>() {
            public LoraWanActivation findValueByNumber(int number) {
              return LoraWanActivation.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbLora.getDescriptor().getEnumTypes().get(7);
    }

    private static final LoraWanActivation[] VALUES = values();

    public static LoraWanActivation valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private LoraWanActivation(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.LoraWanActivation)
  }

  /**
   * Protobuf enum {@code maxpb.LoraActionID}
   */
  public enum LoraActionID
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LA_ACTION_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    LA_ACTION_NONE(0, 0),
    /**
     * <code>LA_ACTION_ALARM_STATE = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    LA_ACTION_ALARM_STATE(1, 1),
    /**
     * <code>LA_ACTION_SET_ZIGBEE_KEY = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    LA_ACTION_SET_ZIGBEE_KEY(2, 2),
    /**
     * <code>LA_ACTION_RESET_DEFAULT = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    LA_ACTION_RESET_DEFAULT(3, 3),
    /**
     * <code>LA_ACTION_ACTIVE_CONFIG = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    LA_ACTION_ACTIVE_CONFIG(4, 4),
    /**
     * <code>LA_ACTION_ENTER_STOCK = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    LA_ACTION_ENTER_STOCK(5, 5),
    /**
     * <code>LA_ACTION_RFU01 = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    LA_ACTION_RFU01(6, 6),
    /**
     * <code>LA_ACTION_RFU02 = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    LA_ACTION_RFU02(7, 7),
    /**
     * <code>LA_ACTION_RFU03 = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    LA_ACTION_RFU03(8, 8),
    /**
     * <code>LA_ACTION_RFU04 = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    LA_ACTION_RFU04(9, 9),
    /**
     * <code>LA_ACTION_RFU05 = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    LA_ACTION_RFU05(10, 10),
    ;

    /**
     * <code>LA_ACTION_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int LA_ACTION_NONE_VALUE = 0;
    /**
     * <code>LA_ACTION_ALARM_STATE = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int LA_ACTION_ALARM_STATE_VALUE = 1;
    /**
     * <code>LA_ACTION_SET_ZIGBEE_KEY = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int LA_ACTION_SET_ZIGBEE_KEY_VALUE = 2;
    /**
     * <code>LA_ACTION_RESET_DEFAULT = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int LA_ACTION_RESET_DEFAULT_VALUE = 3;
    /**
     * <code>LA_ACTION_ACTIVE_CONFIG = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int LA_ACTION_ACTIVE_CONFIG_VALUE = 4;
    /**
     * <code>LA_ACTION_ENTER_STOCK = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int LA_ACTION_ENTER_STOCK_VALUE = 5;
    /**
     * <code>LA_ACTION_RFU01 = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int LA_ACTION_RFU01_VALUE = 6;
    /**
     * <code>LA_ACTION_RFU02 = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int LA_ACTION_RFU02_VALUE = 7;
    /**
     * <code>LA_ACTION_RFU03 = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int LA_ACTION_RFU03_VALUE = 8;
    /**
     * <code>LA_ACTION_RFU04 = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int LA_ACTION_RFU04_VALUE = 9;
    /**
     * <code>LA_ACTION_RFU05 = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int LA_ACTION_RFU05_VALUE = 10;


    public final int getNumber() { return value; }

    public static LoraActionID valueOf(int value) {
      switch (value) {
        case 0: return LA_ACTION_NONE;
        case 1: return LA_ACTION_ALARM_STATE;
        case 2: return LA_ACTION_SET_ZIGBEE_KEY;
        case 3: return LA_ACTION_RESET_DEFAULT;
        case 4: return LA_ACTION_ACTIVE_CONFIG;
        case 5: return LA_ACTION_ENTER_STOCK;
        case 6: return LA_ACTION_RFU01;
        case 7: return LA_ACTION_RFU02;
        case 8: return LA_ACTION_RFU03;
        case 9: return LA_ACTION_RFU04;
        case 10: return LA_ACTION_RFU05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LoraActionID>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LoraActionID>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LoraActionID>() {
            public LoraActionID findValueByNumber(int number) {
              return LoraActionID.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbLora.getDescriptor().getEnumTypes().get(8);
    }

    private static final LoraActionID[] VALUES = values();

    public static LoraActionID valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private LoraActionID(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.LoraActionID)
  }

  public interface LoraRadioInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.LoraRadioInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional sint32 RSSI = 1;</code>
     *
     * <pre>
     *&#47; 10 * dBm SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasRSSI();
    /**
     * <code>optional sint32 RSSI = 1;</code>
     *
     * <pre>
     *&#47; 10 * dBm SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getRSSI();

    /**
     * <code>optional sint32 SNR = 2;</code>
     *
     * <pre>
     *&#47; 10 * dB SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasSNR();
    /**
     * <code>optional sint32 SNR = 2;</code>
     *
     * <pre>
     *&#47; 10 * dB SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getSNR();

    /**
     * <code>optional uint32 channel = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasChannel();
    /**
     * <code>optional uint32 channel = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getChannel();

    /**
     * <code>optional uint32 frequency = 4;</code>
     *
     * <pre>
     *&#47; KHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasFrequency();
    /**
     * <code>optional uint32 frequency = 4;</code>
     *
     * <pre>
     *&#47; KHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getFrequency();

    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasSF();
    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraSpreadingFactor getSF();

    /**
     * <code>optional .maxpb.LoraCodingRate CR = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasCR();
    /**
     * <code>optional .maxpb.LoraCodingRate CR = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraCodingRate getCR();

    /**
     * <code>optional .maxpb.LoraBandwidth BW = 8;</code>
     *
     * <pre>
     *&#47; optional uint32 BW           = 7;  /// kHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasBW();
    /**
     * <code>optional .maxpb.LoraBandwidth BW = 8;</code>
     *
     * <pre>
     *&#47; optional uint32 BW           = 7;  /// kHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraBandwidth getBW();
  }
  /**
   * Protobuf type {@code maxpb.LoraRadioInfo}
   */
  public static final class LoraRadioInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.LoraRadioInfo)
      LoraRadioInfoOrBuilder {
    // Use LoraRadioInfo.newBuilder() to construct.
    private LoraRadioInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LoraRadioInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LoraRadioInfo defaultInstance;
    public static LoraRadioInfo getDefaultInstance() {
      return defaultInstance;
    }

    public LoraRadioInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LoraRadioInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rSSI_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sNR_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              channel_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              frequency_ = input.readUInt32();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraSpreadingFactor value = maxpb.MaxpbLora.LoraSpreadingFactor.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                sF_ = value;
              }
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraCodingRate value = maxpb.MaxpbLora.LoraCodingRate.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                cR_ = value;
              }
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraBandwidth value = maxpb.MaxpbLora.LoraBandwidth.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                bW_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraRadioInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraRadioInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbLora.LoraRadioInfo.class, maxpb.MaxpbLora.LoraRadioInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<LoraRadioInfo> PARSER =
        new com.google.protobuf.AbstractParser<LoraRadioInfo>() {
      public LoraRadioInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LoraRadioInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LoraRadioInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int RSSI_FIELD_NUMBER = 1;
    private int rSSI_;
    /**
     * <code>optional sint32 RSSI = 1;</code>
     *
     * <pre>
     *&#47; 10 * dBm SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasRSSI() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sint32 RSSI = 1;</code>
     *
     * <pre>
     *&#47; 10 * dBm SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getRSSI() {
      return rSSI_;
    }

    public static final int SNR_FIELD_NUMBER = 2;
    private int sNR_;
    /**
     * <code>optional sint32 SNR = 2;</code>
     *
     * <pre>
     *&#47; 10 * dB SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasSNR() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 SNR = 2;</code>
     *
     * <pre>
     *&#47; 10 * dB SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getSNR() {
      return sNR_;
    }

    public static final int CHANNEL_FIELD_NUMBER = 3;
    private int channel_;
    /**
     * <code>optional uint32 channel = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 channel = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getChannel() {
      return channel_;
    }

    public static final int FREQUENCY_FIELD_NUMBER = 4;
    private int frequency_;
    /**
     * <code>optional uint32 frequency = 4;</code>
     *
     * <pre>
     *&#47; KHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasFrequency() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 frequency = 4;</code>
     *
     * <pre>
     *&#47; KHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getFrequency() {
      return frequency_;
    }

    public static final int SF_FIELD_NUMBER = 5;
    private maxpb.MaxpbLora.LoraSpreadingFactor sF_;
    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasSF() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraSpreadingFactor getSF() {
      return sF_;
    }

    public static final int CR_FIELD_NUMBER = 6;
    private maxpb.MaxpbLora.LoraCodingRate cR_;
    /**
     * <code>optional .maxpb.LoraCodingRate CR = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasCR() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .maxpb.LoraCodingRate CR = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraCodingRate getCR() {
      return cR_;
    }

    public static final int BW_FIELD_NUMBER = 8;
    private maxpb.MaxpbLora.LoraBandwidth bW_;
    /**
     * <code>optional .maxpb.LoraBandwidth BW = 8;</code>
     *
     * <pre>
     *&#47; optional uint32 BW           = 7;  /// kHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasBW() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .maxpb.LoraBandwidth BW = 8;</code>
     *
     * <pre>
     *&#47; optional uint32 BW           = 7;  /// kHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraBandwidth getBW() {
      return bW_;
    }

    private void initFields() {
      rSSI_ = 0;
      sNR_ = 0;
      channel_ = 0;
      frequency_ = 0;
      sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
      cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
      bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, rSSI_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, sNR_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, channel_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, frequency_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, sF_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, cR_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(8, bW_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, rSSI_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, sNR_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, channel_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, frequency_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, sF_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, cR_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, bW_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbLora.LoraRadioInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraRadioInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraRadioInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraRadioInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraRadioInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraRadioInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraRadioInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbLora.LoraRadioInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraRadioInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraRadioInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbLora.LoraRadioInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.LoraRadioInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.LoraRadioInfo)
        maxpb.MaxpbLora.LoraRadioInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraRadioInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraRadioInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbLora.LoraRadioInfo.class, maxpb.MaxpbLora.LoraRadioInfo.Builder.class);
      }

      // Construct using maxpb.MaxpbLora.LoraRadioInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        rSSI_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sNR_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        channel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        frequency_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
        bitField0_ = (bitField0_ & ~0x00000010);
        cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00000020);
        bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraRadioInfo_descriptor;
      }

      public maxpb.MaxpbLora.LoraRadioInfo getDefaultInstanceForType() {
        return maxpb.MaxpbLora.LoraRadioInfo.getDefaultInstance();
      }

      public maxpb.MaxpbLora.LoraRadioInfo build() {
        maxpb.MaxpbLora.LoraRadioInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbLora.LoraRadioInfo buildPartial() {
        maxpb.MaxpbLora.LoraRadioInfo result = new maxpb.MaxpbLora.LoraRadioInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rSSI_ = rSSI_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sNR_ = sNR_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.frequency_ = frequency_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.sF_ = sF_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.cR_ = cR_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.bW_ = bW_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbLora.LoraRadioInfo) {
          return mergeFrom((maxpb.MaxpbLora.LoraRadioInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbLora.LoraRadioInfo other) {
        if (other == maxpb.MaxpbLora.LoraRadioInfo.getDefaultInstance()) return this;
        if (other.hasRSSI()) {
          setRSSI(other.getRSSI());
        }
        if (other.hasSNR()) {
          setSNR(other.getSNR());
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasFrequency()) {
          setFrequency(other.getFrequency());
        }
        if (other.hasSF()) {
          setSF(other.getSF());
        }
        if (other.hasCR()) {
          setCR(other.getCR());
        }
        if (other.hasBW()) {
          setBW(other.getBW());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbLora.LoraRadioInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbLora.LoraRadioInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int rSSI_ ;
      /**
       * <code>optional sint32 RSSI = 1;</code>
       *
       * <pre>
       *&#47; 10 * dBm SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasRSSI() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional sint32 RSSI = 1;</code>
       *
       * <pre>
       *&#47; 10 * dBm SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getRSSI() {
        return rSSI_;
      }
      /**
       * <code>optional sint32 RSSI = 1;</code>
       *
       * <pre>
       *&#47; 10 * dBm SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setRSSI(int value) {
        bitField0_ |= 0x00000001;
        rSSI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 RSSI = 1;</code>
       *
       * <pre>
       *&#47; 10 * dBm SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearRSSI() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rSSI_ = 0;
        onChanged();
        return this;
      }

      private int sNR_ ;
      /**
       * <code>optional sint32 SNR = 2;</code>
       *
       * <pre>
       *&#47; 10 * dB SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasSNR() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 SNR = 2;</code>
       *
       * <pre>
       *&#47; 10 * dB SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getSNR() {
        return sNR_;
      }
      /**
       * <code>optional sint32 SNR = 2;</code>
       *
       * <pre>
       *&#47; 10 * dB SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setSNR(int value) {
        bitField0_ |= 0x00000002;
        sNR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 SNR = 2;</code>
       *
       * <pre>
       *&#47; 10 * dB SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearSNR() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sNR_ = 0;
        onChanged();
        return this;
      }

      private int channel_ ;
      /**
       * <code>optional uint32 channel = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 channel = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getChannel() {
        return channel_;
      }
      /**
       * <code>optional uint32 channel = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setChannel(int value) {
        bitField0_ |= 0x00000004;
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 channel = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        channel_ = 0;
        onChanged();
        return this;
      }

      private int frequency_ ;
      /**
       * <code>optional uint32 frequency = 4;</code>
       *
       * <pre>
       *&#47; KHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasFrequency() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 frequency = 4;</code>
       *
       * <pre>
       *&#47; KHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getFrequency() {
        return frequency_;
      }
      /**
       * <code>optional uint32 frequency = 4;</code>
       *
       * <pre>
       *&#47; KHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setFrequency(int value) {
        bitField0_ |= 0x00000008;
        frequency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 frequency = 4;</code>
       *
       * <pre>
       *&#47; KHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearFrequency() {
        bitField0_ = (bitField0_ & ~0x00000008);
        frequency_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraSpreadingFactor sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasSF() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraSpreadingFactor getSF() {
        return sF_;
      }
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setSF(maxpb.MaxpbLora.LoraSpreadingFactor value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        sF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearSF() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraCodingRate cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasCR() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraCodingRate getCR() {
        return cR_;
      }
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setCR(maxpb.MaxpbLora.LoraCodingRate value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        cR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearCR() {
        bitField0_ = (bitField0_ & ~0x00000020);
        cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraBandwidth bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 8;</code>
       *
       * <pre>
       *&#47; optional uint32 BW           = 7;  /// kHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasBW() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 8;</code>
       *
       * <pre>
       *&#47; optional uint32 BW           = 7;  /// kHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraBandwidth getBW() {
        return bW_;
      }
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 8;</code>
       *
       * <pre>
       *&#47; optional uint32 BW           = 7;  /// kHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setBW(maxpb.MaxpbLora.LoraBandwidth value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        bW_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 8;</code>
       *
       * <pre>
       *&#47; optional uint32 BW           = 7;  /// kHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearBW() {
        bitField0_ = (bitField0_ & ~0x00000040);
        bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.LoraRadioInfo)
    }

    static {
      defaultInstance = new LoraRadioInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.LoraRadioInfo)
  }

  public interface LoraDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.LoraData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 loraID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasLoraID();
    /**
     * <code>required uint32 loraID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getLoraID();

    /**
     * <code>required uint32 sequenceNumber = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasSequenceNumber();
    /**
     * <code>required uint32 sequenceNumber = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getSequenceNumber();

    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasIdentificationPack();
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbReport.IDPack getIdentificationPack();
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbReport.IDPackOrBuilder getIdentificationPackOrBuilder();

    /**
     * <code>optional .maxpb.LoraRadioInfo loraRadio = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasLoraRadio();
    /**
     * <code>optional .maxpb.LoraRadioInfo loraRadio = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraRadioInfo getLoraRadio();
    /**
     * <code>optional .maxpb.LoraRadioInfo loraRadio = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraRadioInfoOrBuilder getLoraRadioOrBuilder();

    /**
     * <code>repeated .maxpb.PositionInfo position = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    java.util.List<maxpb.MaxpbReport.PositionInfo> 
        getPositionList();
    /**
     * <code>repeated .maxpb.PositionInfo position = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbReport.PositionInfo getPosition(int index);
    /**
     * <code>repeated .maxpb.PositionInfo position = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getPositionCount();
    /**
     * <code>repeated .maxpb.PositionInfo position = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbReport.PositionInfoOrBuilder> 
        getPositionOrBuilderList();
    /**
     * <code>repeated .maxpb.PositionInfo position = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbReport.PositionInfoOrBuilder getPositionOrBuilder(
        int index);

    /**
     * <code>optional .maxpb.IOsInfo ios = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasIos();
    /**
     * <code>optional .maxpb.IOsInfo ios = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbGpio.IOsInfo getIos();
    /**
     * <code>optional .maxpb.IOsInfo ios = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbGpio.IOsInfoOrBuilder getIosOrBuilder();

    /**
     * <code>optional .maxpb.FlagsInfo flags = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasFlags();
    /**
     * <code>optional .maxpb.FlagsInfo flags = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbReport.FlagsInfo getFlags();
    /**
     * <code>optional .maxpb.FlagsInfo flags = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbReport.FlagsInfoOrBuilder getFlagsOrBuilder();

    /**
     * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasTelemetry();
    /**
     * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbTelemetry.TelemetryInfo getTelemetry();
    /**
     * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbTelemetry.TelemetryInfoOrBuilder getTelemetryOrBuilder();

    /**
     * <code>optional uint64 gatewayDateTime = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasGatewayDateTime();
    /**
     * <code>optional uint64 gatewayDateTime = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    long getGatewayDateTime();

    /**
     * <code>optional uint64 gatewayDeviceId = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasGatewayDeviceId();
    /**
     * <code>optional uint64 gatewayDeviceId = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    long getGatewayDeviceId();

    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    java.util.List<maxpb.MaxpbReport.PositionInfo> 
        getGatewayPositionList();
    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    maxpb.MaxpbReport.PositionInfo getGatewayPosition(int index);
    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getGatewayPositionCount();
    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbReport.PositionInfoOrBuilder> 
        getGatewayPositionOrBuilderList();
    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    maxpb.MaxpbReport.PositionInfoOrBuilder getGatewayPositionOrBuilder(
        int index);

    /**
     * <code>optional .maxpb.LoraNetwork loraNetwork = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasLoraNetwork();
    /**
     * <code>optional .maxpb.LoraNetwork loraNetwork = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraNetwork getLoraNetwork();

    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    boolean hasCustomerData();
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    maxpb.MaxpbCustomerData.CustomerData getCustomerData();
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    maxpb.MaxpbCustomerData.CustomerDataOrBuilder getCustomerDataOrBuilder();
  }
  /**
   * Protobuf type {@code maxpb.LoraData}
   */
  public static final class LoraData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.LoraData)
      LoraDataOrBuilder {
    // Use LoraData.newBuilder() to construct.
    private LoraData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LoraData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LoraData defaultInstance;
    public static LoraData getDefaultInstance() {
      return defaultInstance;
    }

    public LoraData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LoraData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              loraID_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sequenceNumber_ = input.readUInt32();
              break;
            }
            case 26: {
              maxpb.MaxpbReport.IDPack.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = identificationPack_.toBuilder();
              }
              identificationPack_ = input.readMessage(maxpb.MaxpbReport.IDPack.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(identificationPack_);
                identificationPack_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              maxpb.MaxpbLora.LoraRadioInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = loraRadio_.toBuilder();
              }
              loraRadio_ = input.readMessage(maxpb.MaxpbLora.LoraRadioInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(loraRadio_);
                loraRadio_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                position_ = new java.util.ArrayList<maxpb.MaxpbReport.PositionInfo>();
                mutable_bitField0_ |= 0x00000010;
              }
              position_.add(input.readMessage(maxpb.MaxpbReport.PositionInfo.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              maxpb.MaxpbGpio.IOsInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = ios_.toBuilder();
              }
              ios_ = input.readMessage(maxpb.MaxpbGpio.IOsInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ios_);
                ios_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 58: {
              maxpb.MaxpbReport.FlagsInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = flags_.toBuilder();
              }
              flags_ = input.readMessage(maxpb.MaxpbReport.FlagsInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(flags_);
                flags_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 66: {
              maxpb.MaxpbTelemetry.TelemetryInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = telemetry_.toBuilder();
              }
              telemetry_ = input.readMessage(maxpb.MaxpbTelemetry.TelemetryInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(telemetry_);
                telemetry_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              gatewayDateTime_ = input.readUInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              gatewayDeviceId_ = input.readUInt64();
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                gatewayPosition_ = new java.util.ArrayList<maxpb.MaxpbReport.PositionInfo>();
                mutable_bitField0_ |= 0x00000400;
              }
              gatewayPosition_.add(input.readMessage(maxpb.MaxpbReport.PositionInfo.PARSER, extensionRegistry));
              break;
            }
            case 96: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraNetwork value = maxpb.MaxpbLora.LoraNetwork.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(12, rawValue);
              } else {
                bitField0_ |= 0x00000200;
                loraNetwork_ = value;
              }
              break;
            }
            case 1026: {
              maxpb.MaxpbCustomerData.CustomerData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = customerData_.toBuilder();
              }
              customerData_ = input.readMessage(maxpb.MaxpbCustomerData.CustomerData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(customerData_);
                customerData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          position_ = java.util.Collections.unmodifiableList(position_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          gatewayPosition_ = java.util.Collections.unmodifiableList(gatewayPosition_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbLora.LoraData.class, maxpb.MaxpbLora.LoraData.Builder.class);
    }

    public static com.google.protobuf.Parser<LoraData> PARSER =
        new com.google.protobuf.AbstractParser<LoraData>() {
      public LoraData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LoraData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LoraData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LORAID_FIELD_NUMBER = 1;
    private int loraID_;
    /**
     * <code>required uint32 loraID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasLoraID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 loraID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getLoraID() {
      return loraID_;
    }

    public static final int SEQUENCENUMBER_FIELD_NUMBER = 2;
    private int sequenceNumber_;
    /**
     * <code>required uint32 sequenceNumber = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasSequenceNumber() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 sequenceNumber = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getSequenceNumber() {
      return sequenceNumber_;
    }

    public static final int IDENTIFICATIONPACK_FIELD_NUMBER = 3;
    private maxpb.MaxpbReport.IDPack identificationPack_;
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasIdentificationPack() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbReport.IDPack getIdentificationPack() {
      return identificationPack_;
    }
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbReport.IDPackOrBuilder getIdentificationPackOrBuilder() {
      return identificationPack_;
    }

    public static final int LORARADIO_FIELD_NUMBER = 4;
    private maxpb.MaxpbLora.LoraRadioInfo loraRadio_;
    /**
     * <code>optional .maxpb.LoraRadioInfo loraRadio = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasLoraRadio() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .maxpb.LoraRadioInfo loraRadio = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraRadioInfo getLoraRadio() {
      return loraRadio_;
    }
    /**
     * <code>optional .maxpb.LoraRadioInfo loraRadio = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraRadioInfoOrBuilder getLoraRadioOrBuilder() {
      return loraRadio_;
    }

    public static final int POSITION_FIELD_NUMBER = 5;
    private java.util.List<maxpb.MaxpbReport.PositionInfo> position_;
    /**
     * <code>repeated .maxpb.PositionInfo position = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public java.util.List<maxpb.MaxpbReport.PositionInfo> getPositionList() {
      return position_;
    }
    /**
     * <code>repeated .maxpb.PositionInfo position = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbReport.PositionInfoOrBuilder> 
        getPositionOrBuilderList() {
      return position_;
    }
    /**
     * <code>repeated .maxpb.PositionInfo position = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getPositionCount() {
      return position_.size();
    }
    /**
     * <code>repeated .maxpb.PositionInfo position = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbReport.PositionInfo getPosition(int index) {
      return position_.get(index);
    }
    /**
     * <code>repeated .maxpb.PositionInfo position = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbReport.PositionInfoOrBuilder getPositionOrBuilder(
        int index) {
      return position_.get(index);
    }

    public static final int IOS_FIELD_NUMBER = 6;
    private maxpb.MaxpbGpio.IOsInfo ios_;
    /**
     * <code>optional .maxpb.IOsInfo ios = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasIos() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .maxpb.IOsInfo ios = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbGpio.IOsInfo getIos() {
      return ios_;
    }
    /**
     * <code>optional .maxpb.IOsInfo ios = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbGpio.IOsInfoOrBuilder getIosOrBuilder() {
      return ios_;
    }

    public static final int FLAGS_FIELD_NUMBER = 7;
    private maxpb.MaxpbReport.FlagsInfo flags_;
    /**
     * <code>optional .maxpb.FlagsInfo flags = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasFlags() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .maxpb.FlagsInfo flags = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbReport.FlagsInfo getFlags() {
      return flags_;
    }
    /**
     * <code>optional .maxpb.FlagsInfo flags = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbReport.FlagsInfoOrBuilder getFlagsOrBuilder() {
      return flags_;
    }

    public static final int TELEMETRY_FIELD_NUMBER = 8;
    private maxpb.MaxpbTelemetry.TelemetryInfo telemetry_;
    /**
     * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasTelemetry() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbTelemetry.TelemetryInfo getTelemetry() {
      return telemetry_;
    }
    /**
     * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbTelemetry.TelemetryInfoOrBuilder getTelemetryOrBuilder() {
      return telemetry_;
    }

    public static final int GATEWAYDATETIME_FIELD_NUMBER = 9;
    private long gatewayDateTime_;
    /**
     * <code>optional uint64 gatewayDateTime = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasGatewayDateTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint64 gatewayDateTime = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public long getGatewayDateTime() {
      return gatewayDateTime_;
    }

    public static final int GATEWAYDEVICEID_FIELD_NUMBER = 10;
    private long gatewayDeviceId_;
    /**
     * <code>optional uint64 gatewayDeviceId = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasGatewayDeviceId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint64 gatewayDeviceId = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public long getGatewayDeviceId() {
      return gatewayDeviceId_;
    }

    public static final int GATEWAYPOSITION_FIELD_NUMBER = 11;
    private java.util.List<maxpb.MaxpbReport.PositionInfo> gatewayPosition_;
    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public java.util.List<maxpb.MaxpbReport.PositionInfo> getGatewayPositionList() {
      return gatewayPosition_;
    }
    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbReport.PositionInfoOrBuilder> 
        getGatewayPositionOrBuilderList() {
      return gatewayPosition_;
    }
    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getGatewayPositionCount() {
      return gatewayPosition_.size();
    }
    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public maxpb.MaxpbReport.PositionInfo getGatewayPosition(int index) {
      return gatewayPosition_.get(index);
    }
    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public maxpb.MaxpbReport.PositionInfoOrBuilder getGatewayPositionOrBuilder(
        int index) {
      return gatewayPosition_.get(index);
    }

    public static final int LORANETWORK_FIELD_NUMBER = 12;
    private maxpb.MaxpbLora.LoraNetwork loraNetwork_;
    /**
     * <code>optional .maxpb.LoraNetwork loraNetwork = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasLoraNetwork() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .maxpb.LoraNetwork loraNetwork = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraNetwork getLoraNetwork() {
      return loraNetwork_;
    }

    public static final int CUSTOMERDATA_FIELD_NUMBER = 128;
    private maxpb.MaxpbCustomerData.CustomerData customerData_;
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    public boolean hasCustomerData() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    public maxpb.MaxpbCustomerData.CustomerData getCustomerData() {
      return customerData_;
    }
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    public maxpb.MaxpbCustomerData.CustomerDataOrBuilder getCustomerDataOrBuilder() {
      return customerData_;
    }

    private void initFields() {
      loraID_ = 0;
      sequenceNumber_ = 0;
      identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
      loraRadio_ = maxpb.MaxpbLora.LoraRadioInfo.getDefaultInstance();
      position_ = java.util.Collections.emptyList();
      ios_ = maxpb.MaxpbGpio.IOsInfo.getDefaultInstance();
      flags_ = maxpb.MaxpbReport.FlagsInfo.getDefaultInstance();
      telemetry_ = maxpb.MaxpbTelemetry.TelemetryInfo.getDefaultInstance();
      gatewayDateTime_ = 0L;
      gatewayDeviceId_ = 0L;
      gatewayPosition_ = java.util.Collections.emptyList();
      loraNetwork_ = maxpb.MaxpbLora.LoraNetwork.LN_UNKNOWN;
      customerData_ = maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasLoraID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSequenceNumber()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPositionCount(); i++) {
        if (!getPosition(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTelemetry()) {
        if (!getTelemetry().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getGatewayPositionCount(); i++) {
        if (!getGatewayPosition(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, loraID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, sequenceNumber_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, identificationPack_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, loraRadio_);
      }
      for (int i = 0; i < position_.size(); i++) {
        output.writeMessage(5, position_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(6, ios_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, flags_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(8, telemetry_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt64(9, gatewayDateTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt64(10, gatewayDeviceId_);
      }
      for (int i = 0; i < gatewayPosition_.size(); i++) {
        output.writeMessage(11, gatewayPosition_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeEnum(12, loraNetwork_.getNumber());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(128, customerData_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, loraID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, sequenceNumber_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, identificationPack_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, loraRadio_);
      }
      for (int i = 0; i < position_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, position_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, ios_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, flags_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, telemetry_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, gatewayDateTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, gatewayDeviceId_);
      }
      for (int i = 0; i < gatewayPosition_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, gatewayPosition_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, loraNetwork_.getNumber());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(128, customerData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbLora.LoraData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbLora.LoraData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbLora.LoraData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.LoraData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.LoraData)
        maxpb.MaxpbLora.LoraDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbLora.LoraData.class, maxpb.MaxpbLora.LoraData.Builder.class);
      }

      // Construct using maxpb.MaxpbLora.LoraData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIdentificationPackFieldBuilder();
          getLoraRadioFieldBuilder();
          getPositionFieldBuilder();
          getIosFieldBuilder();
          getFlagsFieldBuilder();
          getTelemetryFieldBuilder();
          getGatewayPositionFieldBuilder();
          getCustomerDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        loraID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sequenceNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (identificationPackBuilder_ == null) {
          identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
        } else {
          identificationPackBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (loraRadioBuilder_ == null) {
          loraRadio_ = maxpb.MaxpbLora.LoraRadioInfo.getDefaultInstance();
        } else {
          loraRadioBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (positionBuilder_ == null) {
          position_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          positionBuilder_.clear();
        }
        if (iosBuilder_ == null) {
          ios_ = maxpb.MaxpbGpio.IOsInfo.getDefaultInstance();
        } else {
          iosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (flagsBuilder_ == null) {
          flags_ = maxpb.MaxpbReport.FlagsInfo.getDefaultInstance();
        } else {
          flagsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (telemetryBuilder_ == null) {
          telemetry_ = maxpb.MaxpbTelemetry.TelemetryInfo.getDefaultInstance();
        } else {
          telemetryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        gatewayDateTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        gatewayDeviceId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        if (gatewayPositionBuilder_ == null) {
          gatewayPosition_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          gatewayPositionBuilder_.clear();
        }
        loraNetwork_ = maxpb.MaxpbLora.LoraNetwork.LN_UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00000800);
        if (customerDataBuilder_ == null) {
          customerData_ = maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance();
        } else {
          customerDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraData_descriptor;
      }

      public maxpb.MaxpbLora.LoraData getDefaultInstanceForType() {
        return maxpb.MaxpbLora.LoraData.getDefaultInstance();
      }

      public maxpb.MaxpbLora.LoraData build() {
        maxpb.MaxpbLora.LoraData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbLora.LoraData buildPartial() {
        maxpb.MaxpbLora.LoraData result = new maxpb.MaxpbLora.LoraData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.loraID_ = loraID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sequenceNumber_ = sequenceNumber_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (identificationPackBuilder_ == null) {
          result.identificationPack_ = identificationPack_;
        } else {
          result.identificationPack_ = identificationPackBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (loraRadioBuilder_ == null) {
          result.loraRadio_ = loraRadio_;
        } else {
          result.loraRadio_ = loraRadioBuilder_.build();
        }
        if (positionBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            position_ = java.util.Collections.unmodifiableList(position_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        if (iosBuilder_ == null) {
          result.ios_ = ios_;
        } else {
          result.ios_ = iosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        if (flagsBuilder_ == null) {
          result.flags_ = flags_;
        } else {
          result.flags_ = flagsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        if (telemetryBuilder_ == null) {
          result.telemetry_ = telemetry_;
        } else {
          result.telemetry_ = telemetryBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.gatewayDateTime_ = gatewayDateTime_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.gatewayDeviceId_ = gatewayDeviceId_;
        if (gatewayPositionBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            gatewayPosition_ = java.util.Collections.unmodifiableList(gatewayPosition_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.gatewayPosition_ = gatewayPosition_;
        } else {
          result.gatewayPosition_ = gatewayPositionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000200;
        }
        result.loraNetwork_ = loraNetwork_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000400;
        }
        if (customerDataBuilder_ == null) {
          result.customerData_ = customerData_;
        } else {
          result.customerData_ = customerDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbLora.LoraData) {
          return mergeFrom((maxpb.MaxpbLora.LoraData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbLora.LoraData other) {
        if (other == maxpb.MaxpbLora.LoraData.getDefaultInstance()) return this;
        if (other.hasLoraID()) {
          setLoraID(other.getLoraID());
        }
        if (other.hasSequenceNumber()) {
          setSequenceNumber(other.getSequenceNumber());
        }
        if (other.hasIdentificationPack()) {
          mergeIdentificationPack(other.getIdentificationPack());
        }
        if (other.hasLoraRadio()) {
          mergeLoraRadio(other.getLoraRadio());
        }
        if (positionBuilder_ == null) {
          if (!other.position_.isEmpty()) {
            if (position_.isEmpty()) {
              position_ = other.position_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensurePositionIsMutable();
              position_.addAll(other.position_);
            }
            onChanged();
          }
        } else {
          if (!other.position_.isEmpty()) {
            if (positionBuilder_.isEmpty()) {
              positionBuilder_.dispose();
              positionBuilder_ = null;
              position_ = other.position_;
              bitField0_ = (bitField0_ & ~0x00000010);
              positionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPositionFieldBuilder() : null;
            } else {
              positionBuilder_.addAllMessages(other.position_);
            }
          }
        }
        if (other.hasIos()) {
          mergeIos(other.getIos());
        }
        if (other.hasFlags()) {
          mergeFlags(other.getFlags());
        }
        if (other.hasTelemetry()) {
          mergeTelemetry(other.getTelemetry());
        }
        if (other.hasGatewayDateTime()) {
          setGatewayDateTime(other.getGatewayDateTime());
        }
        if (other.hasGatewayDeviceId()) {
          setGatewayDeviceId(other.getGatewayDeviceId());
        }
        if (gatewayPositionBuilder_ == null) {
          if (!other.gatewayPosition_.isEmpty()) {
            if (gatewayPosition_.isEmpty()) {
              gatewayPosition_ = other.gatewayPosition_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureGatewayPositionIsMutable();
              gatewayPosition_.addAll(other.gatewayPosition_);
            }
            onChanged();
          }
        } else {
          if (!other.gatewayPosition_.isEmpty()) {
            if (gatewayPositionBuilder_.isEmpty()) {
              gatewayPositionBuilder_.dispose();
              gatewayPositionBuilder_ = null;
              gatewayPosition_ = other.gatewayPosition_;
              bitField0_ = (bitField0_ & ~0x00000400);
              gatewayPositionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGatewayPositionFieldBuilder() : null;
            } else {
              gatewayPositionBuilder_.addAllMessages(other.gatewayPosition_);
            }
          }
        }
        if (other.hasLoraNetwork()) {
          setLoraNetwork(other.getLoraNetwork());
        }
        if (other.hasCustomerData()) {
          mergeCustomerData(other.getCustomerData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLoraID()) {
          
          return false;
        }
        if (!hasSequenceNumber()) {
          
          return false;
        }
        for (int i = 0; i < getPositionCount(); i++) {
          if (!getPosition(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasTelemetry()) {
          if (!getTelemetry().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getGatewayPositionCount(); i++) {
          if (!getGatewayPosition(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbLora.LoraData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbLora.LoraData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int loraID_ ;
      /**
       * <code>required uint32 loraID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasLoraID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 loraID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getLoraID() {
        return loraID_;
      }
      /**
       * <code>required uint32 loraID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setLoraID(int value) {
        bitField0_ |= 0x00000001;
        loraID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 loraID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearLoraID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        loraID_ = 0;
        onChanged();
        return this;
      }

      private int sequenceNumber_ ;
      /**
       * <code>required uint32 sequenceNumber = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasSequenceNumber() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 sequenceNumber = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getSequenceNumber() {
        return sequenceNumber_;
      }
      /**
       * <code>required uint32 sequenceNumber = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setSequenceNumber(int value) {
        bitField0_ |= 0x00000002;
        sequenceNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 sequenceNumber = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearSequenceNumber() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sequenceNumber_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbReport.IDPack identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.IDPack, maxpb.MaxpbReport.IDPack.Builder, maxpb.MaxpbReport.IDPackOrBuilder> identificationPackBuilder_;
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasIdentificationPack() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbReport.IDPack getIdentificationPack() {
        if (identificationPackBuilder_ == null) {
          return identificationPack_;
        } else {
          return identificationPackBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setIdentificationPack(maxpb.MaxpbReport.IDPack value) {
        if (identificationPackBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          identificationPack_ = value;
          onChanged();
        } else {
          identificationPackBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setIdentificationPack(
          maxpb.MaxpbReport.IDPack.Builder builderForValue) {
        if (identificationPackBuilder_ == null) {
          identificationPack_ = builderForValue.build();
          onChanged();
        } else {
          identificationPackBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder mergeIdentificationPack(maxpb.MaxpbReport.IDPack value) {
        if (identificationPackBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              identificationPack_ != maxpb.MaxpbReport.IDPack.getDefaultInstance()) {
            identificationPack_ =
              maxpb.MaxpbReport.IDPack.newBuilder(identificationPack_).mergeFrom(value).buildPartial();
          } else {
            identificationPack_ = value;
          }
          onChanged();
        } else {
          identificationPackBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearIdentificationPack() {
        if (identificationPackBuilder_ == null) {
          identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
          onChanged();
        } else {
          identificationPackBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbReport.IDPack.Builder getIdentificationPackBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getIdentificationPackFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbReport.IDPackOrBuilder getIdentificationPackOrBuilder() {
        if (identificationPackBuilder_ != null) {
          return identificationPackBuilder_.getMessageOrBuilder();
        } else {
          return identificationPack_;
        }
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.IDPack, maxpb.MaxpbReport.IDPack.Builder, maxpb.MaxpbReport.IDPackOrBuilder> 
          getIdentificationPackFieldBuilder() {
        if (identificationPackBuilder_ == null) {
          identificationPackBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbReport.IDPack, maxpb.MaxpbReport.IDPack.Builder, maxpb.MaxpbReport.IDPackOrBuilder>(
                  getIdentificationPack(),
                  getParentForChildren(),
                  isClean());
          identificationPack_ = null;
        }
        return identificationPackBuilder_;
      }

      private maxpb.MaxpbLora.LoraRadioInfo loraRadio_ = maxpb.MaxpbLora.LoraRadioInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbLora.LoraRadioInfo, maxpb.MaxpbLora.LoraRadioInfo.Builder, maxpb.MaxpbLora.LoraRadioInfoOrBuilder> loraRadioBuilder_;
      /**
       * <code>optional .maxpb.LoraRadioInfo loraRadio = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasLoraRadio() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .maxpb.LoraRadioInfo loraRadio = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraRadioInfo getLoraRadio() {
        if (loraRadioBuilder_ == null) {
          return loraRadio_;
        } else {
          return loraRadioBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.LoraRadioInfo loraRadio = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setLoraRadio(maxpb.MaxpbLora.LoraRadioInfo value) {
        if (loraRadioBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          loraRadio_ = value;
          onChanged();
        } else {
          loraRadioBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraRadioInfo loraRadio = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setLoraRadio(
          maxpb.MaxpbLora.LoraRadioInfo.Builder builderForValue) {
        if (loraRadioBuilder_ == null) {
          loraRadio_ = builderForValue.build();
          onChanged();
        } else {
          loraRadioBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraRadioInfo loraRadio = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder mergeLoraRadio(maxpb.MaxpbLora.LoraRadioInfo value) {
        if (loraRadioBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              loraRadio_ != maxpb.MaxpbLora.LoraRadioInfo.getDefaultInstance()) {
            loraRadio_ =
              maxpb.MaxpbLora.LoraRadioInfo.newBuilder(loraRadio_).mergeFrom(value).buildPartial();
          } else {
            loraRadio_ = value;
          }
          onChanged();
        } else {
          loraRadioBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraRadioInfo loraRadio = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearLoraRadio() {
        if (loraRadioBuilder_ == null) {
          loraRadio_ = maxpb.MaxpbLora.LoraRadioInfo.getDefaultInstance();
          onChanged();
        } else {
          loraRadioBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .maxpb.LoraRadioInfo loraRadio = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraRadioInfo.Builder getLoraRadioBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getLoraRadioFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.LoraRadioInfo loraRadio = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraRadioInfoOrBuilder getLoraRadioOrBuilder() {
        if (loraRadioBuilder_ != null) {
          return loraRadioBuilder_.getMessageOrBuilder();
        } else {
          return loraRadio_;
        }
      }
      /**
       * <code>optional .maxpb.LoraRadioInfo loraRadio = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbLora.LoraRadioInfo, maxpb.MaxpbLora.LoraRadioInfo.Builder, maxpb.MaxpbLora.LoraRadioInfoOrBuilder> 
          getLoraRadioFieldBuilder() {
        if (loraRadioBuilder_ == null) {
          loraRadioBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbLora.LoraRadioInfo, maxpb.MaxpbLora.LoraRadioInfo.Builder, maxpb.MaxpbLora.LoraRadioInfoOrBuilder>(
                  getLoraRadio(),
                  getParentForChildren(),
                  isClean());
          loraRadio_ = null;
        }
        return loraRadioBuilder_;
      }

      private java.util.List<maxpb.MaxpbReport.PositionInfo> position_ =
        java.util.Collections.emptyList();
      private void ensurePositionIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          position_ = new java.util.ArrayList<maxpb.MaxpbReport.PositionInfo>(position_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.PositionInfo, maxpb.MaxpbReport.PositionInfo.Builder, maxpb.MaxpbReport.PositionInfoOrBuilder> positionBuilder_;

      /**
       * <code>repeated .maxpb.PositionInfo position = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.PositionInfo> getPositionList() {
        if (positionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(position_);
        } else {
          return positionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo position = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getPositionCount() {
        if (positionBuilder_ == null) {
          return position_.size();
        } else {
          return positionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo position = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo getPosition(int index) {
        if (positionBuilder_ == null) {
          return position_.get(index);
        } else {
          return positionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo position = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setPosition(
          int index, maxpb.MaxpbReport.PositionInfo value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionIsMutable();
          position_.set(index, value);
          onChanged();
        } else {
          positionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo position = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setPosition(
          int index, maxpb.MaxpbReport.PositionInfo.Builder builderForValue) {
        if (positionBuilder_ == null) {
          ensurePositionIsMutable();
          position_.set(index, builderForValue.build());
          onChanged();
        } else {
          positionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo position = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder addPosition(maxpb.MaxpbReport.PositionInfo value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionIsMutable();
          position_.add(value);
          onChanged();
        } else {
          positionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo position = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder addPosition(
          int index, maxpb.MaxpbReport.PositionInfo value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionIsMutable();
          position_.add(index, value);
          onChanged();
        } else {
          positionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo position = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder addPosition(
          maxpb.MaxpbReport.PositionInfo.Builder builderForValue) {
        if (positionBuilder_ == null) {
          ensurePositionIsMutable();
          position_.add(builderForValue.build());
          onChanged();
        } else {
          positionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo position = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder addPosition(
          int index, maxpb.MaxpbReport.PositionInfo.Builder builderForValue) {
        if (positionBuilder_ == null) {
          ensurePositionIsMutable();
          position_.add(index, builderForValue.build());
          onChanged();
        } else {
          positionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo position = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder addAllPosition(
          java.lang.Iterable<? extends maxpb.MaxpbReport.PositionInfo> values) {
        if (positionBuilder_ == null) {
          ensurePositionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, position_);
          onChanged();
        } else {
          positionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo position = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          positionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo position = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder removePosition(int index) {
        if (positionBuilder_ == null) {
          ensurePositionIsMutable();
          position_.remove(index);
          onChanged();
        } else {
          positionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo position = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo.Builder getPositionBuilder(
          int index) {
        return getPositionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.PositionInfo position = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfoOrBuilder getPositionOrBuilder(
          int index) {
        if (positionBuilder_ == null) {
          return position_.get(index);  } else {
          return positionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo position = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbReport.PositionInfoOrBuilder> 
           getPositionOrBuilderList() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(position_);
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo position = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo.Builder addPositionBuilder() {
        return getPositionFieldBuilder().addBuilder(
            maxpb.MaxpbReport.PositionInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.PositionInfo position = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo.Builder addPositionBuilder(
          int index) {
        return getPositionFieldBuilder().addBuilder(
            index, maxpb.MaxpbReport.PositionInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.PositionInfo position = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.PositionInfo.Builder> 
           getPositionBuilderList() {
        return getPositionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.PositionInfo, maxpb.MaxpbReport.PositionInfo.Builder, maxpb.MaxpbReport.PositionInfoOrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbReport.PositionInfo, maxpb.MaxpbReport.PositionInfo.Builder, maxpb.MaxpbReport.PositionInfoOrBuilder>(
                  position_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      private maxpb.MaxpbGpio.IOsInfo ios_ = maxpb.MaxpbGpio.IOsInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbGpio.IOsInfo, maxpb.MaxpbGpio.IOsInfo.Builder, maxpb.MaxpbGpio.IOsInfoOrBuilder> iosBuilder_;
      /**
       * <code>optional .maxpb.IOsInfo ios = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasIos() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbGpio.IOsInfo getIos() {
        if (iosBuilder_ == null) {
          return ios_;
        } else {
          return iosBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setIos(maxpb.MaxpbGpio.IOsInfo value) {
        if (iosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ios_ = value;
          onChanged();
        } else {
          iosBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setIos(
          maxpb.MaxpbGpio.IOsInfo.Builder builderForValue) {
        if (iosBuilder_ == null) {
          ios_ = builderForValue.build();
          onChanged();
        } else {
          iosBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder mergeIos(maxpb.MaxpbGpio.IOsInfo value) {
        if (iosBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              ios_ != maxpb.MaxpbGpio.IOsInfo.getDefaultInstance()) {
            ios_ =
              maxpb.MaxpbGpio.IOsInfo.newBuilder(ios_).mergeFrom(value).buildPartial();
          } else {
            ios_ = value;
          }
          onChanged();
        } else {
          iosBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearIos() {
        if (iosBuilder_ == null) {
          ios_ = maxpb.MaxpbGpio.IOsInfo.getDefaultInstance();
          onChanged();
        } else {
          iosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbGpio.IOsInfo.Builder getIosBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getIosFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbGpio.IOsInfoOrBuilder getIosOrBuilder() {
        if (iosBuilder_ != null) {
          return iosBuilder_.getMessageOrBuilder();
        } else {
          return ios_;
        }
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbGpio.IOsInfo, maxpb.MaxpbGpio.IOsInfo.Builder, maxpb.MaxpbGpio.IOsInfoOrBuilder> 
          getIosFieldBuilder() {
        if (iosBuilder_ == null) {
          iosBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbGpio.IOsInfo, maxpb.MaxpbGpio.IOsInfo.Builder, maxpb.MaxpbGpio.IOsInfoOrBuilder>(
                  getIos(),
                  getParentForChildren(),
                  isClean());
          ios_ = null;
        }
        return iosBuilder_;
      }

      private maxpb.MaxpbReport.FlagsInfo flags_ = maxpb.MaxpbReport.FlagsInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.FlagsInfo, maxpb.MaxpbReport.FlagsInfo.Builder, maxpb.MaxpbReport.FlagsInfoOrBuilder> flagsBuilder_;
      /**
       * <code>optional .maxpb.FlagsInfo flags = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasFlags() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbReport.FlagsInfo getFlags() {
        if (flagsBuilder_ == null) {
          return flags_;
        } else {
          return flagsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setFlags(maxpb.MaxpbReport.FlagsInfo value) {
        if (flagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          flags_ = value;
          onChanged();
        } else {
          flagsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setFlags(
          maxpb.MaxpbReport.FlagsInfo.Builder builderForValue) {
        if (flagsBuilder_ == null) {
          flags_ = builderForValue.build();
          onChanged();
        } else {
          flagsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder mergeFlags(maxpb.MaxpbReport.FlagsInfo value) {
        if (flagsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              flags_ != maxpb.MaxpbReport.FlagsInfo.getDefaultInstance()) {
            flags_ =
              maxpb.MaxpbReport.FlagsInfo.newBuilder(flags_).mergeFrom(value).buildPartial();
          } else {
            flags_ = value;
          }
          onChanged();
        } else {
          flagsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearFlags() {
        if (flagsBuilder_ == null) {
          flags_ = maxpb.MaxpbReport.FlagsInfo.getDefaultInstance();
          onChanged();
        } else {
          flagsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbReport.FlagsInfo.Builder getFlagsBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getFlagsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbReport.FlagsInfoOrBuilder getFlagsOrBuilder() {
        if (flagsBuilder_ != null) {
          return flagsBuilder_.getMessageOrBuilder();
        } else {
          return flags_;
        }
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.FlagsInfo, maxpb.MaxpbReport.FlagsInfo.Builder, maxpb.MaxpbReport.FlagsInfoOrBuilder> 
          getFlagsFieldBuilder() {
        if (flagsBuilder_ == null) {
          flagsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbReport.FlagsInfo, maxpb.MaxpbReport.FlagsInfo.Builder, maxpb.MaxpbReport.FlagsInfoOrBuilder>(
                  getFlags(),
                  getParentForChildren(),
                  isClean());
          flags_ = null;
        }
        return flagsBuilder_;
      }

      private maxpb.MaxpbTelemetry.TelemetryInfo telemetry_ = maxpb.MaxpbTelemetry.TelemetryInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbTelemetry.TelemetryInfo, maxpb.MaxpbTelemetry.TelemetryInfo.Builder, maxpb.MaxpbTelemetry.TelemetryInfoOrBuilder> telemetryBuilder_;
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasTelemetry() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbTelemetry.TelemetryInfo getTelemetry() {
        if (telemetryBuilder_ == null) {
          return telemetry_;
        } else {
          return telemetryBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setTelemetry(maxpb.MaxpbTelemetry.TelemetryInfo value) {
        if (telemetryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          telemetry_ = value;
          onChanged();
        } else {
          telemetryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setTelemetry(
          maxpb.MaxpbTelemetry.TelemetryInfo.Builder builderForValue) {
        if (telemetryBuilder_ == null) {
          telemetry_ = builderForValue.build();
          onChanged();
        } else {
          telemetryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder mergeTelemetry(maxpb.MaxpbTelemetry.TelemetryInfo value) {
        if (telemetryBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              telemetry_ != maxpb.MaxpbTelemetry.TelemetryInfo.getDefaultInstance()) {
            telemetry_ =
              maxpb.MaxpbTelemetry.TelemetryInfo.newBuilder(telemetry_).mergeFrom(value).buildPartial();
          } else {
            telemetry_ = value;
          }
          onChanged();
        } else {
          telemetryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearTelemetry() {
        if (telemetryBuilder_ == null) {
          telemetry_ = maxpb.MaxpbTelemetry.TelemetryInfo.getDefaultInstance();
          onChanged();
        } else {
          telemetryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbTelemetry.TelemetryInfo.Builder getTelemetryBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getTelemetryFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbTelemetry.TelemetryInfoOrBuilder getTelemetryOrBuilder() {
        if (telemetryBuilder_ != null) {
          return telemetryBuilder_.getMessageOrBuilder();
        } else {
          return telemetry_;
        }
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbTelemetry.TelemetryInfo, maxpb.MaxpbTelemetry.TelemetryInfo.Builder, maxpb.MaxpbTelemetry.TelemetryInfoOrBuilder> 
          getTelemetryFieldBuilder() {
        if (telemetryBuilder_ == null) {
          telemetryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbTelemetry.TelemetryInfo, maxpb.MaxpbTelemetry.TelemetryInfo.Builder, maxpb.MaxpbTelemetry.TelemetryInfoOrBuilder>(
                  getTelemetry(),
                  getParentForChildren(),
                  isClean());
          telemetry_ = null;
        }
        return telemetryBuilder_;
      }

      private long gatewayDateTime_ ;
      /**
       * <code>optional uint64 gatewayDateTime = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasGatewayDateTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint64 gatewayDateTime = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public long getGatewayDateTime() {
        return gatewayDateTime_;
      }
      /**
       * <code>optional uint64 gatewayDateTime = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setGatewayDateTime(long value) {
        bitField0_ |= 0x00000100;
        gatewayDateTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 gatewayDateTime = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearGatewayDateTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        gatewayDateTime_ = 0L;
        onChanged();
        return this;
      }

      private long gatewayDeviceId_ ;
      /**
       * <code>optional uint64 gatewayDeviceId = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasGatewayDeviceId() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint64 gatewayDeviceId = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public long getGatewayDeviceId() {
        return gatewayDeviceId_;
      }
      /**
       * <code>optional uint64 gatewayDeviceId = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setGatewayDeviceId(long value) {
        bitField0_ |= 0x00000200;
        gatewayDeviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 gatewayDeviceId = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearGatewayDeviceId() {
        bitField0_ = (bitField0_ & ~0x00000200);
        gatewayDeviceId_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<maxpb.MaxpbReport.PositionInfo> gatewayPosition_ =
        java.util.Collections.emptyList();
      private void ensureGatewayPositionIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          gatewayPosition_ = new java.util.ArrayList<maxpb.MaxpbReport.PositionInfo>(gatewayPosition_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.PositionInfo, maxpb.MaxpbReport.PositionInfo.Builder, maxpb.MaxpbReport.PositionInfoOrBuilder> gatewayPositionBuilder_;

      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.PositionInfo> getGatewayPositionList() {
        if (gatewayPositionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(gatewayPosition_);
        } else {
          return gatewayPositionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getGatewayPositionCount() {
        if (gatewayPositionBuilder_ == null) {
          return gatewayPosition_.size();
        } else {
          return gatewayPositionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo getGatewayPosition(int index) {
        if (gatewayPositionBuilder_ == null) {
          return gatewayPosition_.get(index);
        } else {
          return gatewayPositionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setGatewayPosition(
          int index, maxpb.MaxpbReport.PositionInfo value) {
        if (gatewayPositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGatewayPositionIsMutable();
          gatewayPosition_.set(index, value);
          onChanged();
        } else {
          gatewayPositionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setGatewayPosition(
          int index, maxpb.MaxpbReport.PositionInfo.Builder builderForValue) {
        if (gatewayPositionBuilder_ == null) {
          ensureGatewayPositionIsMutable();
          gatewayPosition_.set(index, builderForValue.build());
          onChanged();
        } else {
          gatewayPositionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder addGatewayPosition(maxpb.MaxpbReport.PositionInfo value) {
        if (gatewayPositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGatewayPositionIsMutable();
          gatewayPosition_.add(value);
          onChanged();
        } else {
          gatewayPositionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder addGatewayPosition(
          int index, maxpb.MaxpbReport.PositionInfo value) {
        if (gatewayPositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGatewayPositionIsMutable();
          gatewayPosition_.add(index, value);
          onChanged();
        } else {
          gatewayPositionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder addGatewayPosition(
          maxpb.MaxpbReport.PositionInfo.Builder builderForValue) {
        if (gatewayPositionBuilder_ == null) {
          ensureGatewayPositionIsMutable();
          gatewayPosition_.add(builderForValue.build());
          onChanged();
        } else {
          gatewayPositionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder addGatewayPosition(
          int index, maxpb.MaxpbReport.PositionInfo.Builder builderForValue) {
        if (gatewayPositionBuilder_ == null) {
          ensureGatewayPositionIsMutable();
          gatewayPosition_.add(index, builderForValue.build());
          onChanged();
        } else {
          gatewayPositionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder addAllGatewayPosition(
          java.lang.Iterable<? extends maxpb.MaxpbReport.PositionInfo> values) {
        if (gatewayPositionBuilder_ == null) {
          ensureGatewayPositionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, gatewayPosition_);
          onChanged();
        } else {
          gatewayPositionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearGatewayPosition() {
        if (gatewayPositionBuilder_ == null) {
          gatewayPosition_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          gatewayPositionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder removeGatewayPosition(int index) {
        if (gatewayPositionBuilder_ == null) {
          ensureGatewayPositionIsMutable();
          gatewayPosition_.remove(index);
          onChanged();
        } else {
          gatewayPositionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo.Builder getGatewayPositionBuilder(
          int index) {
        return getGatewayPositionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfoOrBuilder getGatewayPositionOrBuilder(
          int index) {
        if (gatewayPositionBuilder_ == null) {
          return gatewayPosition_.get(index);  } else {
          return gatewayPositionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbReport.PositionInfoOrBuilder> 
           getGatewayPositionOrBuilderList() {
        if (gatewayPositionBuilder_ != null) {
          return gatewayPositionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(gatewayPosition_);
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo.Builder addGatewayPositionBuilder() {
        return getGatewayPositionFieldBuilder().addBuilder(
            maxpb.MaxpbReport.PositionInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo.Builder addGatewayPositionBuilder(
          int index) {
        return getGatewayPositionFieldBuilder().addBuilder(
            index, maxpb.MaxpbReport.PositionInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.PositionInfo.Builder> 
           getGatewayPositionBuilderList() {
        return getGatewayPositionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.PositionInfo, maxpb.MaxpbReport.PositionInfo.Builder, maxpb.MaxpbReport.PositionInfoOrBuilder> 
          getGatewayPositionFieldBuilder() {
        if (gatewayPositionBuilder_ == null) {
          gatewayPositionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbReport.PositionInfo, maxpb.MaxpbReport.PositionInfo.Builder, maxpb.MaxpbReport.PositionInfoOrBuilder>(
                  gatewayPosition_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          gatewayPosition_ = null;
        }
        return gatewayPositionBuilder_;
      }

      private maxpb.MaxpbLora.LoraNetwork loraNetwork_ = maxpb.MaxpbLora.LoraNetwork.LN_UNKNOWN;
      /**
       * <code>optional .maxpb.LoraNetwork loraNetwork = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasLoraNetwork() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .maxpb.LoraNetwork loraNetwork = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraNetwork getLoraNetwork() {
        return loraNetwork_;
      }
      /**
       * <code>optional .maxpb.LoraNetwork loraNetwork = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setLoraNetwork(maxpb.MaxpbLora.LoraNetwork value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000800;
        loraNetwork_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraNetwork loraNetwork = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearLoraNetwork() {
        bitField0_ = (bitField0_ & ~0x00000800);
        loraNetwork_ = maxpb.MaxpbLora.LoraNetwork.LN_UNKNOWN;
        onChanged();
        return this;
      }

      private maxpb.MaxpbCustomerData.CustomerData customerData_ = maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbCustomerData.CustomerData, maxpb.MaxpbCustomerData.CustomerData.Builder, maxpb.MaxpbCustomerData.CustomerDataOrBuilder> customerDataBuilder_;
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public boolean hasCustomerData() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbCustomerData.CustomerData getCustomerData() {
        if (customerDataBuilder_ == null) {
          return customerData_;
        } else {
          return customerDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public Builder setCustomerData(maxpb.MaxpbCustomerData.CustomerData value) {
        if (customerDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          customerData_ = value;
          onChanged();
        } else {
          customerDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public Builder setCustomerData(
          maxpb.MaxpbCustomerData.CustomerData.Builder builderForValue) {
        if (customerDataBuilder_ == null) {
          customerData_ = builderForValue.build();
          onChanged();
        } else {
          customerDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public Builder mergeCustomerData(maxpb.MaxpbCustomerData.CustomerData value) {
        if (customerDataBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              customerData_ != maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance()) {
            customerData_ =
              maxpb.MaxpbCustomerData.CustomerData.newBuilder(customerData_).mergeFrom(value).buildPartial();
          } else {
            customerData_ = value;
          }
          onChanged();
        } else {
          customerDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public Builder clearCustomerData() {
        if (customerDataBuilder_ == null) {
          customerData_ = maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance();
          onChanged();
        } else {
          customerDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbCustomerData.CustomerData.Builder getCustomerDataBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getCustomerDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbCustomerData.CustomerDataOrBuilder getCustomerDataOrBuilder() {
        if (customerDataBuilder_ != null) {
          return customerDataBuilder_.getMessageOrBuilder();
        } else {
          return customerData_;
        }
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbCustomerData.CustomerData, maxpb.MaxpbCustomerData.CustomerData.Builder, maxpb.MaxpbCustomerData.CustomerDataOrBuilder> 
          getCustomerDataFieldBuilder() {
        if (customerDataBuilder_ == null) {
          customerDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbCustomerData.CustomerData, maxpb.MaxpbCustomerData.CustomerData.Builder, maxpb.MaxpbCustomerData.CustomerDataOrBuilder>(
                  getCustomerData(),
                  getParentForChildren(),
                  isClean());
          customerData_ = null;
        }
        return customerDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.LoraData)
    }

    static {
      defaultInstance = new LoraData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.LoraData)
  }

  public interface LoraConfigChannelEmergencyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.LoraConfigChannelEmergency)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 frequency = 1;</code>
     *
     * <pre>
     *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasFrequency();
    /**
     * <code>optional uint32 frequency = 1;</code>
     *
     * <pre>
     *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getFrequency();

    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasSF();
    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraSpreadingFactor getSF();

    /**
     * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasCR();
    /**
     * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraCodingRate getCR();

    /**
     * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasBW();
    /**
     * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraBandwidth getBW();

    /**
     * <code>optional uint32 power = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasPower();
    /**
     * <code>optional uint32 power = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getPower();

    /**
     * <code>optional uint32 moveTxInterval = 6;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasMoveTxInterval();
    /**
     * <code>optional uint32 moveTxInterval = 6;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getMoveTxInterval();

    /**
     * <code>optional uint32 stopTxInterval = 7;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasStopTxInterval();
    /**
     * <code>optional uint32 stopTxInterval = 7;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getStopTxInterval();

    /**
     * <code>optional uint32 moveRxONInterval = 8;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasMoveRxONInterval();
    /**
     * <code>optional uint32 moveRxONInterval = 8;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getMoveRxONInterval();

    /**
     * <code>optional uint32 moveRxOFFInterval = 9;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasMoveRxOFFInterval();
    /**
     * <code>optional uint32 moveRxOFFInterval = 9;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getMoveRxOFFInterval();

    /**
     * <code>optional uint32 stopRxONInterval = 10;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasStopRxONInterval();
    /**
     * <code>optional uint32 stopRxONInterval = 10;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getStopRxONInterval();

    /**
     * <code>optional uint32 stopRxOFFInterval = 11;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasStopRxOFFInterval();
    /**
     * <code>optional uint32 stopRxOFFInterval = 11;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getStopRxOFFInterval();

    /**
     * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasProtocol();
    /**
     * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraProtocol getProtocol();

    /**
     * <code>optional bytes loraP2PKey = 18;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasLoraP2PKey();
    /**
     * <code>optional bytes loraP2PKey = 18;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    com.google.protobuf.ByteString getLoraP2PKey();

    /**
     * <code>optional uint32 moveTxIntervalDevice = 19;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasMoveTxIntervalDevice();
    /**
     * <code>optional uint32 moveTxIntervalDevice = 19;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getMoveTxIntervalDevice();

    /**
     * <code>optional uint32 stopTxIntervalDevice = 20;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasStopTxIntervalDevice();
    /**
     * <code>optional uint32 stopTxIntervalDevice = 20;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getStopTxIntervalDevice();
  }
  /**
   * Protobuf type {@code maxpb.LoraConfigChannelEmergency}
   */
  public static final class LoraConfigChannelEmergency extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.LoraConfigChannelEmergency)
      LoraConfigChannelEmergencyOrBuilder {
    // Use LoraConfigChannelEmergency.newBuilder() to construct.
    private LoraConfigChannelEmergency(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LoraConfigChannelEmergency(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LoraConfigChannelEmergency defaultInstance;
    public static LoraConfigChannelEmergency getDefaultInstance() {
      return defaultInstance;
    }

    public LoraConfigChannelEmergency getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LoraConfigChannelEmergency(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              frequency_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraSpreadingFactor value = maxpb.MaxpbLora.LoraSpreadingFactor.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                sF_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraCodingRate value = maxpb.MaxpbLora.LoraCodingRate.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                cR_ = value;
              }
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraBandwidth value = maxpb.MaxpbLora.LoraBandwidth.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                bW_ = value;
              }
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              power_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              moveTxInterval_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              stopTxInterval_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              moveRxONInterval_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              moveRxOFFInterval_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              stopRxONInterval_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              stopRxOFFInterval_ = input.readUInt32();
              break;
            }
            case 104: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraProtocol value = maxpb.MaxpbLora.LoraProtocol.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(13, rawValue);
              } else {
                bitField0_ |= 0x00000800;
                protocol_ = value;
              }
              break;
            }
            case 146: {
              bitField0_ |= 0x00001000;
              loraP2PKey_ = input.readBytes();
              break;
            }
            case 152: {
              bitField0_ |= 0x00002000;
              moveTxIntervalDevice_ = input.readUInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00004000;
              stopTxIntervalDevice_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelEmergency_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelEmergency_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbLora.LoraConfigChannelEmergency.class, maxpb.MaxpbLora.LoraConfigChannelEmergency.Builder.class);
    }

    public static com.google.protobuf.Parser<LoraConfigChannelEmergency> PARSER =
        new com.google.protobuf.AbstractParser<LoraConfigChannelEmergency>() {
      public LoraConfigChannelEmergency parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LoraConfigChannelEmergency(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LoraConfigChannelEmergency> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FREQUENCY_FIELD_NUMBER = 1;
    private int frequency_;
    /**
     * <code>optional uint32 frequency = 1;</code>
     *
     * <pre>
     *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasFrequency() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 frequency = 1;</code>
     *
     * <pre>
     *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getFrequency() {
      return frequency_;
    }

    public static final int SF_FIELD_NUMBER = 2;
    private maxpb.MaxpbLora.LoraSpreadingFactor sF_;
    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasSF() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraSpreadingFactor getSF() {
      return sF_;
    }

    public static final int CR_FIELD_NUMBER = 3;
    private maxpb.MaxpbLora.LoraCodingRate cR_;
    /**
     * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasCR() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraCodingRate getCR() {
      return cR_;
    }

    public static final int BW_FIELD_NUMBER = 4;
    private maxpb.MaxpbLora.LoraBandwidth bW_;
    /**
     * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasBW() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraBandwidth getBW() {
      return bW_;
    }

    public static final int POWER_FIELD_NUMBER = 5;
    private int power_;
    /**
     * <code>optional uint32 power = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasPower() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 power = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getPower() {
      return power_;
    }

    public static final int MOVETXINTERVAL_FIELD_NUMBER = 6;
    private int moveTxInterval_;
    /**
     * <code>optional uint32 moveTxInterval = 6;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasMoveTxInterval() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 moveTxInterval = 6;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getMoveTxInterval() {
      return moveTxInterval_;
    }

    public static final int STOPTXINTERVAL_FIELD_NUMBER = 7;
    private int stopTxInterval_;
    /**
     * <code>optional uint32 stopTxInterval = 7;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasStopTxInterval() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 stopTxInterval = 7;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getStopTxInterval() {
      return stopTxInterval_;
    }

    public static final int MOVERXONINTERVAL_FIELD_NUMBER = 8;
    private int moveRxONInterval_;
    /**
     * <code>optional uint32 moveRxONInterval = 8;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasMoveRxONInterval() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 moveRxONInterval = 8;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getMoveRxONInterval() {
      return moveRxONInterval_;
    }

    public static final int MOVERXOFFINTERVAL_FIELD_NUMBER = 9;
    private int moveRxOFFInterval_;
    /**
     * <code>optional uint32 moveRxOFFInterval = 9;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasMoveRxOFFInterval() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 moveRxOFFInterval = 9;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getMoveRxOFFInterval() {
      return moveRxOFFInterval_;
    }

    public static final int STOPRXONINTERVAL_FIELD_NUMBER = 10;
    private int stopRxONInterval_;
    /**
     * <code>optional uint32 stopRxONInterval = 10;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasStopRxONInterval() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 stopRxONInterval = 10;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getStopRxONInterval() {
      return stopRxONInterval_;
    }

    public static final int STOPRXOFFINTERVAL_FIELD_NUMBER = 11;
    private int stopRxOFFInterval_;
    /**
     * <code>optional uint32 stopRxOFFInterval = 11;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasStopRxOFFInterval() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 stopRxOFFInterval = 11;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getStopRxOFFInterval() {
      return stopRxOFFInterval_;
    }

    public static final int PROTOCOL_FIELD_NUMBER = 13;
    private maxpb.MaxpbLora.LoraProtocol protocol_;
    /**
     * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasProtocol() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraProtocol getProtocol() {
      return protocol_;
    }

    public static final int LORAP2PKEY_FIELD_NUMBER = 18;
    private com.google.protobuf.ByteString loraP2PKey_;
    /**
     * <code>optional bytes loraP2PKey = 18;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasLoraP2PKey() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bytes loraP2PKey = 18;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public com.google.protobuf.ByteString getLoraP2PKey() {
      return loraP2PKey_;
    }

    public static final int MOVETXINTERVALDEVICE_FIELD_NUMBER = 19;
    private int moveTxIntervalDevice_;
    /**
     * <code>optional uint32 moveTxIntervalDevice = 19;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasMoveTxIntervalDevice() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 moveTxIntervalDevice = 19;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getMoveTxIntervalDevice() {
      return moveTxIntervalDevice_;
    }

    public static final int STOPTXINTERVALDEVICE_FIELD_NUMBER = 20;
    private int stopTxIntervalDevice_;
    /**
     * <code>optional uint32 stopTxIntervalDevice = 20;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasStopTxIntervalDevice() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint32 stopTxIntervalDevice = 20;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getStopTxIntervalDevice() {
      return stopTxIntervalDevice_;
    }

    private void initFields() {
      frequency_ = 0;
      sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
      cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
      bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
      power_ = 0;
      moveTxInterval_ = 0;
      stopTxInterval_ = 0;
      moveRxONInterval_ = 0;
      moveRxOFFInterval_ = 0;
      stopRxONInterval_ = 0;
      stopRxOFFInterval_ = 0;
      protocol_ = maxpb.MaxpbLora.LoraProtocol.LP_VER1;
      loraP2PKey_ = com.google.protobuf.ByteString.EMPTY;
      moveTxIntervalDevice_ = 0;
      stopTxIntervalDevice_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, frequency_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, sF_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, cR_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, bW_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, power_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, moveTxInterval_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, stopTxInterval_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, moveRxONInterval_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, moveRxOFFInterval_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, stopRxONInterval_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, stopRxOFFInterval_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeEnum(13, protocol_.getNumber());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(18, loraP2PKey_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(19, moveTxIntervalDevice_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(20, stopTxIntervalDevice_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, frequency_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, sF_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, cR_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, bW_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, power_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, moveTxInterval_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, stopTxInterval_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, moveRxONInterval_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, moveRxOFFInterval_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, stopRxONInterval_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, stopRxOFFInterval_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(13, protocol_.getNumber());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(18, loraP2PKey_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, moveTxIntervalDevice_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, stopTxIntervalDevice_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbLora.LoraConfigChannelEmergency parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelEmergency parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelEmergency parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelEmergency parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelEmergency parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelEmergency parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelEmergency parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelEmergency parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelEmergency parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelEmergency parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbLora.LoraConfigChannelEmergency prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.LoraConfigChannelEmergency}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.LoraConfigChannelEmergency)
        maxpb.MaxpbLora.LoraConfigChannelEmergencyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelEmergency_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelEmergency_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbLora.LoraConfigChannelEmergency.class, maxpb.MaxpbLora.LoraConfigChannelEmergency.Builder.class);
      }

      // Construct using maxpb.MaxpbLora.LoraConfigChannelEmergency.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        frequency_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
        bitField0_ = (bitField0_ & ~0x00000002);
        cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00000004);
        bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00000008);
        power_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        moveTxInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        stopTxInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        moveRxONInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        moveRxOFFInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        stopRxONInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        stopRxOFFInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        protocol_ = maxpb.MaxpbLora.LoraProtocol.LP_VER1;
        bitField0_ = (bitField0_ & ~0x00000800);
        loraP2PKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00001000);
        moveTxIntervalDevice_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        stopTxIntervalDevice_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelEmergency_descriptor;
      }

      public maxpb.MaxpbLora.LoraConfigChannelEmergency getDefaultInstanceForType() {
        return maxpb.MaxpbLora.LoraConfigChannelEmergency.getDefaultInstance();
      }

      public maxpb.MaxpbLora.LoraConfigChannelEmergency build() {
        maxpb.MaxpbLora.LoraConfigChannelEmergency result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbLora.LoraConfigChannelEmergency buildPartial() {
        maxpb.MaxpbLora.LoraConfigChannelEmergency result = new maxpb.MaxpbLora.LoraConfigChannelEmergency(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.frequency_ = frequency_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sF_ = sF_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cR_ = cR_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bW_ = bW_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.power_ = power_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.moveTxInterval_ = moveTxInterval_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.stopTxInterval_ = stopTxInterval_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.moveRxONInterval_ = moveRxONInterval_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.moveRxOFFInterval_ = moveRxOFFInterval_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.stopRxONInterval_ = stopRxONInterval_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.stopRxOFFInterval_ = stopRxOFFInterval_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.protocol_ = protocol_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.loraP2PKey_ = loraP2PKey_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.moveTxIntervalDevice_ = moveTxIntervalDevice_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.stopTxIntervalDevice_ = stopTxIntervalDevice_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbLora.LoraConfigChannelEmergency) {
          return mergeFrom((maxpb.MaxpbLora.LoraConfigChannelEmergency)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbLora.LoraConfigChannelEmergency other) {
        if (other == maxpb.MaxpbLora.LoraConfigChannelEmergency.getDefaultInstance()) return this;
        if (other.hasFrequency()) {
          setFrequency(other.getFrequency());
        }
        if (other.hasSF()) {
          setSF(other.getSF());
        }
        if (other.hasCR()) {
          setCR(other.getCR());
        }
        if (other.hasBW()) {
          setBW(other.getBW());
        }
        if (other.hasPower()) {
          setPower(other.getPower());
        }
        if (other.hasMoveTxInterval()) {
          setMoveTxInterval(other.getMoveTxInterval());
        }
        if (other.hasStopTxInterval()) {
          setStopTxInterval(other.getStopTxInterval());
        }
        if (other.hasMoveRxONInterval()) {
          setMoveRxONInterval(other.getMoveRxONInterval());
        }
        if (other.hasMoveRxOFFInterval()) {
          setMoveRxOFFInterval(other.getMoveRxOFFInterval());
        }
        if (other.hasStopRxONInterval()) {
          setStopRxONInterval(other.getStopRxONInterval());
        }
        if (other.hasStopRxOFFInterval()) {
          setStopRxOFFInterval(other.getStopRxOFFInterval());
        }
        if (other.hasProtocol()) {
          setProtocol(other.getProtocol());
        }
        if (other.hasLoraP2PKey()) {
          setLoraP2PKey(other.getLoraP2PKey());
        }
        if (other.hasMoveTxIntervalDevice()) {
          setMoveTxIntervalDevice(other.getMoveTxIntervalDevice());
        }
        if (other.hasStopTxIntervalDevice()) {
          setStopTxIntervalDevice(other.getStopTxIntervalDevice());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbLora.LoraConfigChannelEmergency parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbLora.LoraConfigChannelEmergency) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int frequency_ ;
      /**
       * <code>optional uint32 frequency = 1;</code>
       *
       * <pre>
       *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasFrequency() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 frequency = 1;</code>
       *
       * <pre>
       *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getFrequency() {
        return frequency_;
      }
      /**
       * <code>optional uint32 frequency = 1;</code>
       *
       * <pre>
       *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setFrequency(int value) {
        bitField0_ |= 0x00000001;
        frequency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 frequency = 1;</code>
       *
       * <pre>
       *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearFrequency() {
        bitField0_ = (bitField0_ & ~0x00000001);
        frequency_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraSpreadingFactor sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasSF() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraSpreadingFactor getSF() {
        return sF_;
      }
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setSF(maxpb.MaxpbLora.LoraSpreadingFactor value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        sF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearSF() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraCodingRate cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasCR() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraCodingRate getCR() {
        return cR_;
      }
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setCR(maxpb.MaxpbLora.LoraCodingRate value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        cR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearCR() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraBandwidth bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasBW() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraBandwidth getBW() {
        return bW_;
      }
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setBW(maxpb.MaxpbLora.LoraBandwidth value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        bW_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearBW() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
        onChanged();
        return this;
      }

      private int power_ ;
      /**
       * <code>optional uint32 power = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasPower() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 power = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getPower() {
        return power_;
      }
      /**
       * <code>optional uint32 power = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setPower(int value) {
        bitField0_ |= 0x00000010;
        power_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 power = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearPower() {
        bitField0_ = (bitField0_ & ~0x00000010);
        power_ = 0;
        onChanged();
        return this;
      }

      private int moveTxInterval_ ;
      /**
       * <code>optional uint32 moveTxInterval = 6;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasMoveTxInterval() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 moveTxInterval = 6;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getMoveTxInterval() {
        return moveTxInterval_;
      }
      /**
       * <code>optional uint32 moveTxInterval = 6;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setMoveTxInterval(int value) {
        bitField0_ |= 0x00000020;
        moveTxInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 moveTxInterval = 6;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearMoveTxInterval() {
        bitField0_ = (bitField0_ & ~0x00000020);
        moveTxInterval_ = 0;
        onChanged();
        return this;
      }

      private int stopTxInterval_ ;
      /**
       * <code>optional uint32 stopTxInterval = 7;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasStopTxInterval() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 stopTxInterval = 7;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getStopTxInterval() {
        return stopTxInterval_;
      }
      /**
       * <code>optional uint32 stopTxInterval = 7;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setStopTxInterval(int value) {
        bitField0_ |= 0x00000040;
        stopTxInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stopTxInterval = 7;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearStopTxInterval() {
        bitField0_ = (bitField0_ & ~0x00000040);
        stopTxInterval_ = 0;
        onChanged();
        return this;
      }

      private int moveRxONInterval_ ;
      /**
       * <code>optional uint32 moveRxONInterval = 8;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasMoveRxONInterval() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 moveRxONInterval = 8;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getMoveRxONInterval() {
        return moveRxONInterval_;
      }
      /**
       * <code>optional uint32 moveRxONInterval = 8;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setMoveRxONInterval(int value) {
        bitField0_ |= 0x00000080;
        moveRxONInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 moveRxONInterval = 8;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearMoveRxONInterval() {
        bitField0_ = (bitField0_ & ~0x00000080);
        moveRxONInterval_ = 0;
        onChanged();
        return this;
      }

      private int moveRxOFFInterval_ ;
      /**
       * <code>optional uint32 moveRxOFFInterval = 9;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasMoveRxOFFInterval() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 moveRxOFFInterval = 9;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getMoveRxOFFInterval() {
        return moveRxOFFInterval_;
      }
      /**
       * <code>optional uint32 moveRxOFFInterval = 9;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setMoveRxOFFInterval(int value) {
        bitField0_ |= 0x00000100;
        moveRxOFFInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 moveRxOFFInterval = 9;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearMoveRxOFFInterval() {
        bitField0_ = (bitField0_ & ~0x00000100);
        moveRxOFFInterval_ = 0;
        onChanged();
        return this;
      }

      private int stopRxONInterval_ ;
      /**
       * <code>optional uint32 stopRxONInterval = 10;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasStopRxONInterval() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 stopRxONInterval = 10;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getStopRxONInterval() {
        return stopRxONInterval_;
      }
      /**
       * <code>optional uint32 stopRxONInterval = 10;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setStopRxONInterval(int value) {
        bitField0_ |= 0x00000200;
        stopRxONInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stopRxONInterval = 10;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearStopRxONInterval() {
        bitField0_ = (bitField0_ & ~0x00000200);
        stopRxONInterval_ = 0;
        onChanged();
        return this;
      }

      private int stopRxOFFInterval_ ;
      /**
       * <code>optional uint32 stopRxOFFInterval = 11;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasStopRxOFFInterval() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 stopRxOFFInterval = 11;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getStopRxOFFInterval() {
        return stopRxOFFInterval_;
      }
      /**
       * <code>optional uint32 stopRxOFFInterval = 11;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setStopRxOFFInterval(int value) {
        bitField0_ |= 0x00000400;
        stopRxOFFInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stopRxOFFInterval = 11;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearStopRxOFFInterval() {
        bitField0_ = (bitField0_ & ~0x00000400);
        stopRxOFFInterval_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraProtocol protocol_ = maxpb.MaxpbLora.LoraProtocol.LP_VER1;
      /**
       * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasProtocol() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraProtocol getProtocol() {
        return protocol_;
      }
      /**
       * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setProtocol(maxpb.MaxpbLora.LoraProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000800;
        protocol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearProtocol() {
        bitField0_ = (bitField0_ & ~0x00000800);
        protocol_ = maxpb.MaxpbLora.LoraProtocol.LP_VER1;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString loraP2PKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes loraP2PKey = 18;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasLoraP2PKey() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bytes loraP2PKey = 18;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public com.google.protobuf.ByteString getLoraP2PKey() {
        return loraP2PKey_;
      }
      /**
       * <code>optional bytes loraP2PKey = 18;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setLoraP2PKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        loraP2PKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes loraP2PKey = 18;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearLoraP2PKey() {
        bitField0_ = (bitField0_ & ~0x00001000);
        loraP2PKey_ = getDefaultInstance().getLoraP2PKey();
        onChanged();
        return this;
      }

      private int moveTxIntervalDevice_ ;
      /**
       * <code>optional uint32 moveTxIntervalDevice = 19;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasMoveTxIntervalDevice() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 moveTxIntervalDevice = 19;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getMoveTxIntervalDevice() {
        return moveTxIntervalDevice_;
      }
      /**
       * <code>optional uint32 moveTxIntervalDevice = 19;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setMoveTxIntervalDevice(int value) {
        bitField0_ |= 0x00002000;
        moveTxIntervalDevice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 moveTxIntervalDevice = 19;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearMoveTxIntervalDevice() {
        bitField0_ = (bitField0_ & ~0x00002000);
        moveTxIntervalDevice_ = 0;
        onChanged();
        return this;
      }

      private int stopTxIntervalDevice_ ;
      /**
       * <code>optional uint32 stopTxIntervalDevice = 20;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasStopTxIntervalDevice() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 stopTxIntervalDevice = 20;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getStopTxIntervalDevice() {
        return stopTxIntervalDevice_;
      }
      /**
       * <code>optional uint32 stopTxIntervalDevice = 20;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setStopTxIntervalDevice(int value) {
        bitField0_ |= 0x00004000;
        stopTxIntervalDevice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stopTxIntervalDevice = 20;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearStopTxIntervalDevice() {
        bitField0_ = (bitField0_ & ~0x00004000);
        stopTxIntervalDevice_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.LoraConfigChannelEmergency)
    }

    static {
      defaultInstance = new LoraConfigChannelEmergency(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.LoraConfigChannelEmergency)
  }

  public interface LoraConfigChannelCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.LoraConfigChannelCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 frequency = 1;</code>
     *
     * <pre>
     *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasFrequency();
    /**
     * <code>optional uint32 frequency = 1;</code>
     *
     * <pre>
     *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getFrequency();

    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasSF();
    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraSpreadingFactor getSF();

    /**
     * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasCR();
    /**
     * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraCodingRate getCR();

    /**
     * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasBW();
    /**
     * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraBandwidth getBW();

    /**
     * <code>optional uint32 power = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasPower();
    /**
     * <code>optional uint32 power = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getPower();

    /**
     * <code>optional uint32 moveRxONInterval = 8;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasMoveRxONInterval();
    /**
     * <code>optional uint32 moveRxONInterval = 8;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getMoveRxONInterval();

    /**
     * <code>optional uint32 moveRxOFFInterval = 9;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasMoveRxOFFInterval();
    /**
     * <code>optional uint32 moveRxOFFInterval = 9;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getMoveRxOFFInterval();

    /**
     * <code>optional uint32 stopRxONInterval = 10;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasStopRxONInterval();
    /**
     * <code>optional uint32 stopRxONInterval = 10;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getStopRxONInterval();

    /**
     * <code>optional uint32 stopRxOFFInterval = 11;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasStopRxOFFInterval();
    /**
     * <code>optional uint32 stopRxOFFInterval = 11;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getStopRxOFFInterval();

    /**
     * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasProtocol();
    /**
     * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraProtocol getProtocol();

    /**
     * <code>optional bytes loraP2PKey = 18;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasLoraP2PKey();
    /**
     * <code>optional bytes loraP2PKey = 18;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    com.google.protobuf.ByteString getLoraP2PKey();
  }
  /**
   * Protobuf type {@code maxpb.LoraConfigChannelCommand}
   */
  public static final class LoraConfigChannelCommand extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.LoraConfigChannelCommand)
      LoraConfigChannelCommandOrBuilder {
    // Use LoraConfigChannelCommand.newBuilder() to construct.
    private LoraConfigChannelCommand(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LoraConfigChannelCommand(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LoraConfigChannelCommand defaultInstance;
    public static LoraConfigChannelCommand getDefaultInstance() {
      return defaultInstance;
    }

    public LoraConfigChannelCommand getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LoraConfigChannelCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              frequency_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraSpreadingFactor value = maxpb.MaxpbLora.LoraSpreadingFactor.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                sF_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraCodingRate value = maxpb.MaxpbLora.LoraCodingRate.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                cR_ = value;
              }
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraBandwidth value = maxpb.MaxpbLora.LoraBandwidth.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                bW_ = value;
              }
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              power_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              moveRxONInterval_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              moveRxOFFInterval_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              stopRxONInterval_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              stopRxOFFInterval_ = input.readUInt32();
              break;
            }
            case 104: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraProtocol value = maxpb.MaxpbLora.LoraProtocol.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(13, rawValue);
              } else {
                bitField0_ |= 0x00000200;
                protocol_ = value;
              }
              break;
            }
            case 146: {
              bitField0_ |= 0x00000400;
              loraP2PKey_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelCommand_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbLora.LoraConfigChannelCommand.class, maxpb.MaxpbLora.LoraConfigChannelCommand.Builder.class);
    }

    public static com.google.protobuf.Parser<LoraConfigChannelCommand> PARSER =
        new com.google.protobuf.AbstractParser<LoraConfigChannelCommand>() {
      public LoraConfigChannelCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LoraConfigChannelCommand(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LoraConfigChannelCommand> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FREQUENCY_FIELD_NUMBER = 1;
    private int frequency_;
    /**
     * <code>optional uint32 frequency = 1;</code>
     *
     * <pre>
     *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasFrequency() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 frequency = 1;</code>
     *
     * <pre>
     *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getFrequency() {
      return frequency_;
    }

    public static final int SF_FIELD_NUMBER = 2;
    private maxpb.MaxpbLora.LoraSpreadingFactor sF_;
    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasSF() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraSpreadingFactor getSF() {
      return sF_;
    }

    public static final int CR_FIELD_NUMBER = 3;
    private maxpb.MaxpbLora.LoraCodingRate cR_;
    /**
     * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasCR() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraCodingRate getCR() {
      return cR_;
    }

    public static final int BW_FIELD_NUMBER = 4;
    private maxpb.MaxpbLora.LoraBandwidth bW_;
    /**
     * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasBW() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraBandwidth getBW() {
      return bW_;
    }

    public static final int POWER_FIELD_NUMBER = 5;
    private int power_;
    /**
     * <code>optional uint32 power = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasPower() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 power = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getPower() {
      return power_;
    }

    public static final int MOVERXONINTERVAL_FIELD_NUMBER = 8;
    private int moveRxONInterval_;
    /**
     * <code>optional uint32 moveRxONInterval = 8;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasMoveRxONInterval() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 moveRxONInterval = 8;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getMoveRxONInterval() {
      return moveRxONInterval_;
    }

    public static final int MOVERXOFFINTERVAL_FIELD_NUMBER = 9;
    private int moveRxOFFInterval_;
    /**
     * <code>optional uint32 moveRxOFFInterval = 9;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasMoveRxOFFInterval() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 moveRxOFFInterval = 9;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getMoveRxOFFInterval() {
      return moveRxOFFInterval_;
    }

    public static final int STOPRXONINTERVAL_FIELD_NUMBER = 10;
    private int stopRxONInterval_;
    /**
     * <code>optional uint32 stopRxONInterval = 10;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasStopRxONInterval() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 stopRxONInterval = 10;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getStopRxONInterval() {
      return stopRxONInterval_;
    }

    public static final int STOPRXOFFINTERVAL_FIELD_NUMBER = 11;
    private int stopRxOFFInterval_;
    /**
     * <code>optional uint32 stopRxOFFInterval = 11;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasStopRxOFFInterval() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 stopRxOFFInterval = 11;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getStopRxOFFInterval() {
      return stopRxOFFInterval_;
    }

    public static final int PROTOCOL_FIELD_NUMBER = 13;
    private maxpb.MaxpbLora.LoraProtocol protocol_;
    /**
     * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasProtocol() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraProtocol getProtocol() {
      return protocol_;
    }

    public static final int LORAP2PKEY_FIELD_NUMBER = 18;
    private com.google.protobuf.ByteString loraP2PKey_;
    /**
     * <code>optional bytes loraP2PKey = 18;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasLoraP2PKey() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bytes loraP2PKey = 18;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public com.google.protobuf.ByteString getLoraP2PKey() {
      return loraP2PKey_;
    }

    private void initFields() {
      frequency_ = 0;
      sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
      cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
      bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
      power_ = 0;
      moveRxONInterval_ = 0;
      moveRxOFFInterval_ = 0;
      stopRxONInterval_ = 0;
      stopRxOFFInterval_ = 0;
      protocol_ = maxpb.MaxpbLora.LoraProtocol.LP_VER1;
      loraP2PKey_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, frequency_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, sF_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, cR_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, bW_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, power_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(8, moveRxONInterval_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(9, moveRxOFFInterval_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(10, stopRxONInterval_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(11, stopRxOFFInterval_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeEnum(13, protocol_.getNumber());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(18, loraP2PKey_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, frequency_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, sF_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, cR_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, bW_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, power_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, moveRxONInterval_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, moveRxOFFInterval_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, stopRxONInterval_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, stopRxOFFInterval_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(13, protocol_.getNumber());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(18, loraP2PKey_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbLora.LoraConfigChannelCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbLora.LoraConfigChannelCommand prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.LoraConfigChannelCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.LoraConfigChannelCommand)
        maxpb.MaxpbLora.LoraConfigChannelCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelCommand_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbLora.LoraConfigChannelCommand.class, maxpb.MaxpbLora.LoraConfigChannelCommand.Builder.class);
      }

      // Construct using maxpb.MaxpbLora.LoraConfigChannelCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        frequency_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
        bitField0_ = (bitField0_ & ~0x00000002);
        cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00000004);
        bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00000008);
        power_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        moveRxONInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        moveRxOFFInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        stopRxONInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        stopRxOFFInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        protocol_ = maxpb.MaxpbLora.LoraProtocol.LP_VER1;
        bitField0_ = (bitField0_ & ~0x00000200);
        loraP2PKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelCommand_descriptor;
      }

      public maxpb.MaxpbLora.LoraConfigChannelCommand getDefaultInstanceForType() {
        return maxpb.MaxpbLora.LoraConfigChannelCommand.getDefaultInstance();
      }

      public maxpb.MaxpbLora.LoraConfigChannelCommand build() {
        maxpb.MaxpbLora.LoraConfigChannelCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbLora.LoraConfigChannelCommand buildPartial() {
        maxpb.MaxpbLora.LoraConfigChannelCommand result = new maxpb.MaxpbLora.LoraConfigChannelCommand(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.frequency_ = frequency_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sF_ = sF_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cR_ = cR_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bW_ = bW_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.power_ = power_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.moveRxONInterval_ = moveRxONInterval_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.moveRxOFFInterval_ = moveRxOFFInterval_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.stopRxONInterval_ = stopRxONInterval_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.stopRxOFFInterval_ = stopRxOFFInterval_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.protocol_ = protocol_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.loraP2PKey_ = loraP2PKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbLora.LoraConfigChannelCommand) {
          return mergeFrom((maxpb.MaxpbLora.LoraConfigChannelCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbLora.LoraConfigChannelCommand other) {
        if (other == maxpb.MaxpbLora.LoraConfigChannelCommand.getDefaultInstance()) return this;
        if (other.hasFrequency()) {
          setFrequency(other.getFrequency());
        }
        if (other.hasSF()) {
          setSF(other.getSF());
        }
        if (other.hasCR()) {
          setCR(other.getCR());
        }
        if (other.hasBW()) {
          setBW(other.getBW());
        }
        if (other.hasPower()) {
          setPower(other.getPower());
        }
        if (other.hasMoveRxONInterval()) {
          setMoveRxONInterval(other.getMoveRxONInterval());
        }
        if (other.hasMoveRxOFFInterval()) {
          setMoveRxOFFInterval(other.getMoveRxOFFInterval());
        }
        if (other.hasStopRxONInterval()) {
          setStopRxONInterval(other.getStopRxONInterval());
        }
        if (other.hasStopRxOFFInterval()) {
          setStopRxOFFInterval(other.getStopRxOFFInterval());
        }
        if (other.hasProtocol()) {
          setProtocol(other.getProtocol());
        }
        if (other.hasLoraP2PKey()) {
          setLoraP2PKey(other.getLoraP2PKey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbLora.LoraConfigChannelCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbLora.LoraConfigChannelCommand) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int frequency_ ;
      /**
       * <code>optional uint32 frequency = 1;</code>
       *
       * <pre>
       *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasFrequency() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 frequency = 1;</code>
       *
       * <pre>
       *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getFrequency() {
        return frequency_;
      }
      /**
       * <code>optional uint32 frequency = 1;</code>
       *
       * <pre>
       *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setFrequency(int value) {
        bitField0_ |= 0x00000001;
        frequency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 frequency = 1;</code>
       *
       * <pre>
       *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearFrequency() {
        bitField0_ = (bitField0_ & ~0x00000001);
        frequency_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraSpreadingFactor sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasSF() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraSpreadingFactor getSF() {
        return sF_;
      }
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setSF(maxpb.MaxpbLora.LoraSpreadingFactor value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        sF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearSF() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraCodingRate cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasCR() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraCodingRate getCR() {
        return cR_;
      }
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setCR(maxpb.MaxpbLora.LoraCodingRate value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        cR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearCR() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraBandwidth bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasBW() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraBandwidth getBW() {
        return bW_;
      }
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setBW(maxpb.MaxpbLora.LoraBandwidth value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        bW_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearBW() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
        onChanged();
        return this;
      }

      private int power_ ;
      /**
       * <code>optional uint32 power = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasPower() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 power = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getPower() {
        return power_;
      }
      /**
       * <code>optional uint32 power = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setPower(int value) {
        bitField0_ |= 0x00000010;
        power_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 power = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearPower() {
        bitField0_ = (bitField0_ & ~0x00000010);
        power_ = 0;
        onChanged();
        return this;
      }

      private int moveRxONInterval_ ;
      /**
       * <code>optional uint32 moveRxONInterval = 8;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasMoveRxONInterval() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 moveRxONInterval = 8;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getMoveRxONInterval() {
        return moveRxONInterval_;
      }
      /**
       * <code>optional uint32 moveRxONInterval = 8;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setMoveRxONInterval(int value) {
        bitField0_ |= 0x00000020;
        moveRxONInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 moveRxONInterval = 8;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearMoveRxONInterval() {
        bitField0_ = (bitField0_ & ~0x00000020);
        moveRxONInterval_ = 0;
        onChanged();
        return this;
      }

      private int moveRxOFFInterval_ ;
      /**
       * <code>optional uint32 moveRxOFFInterval = 9;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasMoveRxOFFInterval() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 moveRxOFFInterval = 9;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getMoveRxOFFInterval() {
        return moveRxOFFInterval_;
      }
      /**
       * <code>optional uint32 moveRxOFFInterval = 9;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setMoveRxOFFInterval(int value) {
        bitField0_ |= 0x00000040;
        moveRxOFFInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 moveRxOFFInterval = 9;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearMoveRxOFFInterval() {
        bitField0_ = (bitField0_ & ~0x00000040);
        moveRxOFFInterval_ = 0;
        onChanged();
        return this;
      }

      private int stopRxONInterval_ ;
      /**
       * <code>optional uint32 stopRxONInterval = 10;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasStopRxONInterval() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 stopRxONInterval = 10;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getStopRxONInterval() {
        return stopRxONInterval_;
      }
      /**
       * <code>optional uint32 stopRxONInterval = 10;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setStopRxONInterval(int value) {
        bitField0_ |= 0x00000080;
        stopRxONInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stopRxONInterval = 10;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearStopRxONInterval() {
        bitField0_ = (bitField0_ & ~0x00000080);
        stopRxONInterval_ = 0;
        onChanged();
        return this;
      }

      private int stopRxOFFInterval_ ;
      /**
       * <code>optional uint32 stopRxOFFInterval = 11;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasStopRxOFFInterval() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 stopRxOFFInterval = 11;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getStopRxOFFInterval() {
        return stopRxOFFInterval_;
      }
      /**
       * <code>optional uint32 stopRxOFFInterval = 11;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setStopRxOFFInterval(int value) {
        bitField0_ |= 0x00000100;
        stopRxOFFInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stopRxOFFInterval = 11;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearStopRxOFFInterval() {
        bitField0_ = (bitField0_ & ~0x00000100);
        stopRxOFFInterval_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraProtocol protocol_ = maxpb.MaxpbLora.LoraProtocol.LP_VER1;
      /**
       * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasProtocol() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraProtocol getProtocol() {
        return protocol_;
      }
      /**
       * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setProtocol(maxpb.MaxpbLora.LoraProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        protocol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearProtocol() {
        bitField0_ = (bitField0_ & ~0x00000200);
        protocol_ = maxpb.MaxpbLora.LoraProtocol.LP_VER1;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString loraP2PKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes loraP2PKey = 18;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasLoraP2PKey() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bytes loraP2PKey = 18;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public com.google.protobuf.ByteString getLoraP2PKey() {
        return loraP2PKey_;
      }
      /**
       * <code>optional bytes loraP2PKey = 18;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setLoraP2PKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        loraP2PKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes loraP2PKey = 18;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearLoraP2PKey() {
        bitField0_ = (bitField0_ & ~0x00000400);
        loraP2PKey_ = getDefaultInstance().getLoraP2PKey();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.LoraConfigChannelCommand)
    }

    static {
      defaultInstance = new LoraConfigChannelCommand(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.LoraConfigChannelCommand)
  }

  public interface LoraConfigChannelParingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.LoraConfigChannelParing)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 frequency = 1;</code>
     *
     * <pre>
     *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasFrequency();
    /**
     * <code>optional uint32 frequency = 1;</code>
     *
     * <pre>
     *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getFrequency();

    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasSF();
    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraSpreadingFactor getSF();

    /**
     * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasCR();
    /**
     * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraCodingRate getCR();

    /**
     * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasBW();
    /**
     * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraBandwidth getBW();

    /**
     * <code>optional uint32 power = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasPower();
    /**
     * <code>optional uint32 power = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getPower();

    /**
     * <code>optional uint32 moveTxInterval = 6;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasMoveTxInterval();
    /**
     * <code>optional uint32 moveTxInterval = 6;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getMoveTxInterval();

    /**
     * <code>optional uint32 stopTxInterval = 7;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasStopTxInterval();
    /**
     * <code>optional uint32 stopTxInterval = 7;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getStopTxInterval();

    /**
     * <code>optional uint32 moveRxONInterval = 8;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasMoveRxONInterval();
    /**
     * <code>optional uint32 moveRxONInterval = 8;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getMoveRxONInterval();

    /**
     * <code>optional uint32 moveRxOFFInterval = 9;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasMoveRxOFFInterval();
    /**
     * <code>optional uint32 moveRxOFFInterval = 9;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getMoveRxOFFInterval();

    /**
     * <code>optional uint32 stopRxONInterval = 10;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasStopRxONInterval();
    /**
     * <code>optional uint32 stopRxONInterval = 10;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getStopRxONInterval();

    /**
     * <code>optional uint32 stopRxOFFInterval = 11;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasStopRxOFFInterval();
    /**
     * <code>optional uint32 stopRxOFFInterval = 11;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getStopRxOFFInterval();

    /**
     * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasProtocol();
    /**
     * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraProtocol getProtocol();

    /**
     * <code>optional uint32 moveKeepAliveTimeout = 14;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasMoveKeepAliveTimeout();
    /**
     * <code>optional uint32 moveKeepAliveTimeout = 14;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getMoveKeepAliveTimeout();

    /**
     * <code>optional uint32 stopKeepAliveTimeout = 15;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasStopKeepAliveTimeout();
    /**
     * <code>optional uint32 stopKeepAliveTimeout = 15;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getStopKeepAliveTimeout();

    /**
     * <code>optional uint32 moveTxIntervalCommand = 16;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasMoveTxIntervalCommand();
    /**
     * <code>optional uint32 moveTxIntervalCommand = 16;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getMoveTxIntervalCommand();

    /**
     * <code>optional uint32 stopTxIntervalCommand = 17;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasStopTxIntervalCommand();
    /**
     * <code>optional uint32 stopTxIntervalCommand = 17;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getStopTxIntervalCommand();

    /**
     * <code>optional bytes loraP2PKey = 18;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasLoraP2PKey();
    /**
     * <code>optional bytes loraP2PKey = 18;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    com.google.protobuf.ByteString getLoraP2PKey();
  }
  /**
   * Protobuf type {@code maxpb.LoraConfigChannelParing}
   */
  public static final class LoraConfigChannelParing extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.LoraConfigChannelParing)
      LoraConfigChannelParingOrBuilder {
    // Use LoraConfigChannelParing.newBuilder() to construct.
    private LoraConfigChannelParing(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LoraConfigChannelParing(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LoraConfigChannelParing defaultInstance;
    public static LoraConfigChannelParing getDefaultInstance() {
      return defaultInstance;
    }

    public LoraConfigChannelParing getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LoraConfigChannelParing(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              frequency_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraSpreadingFactor value = maxpb.MaxpbLora.LoraSpreadingFactor.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                sF_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraCodingRate value = maxpb.MaxpbLora.LoraCodingRate.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                cR_ = value;
              }
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraBandwidth value = maxpb.MaxpbLora.LoraBandwidth.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                bW_ = value;
              }
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              power_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              moveTxInterval_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              stopTxInterval_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              moveRxONInterval_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              moveRxOFFInterval_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              stopRxONInterval_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              stopRxOFFInterval_ = input.readUInt32();
              break;
            }
            case 104: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraProtocol value = maxpb.MaxpbLora.LoraProtocol.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(13, rawValue);
              } else {
                bitField0_ |= 0x00000800;
                protocol_ = value;
              }
              break;
            }
            case 112: {
              bitField0_ |= 0x00001000;
              moveKeepAliveTimeout_ = input.readUInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00002000;
              stopKeepAliveTimeout_ = input.readUInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00004000;
              moveTxIntervalCommand_ = input.readUInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00008000;
              stopTxIntervalCommand_ = input.readUInt32();
              break;
            }
            case 146: {
              bitField0_ |= 0x00010000;
              loraP2PKey_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelParing_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelParing_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbLora.LoraConfigChannelParing.class, maxpb.MaxpbLora.LoraConfigChannelParing.Builder.class);
    }

    public static com.google.protobuf.Parser<LoraConfigChannelParing> PARSER =
        new com.google.protobuf.AbstractParser<LoraConfigChannelParing>() {
      public LoraConfigChannelParing parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LoraConfigChannelParing(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LoraConfigChannelParing> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FREQUENCY_FIELD_NUMBER = 1;
    private int frequency_;
    /**
     * <code>optional uint32 frequency = 1;</code>
     *
     * <pre>
     *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasFrequency() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 frequency = 1;</code>
     *
     * <pre>
     *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getFrequency() {
      return frequency_;
    }

    public static final int SF_FIELD_NUMBER = 2;
    private maxpb.MaxpbLora.LoraSpreadingFactor sF_;
    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasSF() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraSpreadingFactor getSF() {
      return sF_;
    }

    public static final int CR_FIELD_NUMBER = 3;
    private maxpb.MaxpbLora.LoraCodingRate cR_;
    /**
     * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasCR() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraCodingRate getCR() {
      return cR_;
    }

    public static final int BW_FIELD_NUMBER = 4;
    private maxpb.MaxpbLora.LoraBandwidth bW_;
    /**
     * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasBW() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraBandwidth getBW() {
      return bW_;
    }

    public static final int POWER_FIELD_NUMBER = 5;
    private int power_;
    /**
     * <code>optional uint32 power = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasPower() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 power = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getPower() {
      return power_;
    }

    public static final int MOVETXINTERVAL_FIELD_NUMBER = 6;
    private int moveTxInterval_;
    /**
     * <code>optional uint32 moveTxInterval = 6;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasMoveTxInterval() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 moveTxInterval = 6;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getMoveTxInterval() {
      return moveTxInterval_;
    }

    public static final int STOPTXINTERVAL_FIELD_NUMBER = 7;
    private int stopTxInterval_;
    /**
     * <code>optional uint32 stopTxInterval = 7;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasStopTxInterval() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 stopTxInterval = 7;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getStopTxInterval() {
      return stopTxInterval_;
    }

    public static final int MOVERXONINTERVAL_FIELD_NUMBER = 8;
    private int moveRxONInterval_;
    /**
     * <code>optional uint32 moveRxONInterval = 8;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasMoveRxONInterval() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 moveRxONInterval = 8;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getMoveRxONInterval() {
      return moveRxONInterval_;
    }

    public static final int MOVERXOFFINTERVAL_FIELD_NUMBER = 9;
    private int moveRxOFFInterval_;
    /**
     * <code>optional uint32 moveRxOFFInterval = 9;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasMoveRxOFFInterval() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 moveRxOFFInterval = 9;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getMoveRxOFFInterval() {
      return moveRxOFFInterval_;
    }

    public static final int STOPRXONINTERVAL_FIELD_NUMBER = 10;
    private int stopRxONInterval_;
    /**
     * <code>optional uint32 stopRxONInterval = 10;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasStopRxONInterval() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 stopRxONInterval = 10;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getStopRxONInterval() {
      return stopRxONInterval_;
    }

    public static final int STOPRXOFFINTERVAL_FIELD_NUMBER = 11;
    private int stopRxOFFInterval_;
    /**
     * <code>optional uint32 stopRxOFFInterval = 11;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasStopRxOFFInterval() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 stopRxOFFInterval = 11;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getStopRxOFFInterval() {
      return stopRxOFFInterval_;
    }

    public static final int PROTOCOL_FIELD_NUMBER = 13;
    private maxpb.MaxpbLora.LoraProtocol protocol_;
    /**
     * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasProtocol() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraProtocol getProtocol() {
      return protocol_;
    }

    public static final int MOVEKEEPALIVETIMEOUT_FIELD_NUMBER = 14;
    private int moveKeepAliveTimeout_;
    /**
     * <code>optional uint32 moveKeepAliveTimeout = 14;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasMoveKeepAliveTimeout() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 moveKeepAliveTimeout = 14;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getMoveKeepAliveTimeout() {
      return moveKeepAliveTimeout_;
    }

    public static final int STOPKEEPALIVETIMEOUT_FIELD_NUMBER = 15;
    private int stopKeepAliveTimeout_;
    /**
     * <code>optional uint32 stopKeepAliveTimeout = 15;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasStopKeepAliveTimeout() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 stopKeepAliveTimeout = 15;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getStopKeepAliveTimeout() {
      return stopKeepAliveTimeout_;
    }

    public static final int MOVETXINTERVALCOMMAND_FIELD_NUMBER = 16;
    private int moveTxIntervalCommand_;
    /**
     * <code>optional uint32 moveTxIntervalCommand = 16;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasMoveTxIntervalCommand() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint32 moveTxIntervalCommand = 16;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getMoveTxIntervalCommand() {
      return moveTxIntervalCommand_;
    }

    public static final int STOPTXINTERVALCOMMAND_FIELD_NUMBER = 17;
    private int stopTxIntervalCommand_;
    /**
     * <code>optional uint32 stopTxIntervalCommand = 17;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasStopTxIntervalCommand() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint32 stopTxIntervalCommand = 17;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getStopTxIntervalCommand() {
      return stopTxIntervalCommand_;
    }

    public static final int LORAP2PKEY_FIELD_NUMBER = 18;
    private com.google.protobuf.ByteString loraP2PKey_;
    /**
     * <code>optional bytes loraP2PKey = 18;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasLoraP2PKey() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional bytes loraP2PKey = 18;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public com.google.protobuf.ByteString getLoraP2PKey() {
      return loraP2PKey_;
    }

    private void initFields() {
      frequency_ = 0;
      sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
      cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
      bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
      power_ = 0;
      moveTxInterval_ = 0;
      stopTxInterval_ = 0;
      moveRxONInterval_ = 0;
      moveRxOFFInterval_ = 0;
      stopRxONInterval_ = 0;
      stopRxOFFInterval_ = 0;
      protocol_ = maxpb.MaxpbLora.LoraProtocol.LP_VER1;
      moveKeepAliveTimeout_ = 0;
      stopKeepAliveTimeout_ = 0;
      moveTxIntervalCommand_ = 0;
      stopTxIntervalCommand_ = 0;
      loraP2PKey_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, frequency_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, sF_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, cR_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, bW_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, power_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, moveTxInterval_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, stopTxInterval_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, moveRxONInterval_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, moveRxOFFInterval_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, stopRxONInterval_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, stopRxOFFInterval_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeEnum(13, protocol_.getNumber());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(14, moveKeepAliveTimeout_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(15, stopKeepAliveTimeout_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(16, moveTxIntervalCommand_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(17, stopTxIntervalCommand_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBytes(18, loraP2PKey_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, frequency_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, sF_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, cR_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, bW_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, power_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, moveTxInterval_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, stopTxInterval_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, moveRxONInterval_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, moveRxOFFInterval_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, stopRxONInterval_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, stopRxOFFInterval_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(13, protocol_.getNumber());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, moveKeepAliveTimeout_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, stopKeepAliveTimeout_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, moveTxIntervalCommand_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, stopTxIntervalCommand_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(18, loraP2PKey_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbLora.LoraConfigChannelParing parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelParing parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelParing parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelParing parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelParing parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelParing parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelParing parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelParing parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelParing parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelParing parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbLora.LoraConfigChannelParing prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.LoraConfigChannelParing}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.LoraConfigChannelParing)
        maxpb.MaxpbLora.LoraConfigChannelParingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelParing_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelParing_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbLora.LoraConfigChannelParing.class, maxpb.MaxpbLora.LoraConfigChannelParing.Builder.class);
      }

      // Construct using maxpb.MaxpbLora.LoraConfigChannelParing.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        frequency_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
        bitField0_ = (bitField0_ & ~0x00000002);
        cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00000004);
        bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00000008);
        power_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        moveTxInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        stopTxInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        moveRxONInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        moveRxOFFInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        stopRxONInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        stopRxOFFInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        protocol_ = maxpb.MaxpbLora.LoraProtocol.LP_VER1;
        bitField0_ = (bitField0_ & ~0x00000800);
        moveKeepAliveTimeout_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        stopKeepAliveTimeout_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        moveTxIntervalCommand_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        stopTxIntervalCommand_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        loraP2PKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelParing_descriptor;
      }

      public maxpb.MaxpbLora.LoraConfigChannelParing getDefaultInstanceForType() {
        return maxpb.MaxpbLora.LoraConfigChannelParing.getDefaultInstance();
      }

      public maxpb.MaxpbLora.LoraConfigChannelParing build() {
        maxpb.MaxpbLora.LoraConfigChannelParing result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbLora.LoraConfigChannelParing buildPartial() {
        maxpb.MaxpbLora.LoraConfigChannelParing result = new maxpb.MaxpbLora.LoraConfigChannelParing(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.frequency_ = frequency_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sF_ = sF_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cR_ = cR_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bW_ = bW_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.power_ = power_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.moveTxInterval_ = moveTxInterval_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.stopTxInterval_ = stopTxInterval_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.moveRxONInterval_ = moveRxONInterval_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.moveRxOFFInterval_ = moveRxOFFInterval_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.stopRxONInterval_ = stopRxONInterval_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.stopRxOFFInterval_ = stopRxOFFInterval_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.protocol_ = protocol_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.moveKeepAliveTimeout_ = moveKeepAliveTimeout_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.stopKeepAliveTimeout_ = stopKeepAliveTimeout_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.moveTxIntervalCommand_ = moveTxIntervalCommand_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.stopTxIntervalCommand_ = stopTxIntervalCommand_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.loraP2PKey_ = loraP2PKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbLora.LoraConfigChannelParing) {
          return mergeFrom((maxpb.MaxpbLora.LoraConfigChannelParing)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbLora.LoraConfigChannelParing other) {
        if (other == maxpb.MaxpbLora.LoraConfigChannelParing.getDefaultInstance()) return this;
        if (other.hasFrequency()) {
          setFrequency(other.getFrequency());
        }
        if (other.hasSF()) {
          setSF(other.getSF());
        }
        if (other.hasCR()) {
          setCR(other.getCR());
        }
        if (other.hasBW()) {
          setBW(other.getBW());
        }
        if (other.hasPower()) {
          setPower(other.getPower());
        }
        if (other.hasMoveTxInterval()) {
          setMoveTxInterval(other.getMoveTxInterval());
        }
        if (other.hasStopTxInterval()) {
          setStopTxInterval(other.getStopTxInterval());
        }
        if (other.hasMoveRxONInterval()) {
          setMoveRxONInterval(other.getMoveRxONInterval());
        }
        if (other.hasMoveRxOFFInterval()) {
          setMoveRxOFFInterval(other.getMoveRxOFFInterval());
        }
        if (other.hasStopRxONInterval()) {
          setStopRxONInterval(other.getStopRxONInterval());
        }
        if (other.hasStopRxOFFInterval()) {
          setStopRxOFFInterval(other.getStopRxOFFInterval());
        }
        if (other.hasProtocol()) {
          setProtocol(other.getProtocol());
        }
        if (other.hasMoveKeepAliveTimeout()) {
          setMoveKeepAliveTimeout(other.getMoveKeepAliveTimeout());
        }
        if (other.hasStopKeepAliveTimeout()) {
          setStopKeepAliveTimeout(other.getStopKeepAliveTimeout());
        }
        if (other.hasMoveTxIntervalCommand()) {
          setMoveTxIntervalCommand(other.getMoveTxIntervalCommand());
        }
        if (other.hasStopTxIntervalCommand()) {
          setStopTxIntervalCommand(other.getStopTxIntervalCommand());
        }
        if (other.hasLoraP2PKey()) {
          setLoraP2PKey(other.getLoraP2PKey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbLora.LoraConfigChannelParing parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbLora.LoraConfigChannelParing) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int frequency_ ;
      /**
       * <code>optional uint32 frequency = 1;</code>
       *
       * <pre>
       *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasFrequency() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 frequency = 1;</code>
       *
       * <pre>
       *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getFrequency() {
        return frequency_;
      }
      /**
       * <code>optional uint32 frequency = 1;</code>
       *
       * <pre>
       *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setFrequency(int value) {
        bitField0_ |= 0x00000001;
        frequency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 frequency = 1;</code>
       *
       * <pre>
       *&#47; kHz SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearFrequency() {
        bitField0_ = (bitField0_ & ~0x00000001);
        frequency_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraSpreadingFactor sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasSF() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraSpreadingFactor getSF() {
        return sF_;
      }
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setSF(maxpb.MaxpbLora.LoraSpreadingFactor value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        sF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearSF() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraCodingRate cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasCR() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraCodingRate getCR() {
        return cR_;
      }
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setCR(maxpb.MaxpbLora.LoraCodingRate value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        cR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearCR() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraBandwidth bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasBW() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraBandwidth getBW() {
        return bW_;
      }
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setBW(maxpb.MaxpbLora.LoraBandwidth value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        bW_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearBW() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
        onChanged();
        return this;
      }

      private int power_ ;
      /**
       * <code>optional uint32 power = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasPower() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 power = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getPower() {
        return power_;
      }
      /**
       * <code>optional uint32 power = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setPower(int value) {
        bitField0_ |= 0x00000010;
        power_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 power = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearPower() {
        bitField0_ = (bitField0_ & ~0x00000010);
        power_ = 0;
        onChanged();
        return this;
      }

      private int moveTxInterval_ ;
      /**
       * <code>optional uint32 moveTxInterval = 6;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasMoveTxInterval() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 moveTxInterval = 6;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getMoveTxInterval() {
        return moveTxInterval_;
      }
      /**
       * <code>optional uint32 moveTxInterval = 6;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setMoveTxInterval(int value) {
        bitField0_ |= 0x00000020;
        moveTxInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 moveTxInterval = 6;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearMoveTxInterval() {
        bitField0_ = (bitField0_ & ~0x00000020);
        moveTxInterval_ = 0;
        onChanged();
        return this;
      }

      private int stopTxInterval_ ;
      /**
       * <code>optional uint32 stopTxInterval = 7;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasStopTxInterval() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 stopTxInterval = 7;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getStopTxInterval() {
        return stopTxInterval_;
      }
      /**
       * <code>optional uint32 stopTxInterval = 7;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setStopTxInterval(int value) {
        bitField0_ |= 0x00000040;
        stopTxInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stopTxInterval = 7;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearStopTxInterval() {
        bitField0_ = (bitField0_ & ~0x00000040);
        stopTxInterval_ = 0;
        onChanged();
        return this;
      }

      private int moveRxONInterval_ ;
      /**
       * <code>optional uint32 moveRxONInterval = 8;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasMoveRxONInterval() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 moveRxONInterval = 8;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getMoveRxONInterval() {
        return moveRxONInterval_;
      }
      /**
       * <code>optional uint32 moveRxONInterval = 8;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setMoveRxONInterval(int value) {
        bitField0_ |= 0x00000080;
        moveRxONInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 moveRxONInterval = 8;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearMoveRxONInterval() {
        bitField0_ = (bitField0_ & ~0x00000080);
        moveRxONInterval_ = 0;
        onChanged();
        return this;
      }

      private int moveRxOFFInterval_ ;
      /**
       * <code>optional uint32 moveRxOFFInterval = 9;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasMoveRxOFFInterval() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 moveRxOFFInterval = 9;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getMoveRxOFFInterval() {
        return moveRxOFFInterval_;
      }
      /**
       * <code>optional uint32 moveRxOFFInterval = 9;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setMoveRxOFFInterval(int value) {
        bitField0_ |= 0x00000100;
        moveRxOFFInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 moveRxOFFInterval = 9;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearMoveRxOFFInterval() {
        bitField0_ = (bitField0_ & ~0x00000100);
        moveRxOFFInterval_ = 0;
        onChanged();
        return this;
      }

      private int stopRxONInterval_ ;
      /**
       * <code>optional uint32 stopRxONInterval = 10;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasStopRxONInterval() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 stopRxONInterval = 10;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getStopRxONInterval() {
        return stopRxONInterval_;
      }
      /**
       * <code>optional uint32 stopRxONInterval = 10;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setStopRxONInterval(int value) {
        bitField0_ |= 0x00000200;
        stopRxONInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stopRxONInterval = 10;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearStopRxONInterval() {
        bitField0_ = (bitField0_ & ~0x00000200);
        stopRxONInterval_ = 0;
        onChanged();
        return this;
      }

      private int stopRxOFFInterval_ ;
      /**
       * <code>optional uint32 stopRxOFFInterval = 11;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasStopRxOFFInterval() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 stopRxOFFInterval = 11;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getStopRxOFFInterval() {
        return stopRxOFFInterval_;
      }
      /**
       * <code>optional uint32 stopRxOFFInterval = 11;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setStopRxOFFInterval(int value) {
        bitField0_ |= 0x00000400;
        stopRxOFFInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stopRxOFFInterval = 11;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearStopRxOFFInterval() {
        bitField0_ = (bitField0_ & ~0x00000400);
        stopRxOFFInterval_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraProtocol protocol_ = maxpb.MaxpbLora.LoraProtocol.LP_VER1;
      /**
       * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasProtocol() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraProtocol getProtocol() {
        return protocol_;
      }
      /**
       * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setProtocol(maxpb.MaxpbLora.LoraProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000800;
        protocol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearProtocol() {
        bitField0_ = (bitField0_ & ~0x00000800);
        protocol_ = maxpb.MaxpbLora.LoraProtocol.LP_VER1;
        onChanged();
        return this;
      }

      private int moveKeepAliveTimeout_ ;
      /**
       * <code>optional uint32 moveKeepAliveTimeout = 14;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasMoveKeepAliveTimeout() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 moveKeepAliveTimeout = 14;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getMoveKeepAliveTimeout() {
        return moveKeepAliveTimeout_;
      }
      /**
       * <code>optional uint32 moveKeepAliveTimeout = 14;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setMoveKeepAliveTimeout(int value) {
        bitField0_ |= 0x00001000;
        moveKeepAliveTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 moveKeepAliveTimeout = 14;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearMoveKeepAliveTimeout() {
        bitField0_ = (bitField0_ & ~0x00001000);
        moveKeepAliveTimeout_ = 0;
        onChanged();
        return this;
      }

      private int stopKeepAliveTimeout_ ;
      /**
       * <code>optional uint32 stopKeepAliveTimeout = 15;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasStopKeepAliveTimeout() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 stopKeepAliveTimeout = 15;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getStopKeepAliveTimeout() {
        return stopKeepAliveTimeout_;
      }
      /**
       * <code>optional uint32 stopKeepAliveTimeout = 15;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setStopKeepAliveTimeout(int value) {
        bitField0_ |= 0x00002000;
        stopKeepAliveTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stopKeepAliveTimeout = 15;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearStopKeepAliveTimeout() {
        bitField0_ = (bitField0_ & ~0x00002000);
        stopKeepAliveTimeout_ = 0;
        onChanged();
        return this;
      }

      private int moveTxIntervalCommand_ ;
      /**
       * <code>optional uint32 moveTxIntervalCommand = 16;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasMoveTxIntervalCommand() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 moveTxIntervalCommand = 16;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getMoveTxIntervalCommand() {
        return moveTxIntervalCommand_;
      }
      /**
       * <code>optional uint32 moveTxIntervalCommand = 16;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setMoveTxIntervalCommand(int value) {
        bitField0_ |= 0x00004000;
        moveTxIntervalCommand_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 moveTxIntervalCommand = 16;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearMoveTxIntervalCommand() {
        bitField0_ = (bitField0_ & ~0x00004000);
        moveTxIntervalCommand_ = 0;
        onChanged();
        return this;
      }

      private int stopTxIntervalCommand_ ;
      /**
       * <code>optional uint32 stopTxIntervalCommand = 17;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasStopTxIntervalCommand() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint32 stopTxIntervalCommand = 17;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getStopTxIntervalCommand() {
        return stopTxIntervalCommand_;
      }
      /**
       * <code>optional uint32 stopTxIntervalCommand = 17;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setStopTxIntervalCommand(int value) {
        bitField0_ |= 0x00008000;
        stopTxIntervalCommand_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stopTxIntervalCommand = 17;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearStopTxIntervalCommand() {
        bitField0_ = (bitField0_ & ~0x00008000);
        stopTxIntervalCommand_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString loraP2PKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes loraP2PKey = 18;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasLoraP2PKey() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional bytes loraP2PKey = 18;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public com.google.protobuf.ByteString getLoraP2PKey() {
        return loraP2PKey_;
      }
      /**
       * <code>optional bytes loraP2PKey = 18;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setLoraP2PKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        loraP2PKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes loraP2PKey = 18;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearLoraP2PKey() {
        bitField0_ = (bitField0_ & ~0x00010000);
        loraP2PKey_ = getDefaultInstance().getLoraP2PKey();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.LoraConfigChannelParing)
    }

    static {
      defaultInstance = new LoraConfigChannelParing(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.LoraConfigChannelParing)
  }

  public interface LoraConfigChannelPositionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.LoraConfigChannelPosition)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 frequency = 1;</code>
     *
     * <pre>
     *&#47; kHz SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasFrequency();
    /**
     * <code>optional uint32 frequency = 1;</code>
     *
     * <pre>
     *&#47; kHz SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getFrequency();

    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasSF();
    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraSpreadingFactor getSF();

    /**
     * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasCR();
    /**
     * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraCodingRate getCR();

    /**
     * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasBW();
    /**
     * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraBandwidth getBW();

    /**
     * <code>optional uint32 power = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasPower();
    /**
     * <code>optional uint32 power = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getPower();

    /**
     * <code>optional uint32 moveTxInterval = 6;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasMoveTxInterval();
    /**
     * <code>optional uint32 moveTxInterval = 6;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getMoveTxInterval();

    /**
     * <code>optional uint32 stopTxInterval = 7;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasStopTxInterval();
    /**
     * <code>optional uint32 stopTxInterval = 7;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getStopTxInterval();

    /**
     * <code>optional uint32 moveRxONInterval = 8;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasMoveRxONInterval();
    /**
     * <code>optional uint32 moveRxONInterval = 8;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getMoveRxONInterval();

    /**
     * <code>optional uint32 moveRxOFFInterval = 9;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasMoveRxOFFInterval();
    /**
     * <code>optional uint32 moveRxOFFInterval = 9;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getMoveRxOFFInterval();

    /**
     * <code>optional uint32 stopRxONInterval = 10;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasStopRxONInterval();
    /**
     * <code>optional uint32 stopRxONInterval = 10;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getStopRxONInterval();

    /**
     * <code>optional uint32 stopRxOFFInterval = 11;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasStopRxOFFInterval();
    /**
     * <code>optional uint32 stopRxOFFInterval = 11;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getStopRxOFFInterval();

    /**
     * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasProtocol();
    /**
     * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraProtocol getProtocol();

    /**
     * <code>optional bytes loraP2PKey = 18;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasLoraP2PKey();
    /**
     * <code>optional bytes loraP2PKey = 18;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    com.google.protobuf.ByteString getLoraP2PKey();
  }
  /**
   * Protobuf type {@code maxpb.LoraConfigChannelPosition}
   */
  public static final class LoraConfigChannelPosition extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.LoraConfigChannelPosition)
      LoraConfigChannelPositionOrBuilder {
    // Use LoraConfigChannelPosition.newBuilder() to construct.
    private LoraConfigChannelPosition(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LoraConfigChannelPosition(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LoraConfigChannelPosition defaultInstance;
    public static LoraConfigChannelPosition getDefaultInstance() {
      return defaultInstance;
    }

    public LoraConfigChannelPosition getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LoraConfigChannelPosition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              frequency_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraSpreadingFactor value = maxpb.MaxpbLora.LoraSpreadingFactor.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                sF_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraCodingRate value = maxpb.MaxpbLora.LoraCodingRate.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                cR_ = value;
              }
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraBandwidth value = maxpb.MaxpbLora.LoraBandwidth.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                bW_ = value;
              }
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              power_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              moveTxInterval_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              stopTxInterval_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              moveRxONInterval_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              moveRxOFFInterval_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              stopRxONInterval_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              stopRxOFFInterval_ = input.readUInt32();
              break;
            }
            case 104: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraProtocol value = maxpb.MaxpbLora.LoraProtocol.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(13, rawValue);
              } else {
                bitField0_ |= 0x00000800;
                protocol_ = value;
              }
              break;
            }
            case 146: {
              bitField0_ |= 0x00001000;
              loraP2PKey_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelPosition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelPosition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbLora.LoraConfigChannelPosition.class, maxpb.MaxpbLora.LoraConfigChannelPosition.Builder.class);
    }

    public static com.google.protobuf.Parser<LoraConfigChannelPosition> PARSER =
        new com.google.protobuf.AbstractParser<LoraConfigChannelPosition>() {
      public LoraConfigChannelPosition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LoraConfigChannelPosition(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LoraConfigChannelPosition> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FREQUENCY_FIELD_NUMBER = 1;
    private int frequency_;
    /**
     * <code>optional uint32 frequency = 1;</code>
     *
     * <pre>
     *&#47; kHz SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasFrequency() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 frequency = 1;</code>
     *
     * <pre>
     *&#47; kHz SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getFrequency() {
      return frequency_;
    }

    public static final int SF_FIELD_NUMBER = 2;
    private maxpb.MaxpbLora.LoraSpreadingFactor sF_;
    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasSF() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraSpreadingFactor getSF() {
      return sF_;
    }

    public static final int CR_FIELD_NUMBER = 3;
    private maxpb.MaxpbLora.LoraCodingRate cR_;
    /**
     * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasCR() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraCodingRate getCR() {
      return cR_;
    }

    public static final int BW_FIELD_NUMBER = 4;
    private maxpb.MaxpbLora.LoraBandwidth bW_;
    /**
     * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasBW() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraBandwidth getBW() {
      return bW_;
    }

    public static final int POWER_FIELD_NUMBER = 5;
    private int power_;
    /**
     * <code>optional uint32 power = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasPower() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 power = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getPower() {
      return power_;
    }

    public static final int MOVETXINTERVAL_FIELD_NUMBER = 6;
    private int moveTxInterval_;
    /**
     * <code>optional uint32 moveTxInterval = 6;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasMoveTxInterval() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 moveTxInterval = 6;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getMoveTxInterval() {
      return moveTxInterval_;
    }

    public static final int STOPTXINTERVAL_FIELD_NUMBER = 7;
    private int stopTxInterval_;
    /**
     * <code>optional uint32 stopTxInterval = 7;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasStopTxInterval() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 stopTxInterval = 7;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getStopTxInterval() {
      return stopTxInterval_;
    }

    public static final int MOVERXONINTERVAL_FIELD_NUMBER = 8;
    private int moveRxONInterval_;
    /**
     * <code>optional uint32 moveRxONInterval = 8;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasMoveRxONInterval() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 moveRxONInterval = 8;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getMoveRxONInterval() {
      return moveRxONInterval_;
    }

    public static final int MOVERXOFFINTERVAL_FIELD_NUMBER = 9;
    private int moveRxOFFInterval_;
    /**
     * <code>optional uint32 moveRxOFFInterval = 9;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasMoveRxOFFInterval() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 moveRxOFFInterval = 9;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getMoveRxOFFInterval() {
      return moveRxOFFInterval_;
    }

    public static final int STOPRXONINTERVAL_FIELD_NUMBER = 10;
    private int stopRxONInterval_;
    /**
     * <code>optional uint32 stopRxONInterval = 10;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasStopRxONInterval() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 stopRxONInterval = 10;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getStopRxONInterval() {
      return stopRxONInterval_;
    }

    public static final int STOPRXOFFINTERVAL_FIELD_NUMBER = 11;
    private int stopRxOFFInterval_;
    /**
     * <code>optional uint32 stopRxOFFInterval = 11;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasStopRxOFFInterval() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 stopRxOFFInterval = 11;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getStopRxOFFInterval() {
      return stopRxOFFInterval_;
    }

    public static final int PROTOCOL_FIELD_NUMBER = 13;
    private maxpb.MaxpbLora.LoraProtocol protocol_;
    /**
     * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasProtocol() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraProtocol getProtocol() {
      return protocol_;
    }

    public static final int LORAP2PKEY_FIELD_NUMBER = 18;
    private com.google.protobuf.ByteString loraP2PKey_;
    /**
     * <code>optional bytes loraP2PKey = 18;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasLoraP2PKey() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bytes loraP2PKey = 18;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public com.google.protobuf.ByteString getLoraP2PKey() {
      return loraP2PKey_;
    }

    private void initFields() {
      frequency_ = 0;
      sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
      cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
      bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
      power_ = 0;
      moveTxInterval_ = 0;
      stopTxInterval_ = 0;
      moveRxONInterval_ = 0;
      moveRxOFFInterval_ = 0;
      stopRxONInterval_ = 0;
      stopRxOFFInterval_ = 0;
      protocol_ = maxpb.MaxpbLora.LoraProtocol.LP_VER1;
      loraP2PKey_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, frequency_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, sF_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, cR_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, bW_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, power_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, moveTxInterval_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, stopTxInterval_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, moveRxONInterval_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, moveRxOFFInterval_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, stopRxONInterval_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, stopRxOFFInterval_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeEnum(13, protocol_.getNumber());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(18, loraP2PKey_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, frequency_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, sF_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, cR_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, bW_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, power_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, moveTxInterval_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, stopTxInterval_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, moveRxONInterval_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, moveRxOFFInterval_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, stopRxONInterval_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, stopRxOFFInterval_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(13, protocol_.getNumber());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(18, loraP2PKey_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbLora.LoraConfigChannelPosition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelPosition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelPosition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelPosition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelPosition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelPosition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelPosition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelPosition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelPosition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraConfigChannelPosition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbLora.LoraConfigChannelPosition prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.LoraConfigChannelPosition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.LoraConfigChannelPosition)
        maxpb.MaxpbLora.LoraConfigChannelPositionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelPosition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelPosition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbLora.LoraConfigChannelPosition.class, maxpb.MaxpbLora.LoraConfigChannelPosition.Builder.class);
      }

      // Construct using maxpb.MaxpbLora.LoraConfigChannelPosition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        frequency_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
        bitField0_ = (bitField0_ & ~0x00000002);
        cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00000004);
        bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00000008);
        power_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        moveTxInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        stopTxInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        moveRxONInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        moveRxOFFInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        stopRxONInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        stopRxOFFInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        protocol_ = maxpb.MaxpbLora.LoraProtocol.LP_VER1;
        bitField0_ = (bitField0_ & ~0x00000800);
        loraP2PKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigChannelPosition_descriptor;
      }

      public maxpb.MaxpbLora.LoraConfigChannelPosition getDefaultInstanceForType() {
        return maxpb.MaxpbLora.LoraConfigChannelPosition.getDefaultInstance();
      }

      public maxpb.MaxpbLora.LoraConfigChannelPosition build() {
        maxpb.MaxpbLora.LoraConfigChannelPosition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbLora.LoraConfigChannelPosition buildPartial() {
        maxpb.MaxpbLora.LoraConfigChannelPosition result = new maxpb.MaxpbLora.LoraConfigChannelPosition(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.frequency_ = frequency_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sF_ = sF_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cR_ = cR_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bW_ = bW_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.power_ = power_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.moveTxInterval_ = moveTxInterval_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.stopTxInterval_ = stopTxInterval_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.moveRxONInterval_ = moveRxONInterval_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.moveRxOFFInterval_ = moveRxOFFInterval_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.stopRxONInterval_ = stopRxONInterval_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.stopRxOFFInterval_ = stopRxOFFInterval_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.protocol_ = protocol_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.loraP2PKey_ = loraP2PKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbLora.LoraConfigChannelPosition) {
          return mergeFrom((maxpb.MaxpbLora.LoraConfigChannelPosition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbLora.LoraConfigChannelPosition other) {
        if (other == maxpb.MaxpbLora.LoraConfigChannelPosition.getDefaultInstance()) return this;
        if (other.hasFrequency()) {
          setFrequency(other.getFrequency());
        }
        if (other.hasSF()) {
          setSF(other.getSF());
        }
        if (other.hasCR()) {
          setCR(other.getCR());
        }
        if (other.hasBW()) {
          setBW(other.getBW());
        }
        if (other.hasPower()) {
          setPower(other.getPower());
        }
        if (other.hasMoveTxInterval()) {
          setMoveTxInterval(other.getMoveTxInterval());
        }
        if (other.hasStopTxInterval()) {
          setStopTxInterval(other.getStopTxInterval());
        }
        if (other.hasMoveRxONInterval()) {
          setMoveRxONInterval(other.getMoveRxONInterval());
        }
        if (other.hasMoveRxOFFInterval()) {
          setMoveRxOFFInterval(other.getMoveRxOFFInterval());
        }
        if (other.hasStopRxONInterval()) {
          setStopRxONInterval(other.getStopRxONInterval());
        }
        if (other.hasStopRxOFFInterval()) {
          setStopRxOFFInterval(other.getStopRxOFFInterval());
        }
        if (other.hasProtocol()) {
          setProtocol(other.getProtocol());
        }
        if (other.hasLoraP2PKey()) {
          setLoraP2PKey(other.getLoraP2PKey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbLora.LoraConfigChannelPosition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbLora.LoraConfigChannelPosition) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int frequency_ ;
      /**
       * <code>optional uint32 frequency = 1;</code>
       *
       * <pre>
       *&#47; kHz SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasFrequency() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 frequency = 1;</code>
       *
       * <pre>
       *&#47; kHz SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getFrequency() {
        return frequency_;
      }
      /**
       * <code>optional uint32 frequency = 1;</code>
       *
       * <pre>
       *&#47; kHz SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setFrequency(int value) {
        bitField0_ |= 0x00000001;
        frequency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 frequency = 1;</code>
       *
       * <pre>
       *&#47; kHz SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearFrequency() {
        bitField0_ = (bitField0_ & ~0x00000001);
        frequency_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraSpreadingFactor sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasSF() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraSpreadingFactor getSF() {
        return sF_;
      }
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setSF(maxpb.MaxpbLora.LoraSpreadingFactor value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        sF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraSpreadingFactor SF = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearSF() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sF_ = maxpb.MaxpbLora.LoraSpreadingFactor.SF_UNKOWN;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraCodingRate cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasCR() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraCodingRate getCR() {
        return cR_;
      }
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setCR(maxpb.MaxpbLora.LoraCodingRate value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        cR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraCodingRate CR = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearCR() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cR_ = maxpb.MaxpbLora.LoraCodingRate.CR_UNKNOWN;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraBandwidth bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasBW() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraBandwidth getBW() {
        return bW_;
      }
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setBW(maxpb.MaxpbLora.LoraBandwidth value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        bW_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraBandwidth BW = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearBW() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bW_ = maxpb.MaxpbLora.LoraBandwidth.LBW_UNKNOWN;
        onChanged();
        return this;
      }

      private int power_ ;
      /**
       * <code>optional uint32 power = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasPower() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 power = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getPower() {
        return power_;
      }
      /**
       * <code>optional uint32 power = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setPower(int value) {
        bitField0_ |= 0x00000010;
        power_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 power = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearPower() {
        bitField0_ = (bitField0_ & ~0x00000010);
        power_ = 0;
        onChanged();
        return this;
      }

      private int moveTxInterval_ ;
      /**
       * <code>optional uint32 moveTxInterval = 6;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasMoveTxInterval() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 moveTxInterval = 6;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getMoveTxInterval() {
        return moveTxInterval_;
      }
      /**
       * <code>optional uint32 moveTxInterval = 6;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setMoveTxInterval(int value) {
        bitField0_ |= 0x00000020;
        moveTxInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 moveTxInterval = 6;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearMoveTxInterval() {
        bitField0_ = (bitField0_ & ~0x00000020);
        moveTxInterval_ = 0;
        onChanged();
        return this;
      }

      private int stopTxInterval_ ;
      /**
       * <code>optional uint32 stopTxInterval = 7;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasStopTxInterval() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 stopTxInterval = 7;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getStopTxInterval() {
        return stopTxInterval_;
      }
      /**
       * <code>optional uint32 stopTxInterval = 7;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setStopTxInterval(int value) {
        bitField0_ |= 0x00000040;
        stopTxInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stopTxInterval = 7;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearStopTxInterval() {
        bitField0_ = (bitField0_ & ~0x00000040);
        stopTxInterval_ = 0;
        onChanged();
        return this;
      }

      private int moveRxONInterval_ ;
      /**
       * <code>optional uint32 moveRxONInterval = 8;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasMoveRxONInterval() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 moveRxONInterval = 8;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getMoveRxONInterval() {
        return moveRxONInterval_;
      }
      /**
       * <code>optional uint32 moveRxONInterval = 8;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setMoveRxONInterval(int value) {
        bitField0_ |= 0x00000080;
        moveRxONInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 moveRxONInterval = 8;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearMoveRxONInterval() {
        bitField0_ = (bitField0_ & ~0x00000080);
        moveRxONInterval_ = 0;
        onChanged();
        return this;
      }

      private int moveRxOFFInterval_ ;
      /**
       * <code>optional uint32 moveRxOFFInterval = 9;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasMoveRxOFFInterval() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 moveRxOFFInterval = 9;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getMoveRxOFFInterval() {
        return moveRxOFFInterval_;
      }
      /**
       * <code>optional uint32 moveRxOFFInterval = 9;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setMoveRxOFFInterval(int value) {
        bitField0_ |= 0x00000100;
        moveRxOFFInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 moveRxOFFInterval = 9;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearMoveRxOFFInterval() {
        bitField0_ = (bitField0_ & ~0x00000100);
        moveRxOFFInterval_ = 0;
        onChanged();
        return this;
      }

      private int stopRxONInterval_ ;
      /**
       * <code>optional uint32 stopRxONInterval = 10;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasStopRxONInterval() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 stopRxONInterval = 10;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getStopRxONInterval() {
        return stopRxONInterval_;
      }
      /**
       * <code>optional uint32 stopRxONInterval = 10;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setStopRxONInterval(int value) {
        bitField0_ |= 0x00000200;
        stopRxONInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stopRxONInterval = 10;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearStopRxONInterval() {
        bitField0_ = (bitField0_ & ~0x00000200);
        stopRxONInterval_ = 0;
        onChanged();
        return this;
      }

      private int stopRxOFFInterval_ ;
      /**
       * <code>optional uint32 stopRxOFFInterval = 11;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasStopRxOFFInterval() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 stopRxOFFInterval = 11;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getStopRxOFFInterval() {
        return stopRxOFFInterval_;
      }
      /**
       * <code>optional uint32 stopRxOFFInterval = 11;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setStopRxOFFInterval(int value) {
        bitField0_ |= 0x00000400;
        stopRxOFFInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stopRxOFFInterval = 11;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearStopRxOFFInterval() {
        bitField0_ = (bitField0_ & ~0x00000400);
        stopRxOFFInterval_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraProtocol protocol_ = maxpb.MaxpbLora.LoraProtocol.LP_VER1;
      /**
       * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasProtocol() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraProtocol getProtocol() {
        return protocol_;
      }
      /**
       * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setProtocol(maxpb.MaxpbLora.LoraProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000800;
        protocol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraProtocol protocol = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearProtocol() {
        bitField0_ = (bitField0_ & ~0x00000800);
        protocol_ = maxpb.MaxpbLora.LoraProtocol.LP_VER1;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString loraP2PKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes loraP2PKey = 18;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasLoraP2PKey() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bytes loraP2PKey = 18;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public com.google.protobuf.ByteString getLoraP2PKey() {
        return loraP2PKey_;
      }
      /**
       * <code>optional bytes loraP2PKey = 18;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setLoraP2PKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        loraP2PKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes loraP2PKey = 18;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearLoraP2PKey() {
        bitField0_ = (bitField0_ & ~0x00001000);
        loraP2PKey_ = getDefaultInstance().getLoraP2PKey();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.LoraConfigChannelPosition)
    }

    static {
      defaultInstance = new LoraConfigChannelPosition(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.LoraConfigChannelPosition)
  }

  public interface LoraConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.LoraConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .maxpb.LoraMode loraModeConfig = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasLoraModeConfig();
    /**
     * <code>optional .maxpb.LoraMode loraModeConfig = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraMode getLoraModeConfig();

    /**
     * <code>optional .maxpb.LoraWanFrequencyPlan loraWanFrequencyPlan = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasLoraWanFrequencyPlan();
    /**
     * <code>optional .maxpb.LoraWanFrequencyPlan loraWanFrequencyPlan = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraWanFrequencyPlan getLoraWanFrequencyPlan();

    /**
     * <code>optional .maxpb.LoraWanActivation loraWanActivation = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasLoraWanActivation();
    /**
     * <code>optional .maxpb.LoraWanActivation loraWanActivation = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraWanActivation getLoraWanActivation();

    /**
     * <code>optional uint64 loraWanOTAAApplicationEUI = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasLoraWanOTAAApplicationEUI();
    /**
     * <code>optional uint64 loraWanOTAAApplicationEUI = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    long getLoraWanOTAAApplicationEUI();

    /**
     * <code>optional bytes loraWanOTAAApplicationKey = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasLoraWanOTAAApplicationKey();
    /**
     * <code>optional bytes loraWanOTAAApplicationKey = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    com.google.protobuf.ByteString getLoraWanOTAAApplicationKey();

    /**
     * <code>optional uint64 loraWanABPDeviceAddress = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasLoraWanABPDeviceAddress();
    /**
     * <code>optional uint64 loraWanABPDeviceAddress = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    long getLoraWanABPDeviceAddress();

    /**
     * <code>optional bytes loraWanABPNetworkSessionKey = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasLoraWanABPNetworkSessionKey();
    /**
     * <code>optional bytes loraWanABPNetworkSessionKey = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    com.google.protobuf.ByteString getLoraWanABPNetworkSessionKey();

    /**
     * <code>optional bytes loraWanABPApplicationSessionKey = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasLoraWanABPApplicationSessionKey();
    /**
     * <code>optional bytes loraWanABPApplicationSessionKey = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    com.google.protobuf.ByteString getLoraWanABPApplicationSessionKey();

    /**
     * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasEmergencyChannel();
    /**
     * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraConfigChannelEmergency getEmergencyChannel();
    /**
     * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraConfigChannelEmergencyOrBuilder getEmergencyChannelOrBuilder();

    /**
     * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasCommandChannel();
    /**
     * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraConfigChannelCommand getCommandChannel();
    /**
     * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraConfigChannelCommandOrBuilder getCommandChannelOrBuilder();

    /**
     * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasParingChannel();
    /**
     * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraConfigChannelParing getParingChannel();
    /**
     * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraConfigChannelParingOrBuilder getParingChannelOrBuilder();

    /**
     * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasPositionChannel();
    /**
     * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraConfigChannelPosition getPositionChannel();
    /**
     * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraConfigChannelPositionOrBuilder getPositionChannelOrBuilder();

    /**
     * <code>optional uint32 loraP2PCoordinatorID = 19;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasLoraP2PCoordinatorID();
    /**
     * <code>optional uint32 loraP2PCoordinatorID = 19;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getLoraP2PCoordinatorID();

    /**
     * <code>optional uint32 keepMovingState = 20;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasKeepMovingState();
    /**
     * <code>optional uint32 keepMovingState = 20;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getKeepMovingState();
  }
  /**
   * Protobuf type {@code maxpb.LoraConfig}
   */
  public static final class LoraConfig extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.LoraConfig)
      LoraConfigOrBuilder {
    // Use LoraConfig.newBuilder() to construct.
    private LoraConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LoraConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LoraConfig defaultInstance;
    public static LoraConfig getDefaultInstance() {
      return defaultInstance;
    }

    public LoraConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LoraConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraMode value = maxpb.MaxpbLora.LoraMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                loraModeConfig_ = value;
              }
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraWanFrequencyPlan value = maxpb.MaxpbLora.LoraWanFrequencyPlan.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                loraWanFrequencyPlan_ = value;
              }
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraWanActivation value = maxpb.MaxpbLora.LoraWanActivation.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                loraWanActivation_ = value;
              }
              break;
            }
            case 72: {
              bitField0_ |= 0x00000008;
              loraWanOTAAApplicationEUI_ = input.readUInt64();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000010;
              loraWanOTAAApplicationKey_ = input.readBytes();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000020;
              loraWanABPDeviceAddress_ = input.readUInt64();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000040;
              loraWanABPNetworkSessionKey_ = input.readBytes();
              break;
            }
            case 106: {
              bitField0_ |= 0x00000080;
              loraWanABPApplicationSessionKey_ = input.readBytes();
              break;
            }
            case 114: {
              maxpb.MaxpbLora.LoraConfigChannelEmergency.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = emergencyChannel_.toBuilder();
              }
              emergencyChannel_ = input.readMessage(maxpb.MaxpbLora.LoraConfigChannelEmergency.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(emergencyChannel_);
                emergencyChannel_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 122: {
              maxpb.MaxpbLora.LoraConfigChannelCommand.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = commandChannel_.toBuilder();
              }
              commandChannel_ = input.readMessage(maxpb.MaxpbLora.LoraConfigChannelCommand.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(commandChannel_);
                commandChannel_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 130: {
              maxpb.MaxpbLora.LoraConfigChannelParing.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = paringChannel_.toBuilder();
              }
              paringChannel_ = input.readMessage(maxpb.MaxpbLora.LoraConfigChannelParing.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(paringChannel_);
                paringChannel_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 138: {
              maxpb.MaxpbLora.LoraConfigChannelPosition.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = positionChannel_.toBuilder();
              }
              positionChannel_ = input.readMessage(maxpb.MaxpbLora.LoraConfigChannelPosition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(positionChannel_);
                positionChannel_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 152: {
              bitField0_ |= 0x00001000;
              loraP2PCoordinatorID_ = input.readUInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00002000;
              keepMovingState_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbLora.LoraConfig.class, maxpb.MaxpbLora.LoraConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<LoraConfig> PARSER =
        new com.google.protobuf.AbstractParser<LoraConfig>() {
      public LoraConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LoraConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LoraConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LORAMODECONFIG_FIELD_NUMBER = 1;
    private maxpb.MaxpbLora.LoraMode loraModeConfig_;
    /**
     * <code>optional .maxpb.LoraMode loraModeConfig = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasLoraModeConfig() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .maxpb.LoraMode loraModeConfig = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraMode getLoraModeConfig() {
      return loraModeConfig_;
    }

    public static final int LORAWANFREQUENCYPLAN_FIELD_NUMBER = 7;
    private maxpb.MaxpbLora.LoraWanFrequencyPlan loraWanFrequencyPlan_;
    /**
     * <code>optional .maxpb.LoraWanFrequencyPlan loraWanFrequencyPlan = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasLoraWanFrequencyPlan() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .maxpb.LoraWanFrequencyPlan loraWanFrequencyPlan = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraWanFrequencyPlan getLoraWanFrequencyPlan() {
      return loraWanFrequencyPlan_;
    }

    public static final int LORAWANACTIVATION_FIELD_NUMBER = 8;
    private maxpb.MaxpbLora.LoraWanActivation loraWanActivation_;
    /**
     * <code>optional .maxpb.LoraWanActivation loraWanActivation = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasLoraWanActivation() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .maxpb.LoraWanActivation loraWanActivation = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraWanActivation getLoraWanActivation() {
      return loraWanActivation_;
    }

    public static final int LORAWANOTAAAPPLICATIONEUI_FIELD_NUMBER = 9;
    private long loraWanOTAAApplicationEUI_;
    /**
     * <code>optional uint64 loraWanOTAAApplicationEUI = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasLoraWanOTAAApplicationEUI() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 loraWanOTAAApplicationEUI = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public long getLoraWanOTAAApplicationEUI() {
      return loraWanOTAAApplicationEUI_;
    }

    public static final int LORAWANOTAAAPPLICATIONKEY_FIELD_NUMBER = 10;
    private com.google.protobuf.ByteString loraWanOTAAApplicationKey_;
    /**
     * <code>optional bytes loraWanOTAAApplicationKey = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasLoraWanOTAAApplicationKey() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bytes loraWanOTAAApplicationKey = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public com.google.protobuf.ByteString getLoraWanOTAAApplicationKey() {
      return loraWanOTAAApplicationKey_;
    }

    public static final int LORAWANABPDEVICEADDRESS_FIELD_NUMBER = 11;
    private long loraWanABPDeviceAddress_;
    /**
     * <code>optional uint64 loraWanABPDeviceAddress = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasLoraWanABPDeviceAddress() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 loraWanABPDeviceAddress = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public long getLoraWanABPDeviceAddress() {
      return loraWanABPDeviceAddress_;
    }

    public static final int LORAWANABPNETWORKSESSIONKEY_FIELD_NUMBER = 12;
    private com.google.protobuf.ByteString loraWanABPNetworkSessionKey_;
    /**
     * <code>optional bytes loraWanABPNetworkSessionKey = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasLoraWanABPNetworkSessionKey() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bytes loraWanABPNetworkSessionKey = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public com.google.protobuf.ByteString getLoraWanABPNetworkSessionKey() {
      return loraWanABPNetworkSessionKey_;
    }

    public static final int LORAWANABPAPPLICATIONSESSIONKEY_FIELD_NUMBER = 13;
    private com.google.protobuf.ByteString loraWanABPApplicationSessionKey_;
    /**
     * <code>optional bytes loraWanABPApplicationSessionKey = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasLoraWanABPApplicationSessionKey() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bytes loraWanABPApplicationSessionKey = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public com.google.protobuf.ByteString getLoraWanABPApplicationSessionKey() {
      return loraWanABPApplicationSessionKey_;
    }

    public static final int EMERGENCYCHANNEL_FIELD_NUMBER = 14;
    private maxpb.MaxpbLora.LoraConfigChannelEmergency emergencyChannel_;
    /**
     * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasEmergencyChannel() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraConfigChannelEmergency getEmergencyChannel() {
      return emergencyChannel_;
    }
    /**
     * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraConfigChannelEmergencyOrBuilder getEmergencyChannelOrBuilder() {
      return emergencyChannel_;
    }

    public static final int COMMANDCHANNEL_FIELD_NUMBER = 15;
    private maxpb.MaxpbLora.LoraConfigChannelCommand commandChannel_;
    /**
     * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasCommandChannel() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraConfigChannelCommand getCommandChannel() {
      return commandChannel_;
    }
    /**
     * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraConfigChannelCommandOrBuilder getCommandChannelOrBuilder() {
      return commandChannel_;
    }

    public static final int PARINGCHANNEL_FIELD_NUMBER = 16;
    private maxpb.MaxpbLora.LoraConfigChannelParing paringChannel_;
    /**
     * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasParingChannel() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraConfigChannelParing getParingChannel() {
      return paringChannel_;
    }
    /**
     * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraConfigChannelParingOrBuilder getParingChannelOrBuilder() {
      return paringChannel_;
    }

    public static final int POSITIONCHANNEL_FIELD_NUMBER = 17;
    private maxpb.MaxpbLora.LoraConfigChannelPosition positionChannel_;
    /**
     * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasPositionChannel() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraConfigChannelPosition getPositionChannel() {
      return positionChannel_;
    }
    /**
     * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraConfigChannelPositionOrBuilder getPositionChannelOrBuilder() {
      return positionChannel_;
    }

    public static final int LORAP2PCOORDINATORID_FIELD_NUMBER = 19;
    private int loraP2PCoordinatorID_;
    /**
     * <code>optional uint32 loraP2PCoordinatorID = 19;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasLoraP2PCoordinatorID() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 loraP2PCoordinatorID = 19;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getLoraP2PCoordinatorID() {
      return loraP2PCoordinatorID_;
    }

    public static final int KEEPMOVINGSTATE_FIELD_NUMBER = 20;
    private int keepMovingState_;
    /**
     * <code>optional uint32 keepMovingState = 20;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasKeepMovingState() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 keepMovingState = 20;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getKeepMovingState() {
      return keepMovingState_;
    }

    private void initFields() {
      loraModeConfig_ = maxpb.MaxpbLora.LoraMode.LM_NONE;
      loraWanFrequencyPlan_ = maxpb.MaxpbLora.LoraWanFrequencyPlan.LWF_US915;
      loraWanActivation_ = maxpb.MaxpbLora.LoraWanActivation.LWA_OTAA;
      loraWanOTAAApplicationEUI_ = 0L;
      loraWanOTAAApplicationKey_ = com.google.protobuf.ByteString.EMPTY;
      loraWanABPDeviceAddress_ = 0L;
      loraWanABPNetworkSessionKey_ = com.google.protobuf.ByteString.EMPTY;
      loraWanABPApplicationSessionKey_ = com.google.protobuf.ByteString.EMPTY;
      emergencyChannel_ = maxpb.MaxpbLora.LoraConfigChannelEmergency.getDefaultInstance();
      commandChannel_ = maxpb.MaxpbLora.LoraConfigChannelCommand.getDefaultInstance();
      paringChannel_ = maxpb.MaxpbLora.LoraConfigChannelParing.getDefaultInstance();
      positionChannel_ = maxpb.MaxpbLora.LoraConfigChannelPosition.getDefaultInstance();
      loraP2PCoordinatorID_ = 0;
      keepMovingState_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, loraModeConfig_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(7, loraWanFrequencyPlan_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(8, loraWanActivation_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(9, loraWanOTAAApplicationEUI_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(10, loraWanOTAAApplicationKey_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(11, loraWanABPDeviceAddress_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(12, loraWanABPNetworkSessionKey_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(13, loraWanABPApplicationSessionKey_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(14, emergencyChannel_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(15, commandChannel_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(16, paringChannel_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(17, positionChannel_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(19, loraP2PCoordinatorID_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(20, keepMovingState_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, loraModeConfig_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, loraWanFrequencyPlan_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, loraWanActivation_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, loraWanOTAAApplicationEUI_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, loraWanOTAAApplicationKey_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(11, loraWanABPDeviceAddress_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, loraWanABPNetworkSessionKey_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, loraWanABPApplicationSessionKey_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, emergencyChannel_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, commandChannel_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, paringChannel_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, positionChannel_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, loraP2PCoordinatorID_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, keepMovingState_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbLora.LoraConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbLora.LoraConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbLora.LoraConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.LoraConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.LoraConfig)
        maxpb.MaxpbLora.LoraConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbLora.LoraConfig.class, maxpb.MaxpbLora.LoraConfig.Builder.class);
      }

      // Construct using maxpb.MaxpbLora.LoraConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEmergencyChannelFieldBuilder();
          getCommandChannelFieldBuilder();
          getParingChannelFieldBuilder();
          getPositionChannelFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        loraModeConfig_ = maxpb.MaxpbLora.LoraMode.LM_NONE;
        bitField0_ = (bitField0_ & ~0x00000001);
        loraWanFrequencyPlan_ = maxpb.MaxpbLora.LoraWanFrequencyPlan.LWF_US915;
        bitField0_ = (bitField0_ & ~0x00000002);
        loraWanActivation_ = maxpb.MaxpbLora.LoraWanActivation.LWA_OTAA;
        bitField0_ = (bitField0_ & ~0x00000004);
        loraWanOTAAApplicationEUI_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        loraWanOTAAApplicationKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        loraWanABPDeviceAddress_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        loraWanABPNetworkSessionKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        loraWanABPApplicationSessionKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (emergencyChannelBuilder_ == null) {
          emergencyChannel_ = maxpb.MaxpbLora.LoraConfigChannelEmergency.getDefaultInstance();
        } else {
          emergencyChannelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (commandChannelBuilder_ == null) {
          commandChannel_ = maxpb.MaxpbLora.LoraConfigChannelCommand.getDefaultInstance();
        } else {
          commandChannelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (paringChannelBuilder_ == null) {
          paringChannel_ = maxpb.MaxpbLora.LoraConfigChannelParing.getDefaultInstance();
        } else {
          paringChannelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (positionChannelBuilder_ == null) {
          positionChannel_ = maxpb.MaxpbLora.LoraConfigChannelPosition.getDefaultInstance();
        } else {
          positionChannelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        loraP2PCoordinatorID_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        keepMovingState_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraConfig_descriptor;
      }

      public maxpb.MaxpbLora.LoraConfig getDefaultInstanceForType() {
        return maxpb.MaxpbLora.LoraConfig.getDefaultInstance();
      }

      public maxpb.MaxpbLora.LoraConfig build() {
        maxpb.MaxpbLora.LoraConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbLora.LoraConfig buildPartial() {
        maxpb.MaxpbLora.LoraConfig result = new maxpb.MaxpbLora.LoraConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.loraModeConfig_ = loraModeConfig_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.loraWanFrequencyPlan_ = loraWanFrequencyPlan_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.loraWanActivation_ = loraWanActivation_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.loraWanOTAAApplicationEUI_ = loraWanOTAAApplicationEUI_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.loraWanOTAAApplicationKey_ = loraWanOTAAApplicationKey_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.loraWanABPDeviceAddress_ = loraWanABPDeviceAddress_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.loraWanABPNetworkSessionKey_ = loraWanABPNetworkSessionKey_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.loraWanABPApplicationSessionKey_ = loraWanABPApplicationSessionKey_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (emergencyChannelBuilder_ == null) {
          result.emergencyChannel_ = emergencyChannel_;
        } else {
          result.emergencyChannel_ = emergencyChannelBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (commandChannelBuilder_ == null) {
          result.commandChannel_ = commandChannel_;
        } else {
          result.commandChannel_ = commandChannelBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (paringChannelBuilder_ == null) {
          result.paringChannel_ = paringChannel_;
        } else {
          result.paringChannel_ = paringChannelBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        if (positionChannelBuilder_ == null) {
          result.positionChannel_ = positionChannel_;
        } else {
          result.positionChannel_ = positionChannelBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.loraP2PCoordinatorID_ = loraP2PCoordinatorID_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.keepMovingState_ = keepMovingState_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbLora.LoraConfig) {
          return mergeFrom((maxpb.MaxpbLora.LoraConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbLora.LoraConfig other) {
        if (other == maxpb.MaxpbLora.LoraConfig.getDefaultInstance()) return this;
        if (other.hasLoraModeConfig()) {
          setLoraModeConfig(other.getLoraModeConfig());
        }
        if (other.hasLoraWanFrequencyPlan()) {
          setLoraWanFrequencyPlan(other.getLoraWanFrequencyPlan());
        }
        if (other.hasLoraWanActivation()) {
          setLoraWanActivation(other.getLoraWanActivation());
        }
        if (other.hasLoraWanOTAAApplicationEUI()) {
          setLoraWanOTAAApplicationEUI(other.getLoraWanOTAAApplicationEUI());
        }
        if (other.hasLoraWanOTAAApplicationKey()) {
          setLoraWanOTAAApplicationKey(other.getLoraWanOTAAApplicationKey());
        }
        if (other.hasLoraWanABPDeviceAddress()) {
          setLoraWanABPDeviceAddress(other.getLoraWanABPDeviceAddress());
        }
        if (other.hasLoraWanABPNetworkSessionKey()) {
          setLoraWanABPNetworkSessionKey(other.getLoraWanABPNetworkSessionKey());
        }
        if (other.hasLoraWanABPApplicationSessionKey()) {
          setLoraWanABPApplicationSessionKey(other.getLoraWanABPApplicationSessionKey());
        }
        if (other.hasEmergencyChannel()) {
          mergeEmergencyChannel(other.getEmergencyChannel());
        }
        if (other.hasCommandChannel()) {
          mergeCommandChannel(other.getCommandChannel());
        }
        if (other.hasParingChannel()) {
          mergeParingChannel(other.getParingChannel());
        }
        if (other.hasPositionChannel()) {
          mergePositionChannel(other.getPositionChannel());
        }
        if (other.hasLoraP2PCoordinatorID()) {
          setLoraP2PCoordinatorID(other.getLoraP2PCoordinatorID());
        }
        if (other.hasKeepMovingState()) {
          setKeepMovingState(other.getKeepMovingState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbLora.LoraConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbLora.LoraConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private maxpb.MaxpbLora.LoraMode loraModeConfig_ = maxpb.MaxpbLora.LoraMode.LM_NONE;
      /**
       * <code>optional .maxpb.LoraMode loraModeConfig = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasLoraModeConfig() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .maxpb.LoraMode loraModeConfig = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraMode getLoraModeConfig() {
        return loraModeConfig_;
      }
      /**
       * <code>optional .maxpb.LoraMode loraModeConfig = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setLoraModeConfig(maxpb.MaxpbLora.LoraMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        loraModeConfig_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraMode loraModeConfig = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearLoraModeConfig() {
        bitField0_ = (bitField0_ & ~0x00000001);
        loraModeConfig_ = maxpb.MaxpbLora.LoraMode.LM_NONE;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraWanFrequencyPlan loraWanFrequencyPlan_ = maxpb.MaxpbLora.LoraWanFrequencyPlan.LWF_US915;
      /**
       * <code>optional .maxpb.LoraWanFrequencyPlan loraWanFrequencyPlan = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasLoraWanFrequencyPlan() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .maxpb.LoraWanFrequencyPlan loraWanFrequencyPlan = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraWanFrequencyPlan getLoraWanFrequencyPlan() {
        return loraWanFrequencyPlan_;
      }
      /**
       * <code>optional .maxpb.LoraWanFrequencyPlan loraWanFrequencyPlan = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setLoraWanFrequencyPlan(maxpb.MaxpbLora.LoraWanFrequencyPlan value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        loraWanFrequencyPlan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraWanFrequencyPlan loraWanFrequencyPlan = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearLoraWanFrequencyPlan() {
        bitField0_ = (bitField0_ & ~0x00000002);
        loraWanFrequencyPlan_ = maxpb.MaxpbLora.LoraWanFrequencyPlan.LWF_US915;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraWanActivation loraWanActivation_ = maxpb.MaxpbLora.LoraWanActivation.LWA_OTAA;
      /**
       * <code>optional .maxpb.LoraWanActivation loraWanActivation = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasLoraWanActivation() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .maxpb.LoraWanActivation loraWanActivation = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraWanActivation getLoraWanActivation() {
        return loraWanActivation_;
      }
      /**
       * <code>optional .maxpb.LoraWanActivation loraWanActivation = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setLoraWanActivation(maxpb.MaxpbLora.LoraWanActivation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        loraWanActivation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraWanActivation loraWanActivation = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearLoraWanActivation() {
        bitField0_ = (bitField0_ & ~0x00000004);
        loraWanActivation_ = maxpb.MaxpbLora.LoraWanActivation.LWA_OTAA;
        onChanged();
        return this;
      }

      private long loraWanOTAAApplicationEUI_ ;
      /**
       * <code>optional uint64 loraWanOTAAApplicationEUI = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasLoraWanOTAAApplicationEUI() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 loraWanOTAAApplicationEUI = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public long getLoraWanOTAAApplicationEUI() {
        return loraWanOTAAApplicationEUI_;
      }
      /**
       * <code>optional uint64 loraWanOTAAApplicationEUI = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setLoraWanOTAAApplicationEUI(long value) {
        bitField0_ |= 0x00000008;
        loraWanOTAAApplicationEUI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 loraWanOTAAApplicationEUI = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearLoraWanOTAAApplicationEUI() {
        bitField0_ = (bitField0_ & ~0x00000008);
        loraWanOTAAApplicationEUI_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString loraWanOTAAApplicationKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes loraWanOTAAApplicationKey = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasLoraWanOTAAApplicationKey() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes loraWanOTAAApplicationKey = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public com.google.protobuf.ByteString getLoraWanOTAAApplicationKey() {
        return loraWanOTAAApplicationKey_;
      }
      /**
       * <code>optional bytes loraWanOTAAApplicationKey = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setLoraWanOTAAApplicationKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        loraWanOTAAApplicationKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes loraWanOTAAApplicationKey = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearLoraWanOTAAApplicationKey() {
        bitField0_ = (bitField0_ & ~0x00000010);
        loraWanOTAAApplicationKey_ = getDefaultInstance().getLoraWanOTAAApplicationKey();
        onChanged();
        return this;
      }

      private long loraWanABPDeviceAddress_ ;
      /**
       * <code>optional uint64 loraWanABPDeviceAddress = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasLoraWanABPDeviceAddress() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 loraWanABPDeviceAddress = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public long getLoraWanABPDeviceAddress() {
        return loraWanABPDeviceAddress_;
      }
      /**
       * <code>optional uint64 loraWanABPDeviceAddress = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setLoraWanABPDeviceAddress(long value) {
        bitField0_ |= 0x00000020;
        loraWanABPDeviceAddress_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 loraWanABPDeviceAddress = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearLoraWanABPDeviceAddress() {
        bitField0_ = (bitField0_ & ~0x00000020);
        loraWanABPDeviceAddress_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString loraWanABPNetworkSessionKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes loraWanABPNetworkSessionKey = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasLoraWanABPNetworkSessionKey() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bytes loraWanABPNetworkSessionKey = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public com.google.protobuf.ByteString getLoraWanABPNetworkSessionKey() {
        return loraWanABPNetworkSessionKey_;
      }
      /**
       * <code>optional bytes loraWanABPNetworkSessionKey = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setLoraWanABPNetworkSessionKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        loraWanABPNetworkSessionKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes loraWanABPNetworkSessionKey = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearLoraWanABPNetworkSessionKey() {
        bitField0_ = (bitField0_ & ~0x00000040);
        loraWanABPNetworkSessionKey_ = getDefaultInstance().getLoraWanABPNetworkSessionKey();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString loraWanABPApplicationSessionKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes loraWanABPApplicationSessionKey = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasLoraWanABPApplicationSessionKey() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bytes loraWanABPApplicationSessionKey = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public com.google.protobuf.ByteString getLoraWanABPApplicationSessionKey() {
        return loraWanABPApplicationSessionKey_;
      }
      /**
       * <code>optional bytes loraWanABPApplicationSessionKey = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setLoraWanABPApplicationSessionKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        loraWanABPApplicationSessionKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes loraWanABPApplicationSessionKey = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearLoraWanABPApplicationSessionKey() {
        bitField0_ = (bitField0_ & ~0x00000080);
        loraWanABPApplicationSessionKey_ = getDefaultInstance().getLoraWanABPApplicationSessionKey();
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraConfigChannelEmergency emergencyChannel_ = maxpb.MaxpbLora.LoraConfigChannelEmergency.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbLora.LoraConfigChannelEmergency, maxpb.MaxpbLora.LoraConfigChannelEmergency.Builder, maxpb.MaxpbLora.LoraConfigChannelEmergencyOrBuilder> emergencyChannelBuilder_;
      /**
       * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasEmergencyChannel() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelEmergency getEmergencyChannel() {
        if (emergencyChannelBuilder_ == null) {
          return emergencyChannel_;
        } else {
          return emergencyChannelBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setEmergencyChannel(maxpb.MaxpbLora.LoraConfigChannelEmergency value) {
        if (emergencyChannelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          emergencyChannel_ = value;
          onChanged();
        } else {
          emergencyChannelBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setEmergencyChannel(
          maxpb.MaxpbLora.LoraConfigChannelEmergency.Builder builderForValue) {
        if (emergencyChannelBuilder_ == null) {
          emergencyChannel_ = builderForValue.build();
          onChanged();
        } else {
          emergencyChannelBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder mergeEmergencyChannel(maxpb.MaxpbLora.LoraConfigChannelEmergency value) {
        if (emergencyChannelBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              emergencyChannel_ != maxpb.MaxpbLora.LoraConfigChannelEmergency.getDefaultInstance()) {
            emergencyChannel_ =
              maxpb.MaxpbLora.LoraConfigChannelEmergency.newBuilder(emergencyChannel_).mergeFrom(value).buildPartial();
          } else {
            emergencyChannel_ = value;
          }
          onChanged();
        } else {
          emergencyChannelBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearEmergencyChannel() {
        if (emergencyChannelBuilder_ == null) {
          emergencyChannel_ = maxpb.MaxpbLora.LoraConfigChannelEmergency.getDefaultInstance();
          onChanged();
        } else {
          emergencyChannelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelEmergency.Builder getEmergencyChannelBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getEmergencyChannelFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelEmergencyOrBuilder getEmergencyChannelOrBuilder() {
        if (emergencyChannelBuilder_ != null) {
          return emergencyChannelBuilder_.getMessageOrBuilder();
        } else {
          return emergencyChannel_;
        }
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbLora.LoraConfigChannelEmergency, maxpb.MaxpbLora.LoraConfigChannelEmergency.Builder, maxpb.MaxpbLora.LoraConfigChannelEmergencyOrBuilder> 
          getEmergencyChannelFieldBuilder() {
        if (emergencyChannelBuilder_ == null) {
          emergencyChannelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbLora.LoraConfigChannelEmergency, maxpb.MaxpbLora.LoraConfigChannelEmergency.Builder, maxpb.MaxpbLora.LoraConfigChannelEmergencyOrBuilder>(
                  getEmergencyChannel(),
                  getParentForChildren(),
                  isClean());
          emergencyChannel_ = null;
        }
        return emergencyChannelBuilder_;
      }

      private maxpb.MaxpbLora.LoraConfigChannelCommand commandChannel_ = maxpb.MaxpbLora.LoraConfigChannelCommand.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbLora.LoraConfigChannelCommand, maxpb.MaxpbLora.LoraConfigChannelCommand.Builder, maxpb.MaxpbLora.LoraConfigChannelCommandOrBuilder> commandChannelBuilder_;
      /**
       * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasCommandChannel() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelCommand getCommandChannel() {
        if (commandChannelBuilder_ == null) {
          return commandChannel_;
        } else {
          return commandChannelBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setCommandChannel(maxpb.MaxpbLora.LoraConfigChannelCommand value) {
        if (commandChannelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          commandChannel_ = value;
          onChanged();
        } else {
          commandChannelBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setCommandChannel(
          maxpb.MaxpbLora.LoraConfigChannelCommand.Builder builderForValue) {
        if (commandChannelBuilder_ == null) {
          commandChannel_ = builderForValue.build();
          onChanged();
        } else {
          commandChannelBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder mergeCommandChannel(maxpb.MaxpbLora.LoraConfigChannelCommand value) {
        if (commandChannelBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              commandChannel_ != maxpb.MaxpbLora.LoraConfigChannelCommand.getDefaultInstance()) {
            commandChannel_ =
              maxpb.MaxpbLora.LoraConfigChannelCommand.newBuilder(commandChannel_).mergeFrom(value).buildPartial();
          } else {
            commandChannel_ = value;
          }
          onChanged();
        } else {
          commandChannelBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearCommandChannel() {
        if (commandChannelBuilder_ == null) {
          commandChannel_ = maxpb.MaxpbLora.LoraConfigChannelCommand.getDefaultInstance();
          onChanged();
        } else {
          commandChannelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelCommand.Builder getCommandChannelBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getCommandChannelFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelCommandOrBuilder getCommandChannelOrBuilder() {
        if (commandChannelBuilder_ != null) {
          return commandChannelBuilder_.getMessageOrBuilder();
        } else {
          return commandChannel_;
        }
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbLora.LoraConfigChannelCommand, maxpb.MaxpbLora.LoraConfigChannelCommand.Builder, maxpb.MaxpbLora.LoraConfigChannelCommandOrBuilder> 
          getCommandChannelFieldBuilder() {
        if (commandChannelBuilder_ == null) {
          commandChannelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbLora.LoraConfigChannelCommand, maxpb.MaxpbLora.LoraConfigChannelCommand.Builder, maxpb.MaxpbLora.LoraConfigChannelCommandOrBuilder>(
                  getCommandChannel(),
                  getParentForChildren(),
                  isClean());
          commandChannel_ = null;
        }
        return commandChannelBuilder_;
      }

      private maxpb.MaxpbLora.LoraConfigChannelParing paringChannel_ = maxpb.MaxpbLora.LoraConfigChannelParing.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbLora.LoraConfigChannelParing, maxpb.MaxpbLora.LoraConfigChannelParing.Builder, maxpb.MaxpbLora.LoraConfigChannelParingOrBuilder> paringChannelBuilder_;
      /**
       * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasParingChannel() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelParing getParingChannel() {
        if (paringChannelBuilder_ == null) {
          return paringChannel_;
        } else {
          return paringChannelBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setParingChannel(maxpb.MaxpbLora.LoraConfigChannelParing value) {
        if (paringChannelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          paringChannel_ = value;
          onChanged();
        } else {
          paringChannelBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setParingChannel(
          maxpb.MaxpbLora.LoraConfigChannelParing.Builder builderForValue) {
        if (paringChannelBuilder_ == null) {
          paringChannel_ = builderForValue.build();
          onChanged();
        } else {
          paringChannelBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder mergeParingChannel(maxpb.MaxpbLora.LoraConfigChannelParing value) {
        if (paringChannelBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              paringChannel_ != maxpb.MaxpbLora.LoraConfigChannelParing.getDefaultInstance()) {
            paringChannel_ =
              maxpb.MaxpbLora.LoraConfigChannelParing.newBuilder(paringChannel_).mergeFrom(value).buildPartial();
          } else {
            paringChannel_ = value;
          }
          onChanged();
        } else {
          paringChannelBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearParingChannel() {
        if (paringChannelBuilder_ == null) {
          paringChannel_ = maxpb.MaxpbLora.LoraConfigChannelParing.getDefaultInstance();
          onChanged();
        } else {
          paringChannelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelParing.Builder getParingChannelBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getParingChannelFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelParingOrBuilder getParingChannelOrBuilder() {
        if (paringChannelBuilder_ != null) {
          return paringChannelBuilder_.getMessageOrBuilder();
        } else {
          return paringChannel_;
        }
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbLora.LoraConfigChannelParing, maxpb.MaxpbLora.LoraConfigChannelParing.Builder, maxpb.MaxpbLora.LoraConfigChannelParingOrBuilder> 
          getParingChannelFieldBuilder() {
        if (paringChannelBuilder_ == null) {
          paringChannelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbLora.LoraConfigChannelParing, maxpb.MaxpbLora.LoraConfigChannelParing.Builder, maxpb.MaxpbLora.LoraConfigChannelParingOrBuilder>(
                  getParingChannel(),
                  getParentForChildren(),
                  isClean());
          paringChannel_ = null;
        }
        return paringChannelBuilder_;
      }

      private maxpb.MaxpbLora.LoraConfigChannelPosition positionChannel_ = maxpb.MaxpbLora.LoraConfigChannelPosition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbLora.LoraConfigChannelPosition, maxpb.MaxpbLora.LoraConfigChannelPosition.Builder, maxpb.MaxpbLora.LoraConfigChannelPositionOrBuilder> positionChannelBuilder_;
      /**
       * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasPositionChannel() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelPosition getPositionChannel() {
        if (positionChannelBuilder_ == null) {
          return positionChannel_;
        } else {
          return positionChannelBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setPositionChannel(maxpb.MaxpbLora.LoraConfigChannelPosition value) {
        if (positionChannelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          positionChannel_ = value;
          onChanged();
        } else {
          positionChannelBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setPositionChannel(
          maxpb.MaxpbLora.LoraConfigChannelPosition.Builder builderForValue) {
        if (positionChannelBuilder_ == null) {
          positionChannel_ = builderForValue.build();
          onChanged();
        } else {
          positionChannelBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder mergePositionChannel(maxpb.MaxpbLora.LoraConfigChannelPosition value) {
        if (positionChannelBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              positionChannel_ != maxpb.MaxpbLora.LoraConfigChannelPosition.getDefaultInstance()) {
            positionChannel_ =
              maxpb.MaxpbLora.LoraConfigChannelPosition.newBuilder(positionChannel_).mergeFrom(value).buildPartial();
          } else {
            positionChannel_ = value;
          }
          onChanged();
        } else {
          positionChannelBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearPositionChannel() {
        if (positionChannelBuilder_ == null) {
          positionChannel_ = maxpb.MaxpbLora.LoraConfigChannelPosition.getDefaultInstance();
          onChanged();
        } else {
          positionChannelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelPosition.Builder getPositionChannelBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getPositionChannelFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelPositionOrBuilder getPositionChannelOrBuilder() {
        if (positionChannelBuilder_ != null) {
          return positionChannelBuilder_.getMessageOrBuilder();
        } else {
          return positionChannel_;
        }
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbLora.LoraConfigChannelPosition, maxpb.MaxpbLora.LoraConfigChannelPosition.Builder, maxpb.MaxpbLora.LoraConfigChannelPositionOrBuilder> 
          getPositionChannelFieldBuilder() {
        if (positionChannelBuilder_ == null) {
          positionChannelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbLora.LoraConfigChannelPosition, maxpb.MaxpbLora.LoraConfigChannelPosition.Builder, maxpb.MaxpbLora.LoraConfigChannelPositionOrBuilder>(
                  getPositionChannel(),
                  getParentForChildren(),
                  isClean());
          positionChannel_ = null;
        }
        return positionChannelBuilder_;
      }

      private int loraP2PCoordinatorID_ ;
      /**
       * <code>optional uint32 loraP2PCoordinatorID = 19;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasLoraP2PCoordinatorID() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 loraP2PCoordinatorID = 19;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getLoraP2PCoordinatorID() {
        return loraP2PCoordinatorID_;
      }
      /**
       * <code>optional uint32 loraP2PCoordinatorID = 19;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setLoraP2PCoordinatorID(int value) {
        bitField0_ |= 0x00001000;
        loraP2PCoordinatorID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 loraP2PCoordinatorID = 19;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearLoraP2PCoordinatorID() {
        bitField0_ = (bitField0_ & ~0x00001000);
        loraP2PCoordinatorID_ = 0;
        onChanged();
        return this;
      }

      private int keepMovingState_ ;
      /**
       * <code>optional uint32 keepMovingState = 20;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasKeepMovingState() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 keepMovingState = 20;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getKeepMovingState() {
        return keepMovingState_;
      }
      /**
       * <code>optional uint32 keepMovingState = 20;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setKeepMovingState(int value) {
        bitField0_ |= 0x00002000;
        keepMovingState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 keepMovingState = 20;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearKeepMovingState() {
        bitField0_ = (bitField0_ & ~0x00002000);
        keepMovingState_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.LoraConfig)
    }

    static {
      defaultInstance = new LoraConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.LoraConfig)
  }

  public interface DeviceItemOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.DeviceItem)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 index = 1;</code>
     */
    boolean hasIndex();
    /**
     * <code>required uint32 index = 1;</code>
     */
    int getIndex();

    /**
     * <code>required uint32 LoraID = 2;</code>
     */
    boolean hasLoraID();
    /**
     * <code>required uint32 LoraID = 2;</code>
     */
    int getLoraID();

    /**
     * <code>required uint64 IEEE = 3;</code>
     */
    boolean hasIEEE();
    /**
     * <code>required uint64 IEEE = 3;</code>
     */
    long getIEEE();
  }
  /**
   * Protobuf type {@code maxpb.DeviceItem}
   */
  public static final class DeviceItem extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.DeviceItem)
      DeviceItemOrBuilder {
    // Use DeviceItem.newBuilder() to construct.
    private DeviceItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeviceItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeviceItem defaultInstance;
    public static DeviceItem getDefaultInstance() {
      return defaultInstance;
    }

    public DeviceItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeviceItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              index_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              loraID_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              iEEE_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbLora.internal_static_maxpb_DeviceItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbLora.internal_static_maxpb_DeviceItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbLora.DeviceItem.class, maxpb.MaxpbLora.DeviceItem.Builder.class);
    }

    public static com.google.protobuf.Parser<DeviceItem> PARSER =
        new com.google.protobuf.AbstractParser<DeviceItem>() {
      public DeviceItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeviceItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_;
    /**
     * <code>required uint32 index = 1;</code>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 index = 1;</code>
     */
    public int getIndex() {
      return index_;
    }

    public static final int LORAID_FIELD_NUMBER = 2;
    private int loraID_;
    /**
     * <code>required uint32 LoraID = 2;</code>
     */
    public boolean hasLoraID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 LoraID = 2;</code>
     */
    public int getLoraID() {
      return loraID_;
    }

    public static final int IEEE_FIELD_NUMBER = 3;
    private long iEEE_;
    /**
     * <code>required uint64 IEEE = 3;</code>
     */
    public boolean hasIEEE() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint64 IEEE = 3;</code>
     */
    public long getIEEE() {
      return iEEE_;
    }

    private void initFields() {
      index_ = 0;
      loraID_ = 0;
      iEEE_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLoraID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIEEE()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, loraID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, iEEE_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, loraID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, iEEE_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbLora.DeviceItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.DeviceItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.DeviceItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.DeviceItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.DeviceItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.DeviceItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.DeviceItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbLora.DeviceItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.DeviceItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.DeviceItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbLora.DeviceItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.DeviceItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.DeviceItem)
        maxpb.MaxpbLora.DeviceItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbLora.internal_static_maxpb_DeviceItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbLora.internal_static_maxpb_DeviceItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbLora.DeviceItem.class, maxpb.MaxpbLora.DeviceItem.Builder.class);
      }

      // Construct using maxpb.MaxpbLora.DeviceItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        loraID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        iEEE_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbLora.internal_static_maxpb_DeviceItem_descriptor;
      }

      public maxpb.MaxpbLora.DeviceItem getDefaultInstanceForType() {
        return maxpb.MaxpbLora.DeviceItem.getDefaultInstance();
      }

      public maxpb.MaxpbLora.DeviceItem build() {
        maxpb.MaxpbLora.DeviceItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbLora.DeviceItem buildPartial() {
        maxpb.MaxpbLora.DeviceItem result = new maxpb.MaxpbLora.DeviceItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.loraID_ = loraID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.iEEE_ = iEEE_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbLora.DeviceItem) {
          return mergeFrom((maxpb.MaxpbLora.DeviceItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbLora.DeviceItem other) {
        if (other == maxpb.MaxpbLora.DeviceItem.getDefaultInstance()) return this;
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasLoraID()) {
          setLoraID(other.getLoraID());
        }
        if (other.hasIEEE()) {
          setIEEE(other.getIEEE());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasIndex()) {
          
          return false;
        }
        if (!hasLoraID()) {
          
          return false;
        }
        if (!hasIEEE()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbLora.DeviceItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbLora.DeviceItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int index_ ;
      /**
       * <code>required uint32 index = 1;</code>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 index = 1;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>required uint32 index = 1;</code>
       */
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000001;
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 index = 1;</code>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;
        onChanged();
        return this;
      }

      private int loraID_ ;
      /**
       * <code>required uint32 LoraID = 2;</code>
       */
      public boolean hasLoraID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 LoraID = 2;</code>
       */
      public int getLoraID() {
        return loraID_;
      }
      /**
       * <code>required uint32 LoraID = 2;</code>
       */
      public Builder setLoraID(int value) {
        bitField0_ |= 0x00000002;
        loraID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 LoraID = 2;</code>
       */
      public Builder clearLoraID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        loraID_ = 0;
        onChanged();
        return this;
      }

      private long iEEE_ ;
      /**
       * <code>required uint64 IEEE = 3;</code>
       */
      public boolean hasIEEE() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint64 IEEE = 3;</code>
       */
      public long getIEEE() {
        return iEEE_;
      }
      /**
       * <code>required uint64 IEEE = 3;</code>
       */
      public Builder setIEEE(long value) {
        bitField0_ |= 0x00000004;
        iEEE_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 IEEE = 3;</code>
       */
      public Builder clearIEEE() {
        bitField0_ = (bitField0_ & ~0x00000004);
        iEEE_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.DeviceItem)
    }

    static {
      defaultInstance = new DeviceItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.DeviceItem)
  }

  public interface LoraConfigPeripheralsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.LoraConfigPeripherals)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .maxpb.LoraMode loraModeConfig = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasLoraModeConfig();
    /**
     * <code>optional .maxpb.LoraMode loraModeConfig = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraMode getLoraModeConfig();

    /**
     * <code>optional .maxpb.LoraWanFrequencyPlan loraWanFrequencyPlan = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasLoraWanFrequencyPlan();
    /**
     * <code>optional .maxpb.LoraWanFrequencyPlan loraWanFrequencyPlan = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraWanFrequencyPlan getLoraWanFrequencyPlan();

    /**
     * <code>optional .maxpb.LoraWanActivation loraWanActivation = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasLoraWanActivation();
    /**
     * <code>optional .maxpb.LoraWanActivation loraWanActivation = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraWanActivation getLoraWanActivation();

    /**
     * <code>optional uint64 loraWanOTAAApplicationEUI = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasLoraWanOTAAApplicationEUI();
    /**
     * <code>optional uint64 loraWanOTAAApplicationEUI = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    long getLoraWanOTAAApplicationEUI();

    /**
     * <code>optional bytes loraWanOTAAApplicationKey = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasLoraWanOTAAApplicationKey();
    /**
     * <code>optional bytes loraWanOTAAApplicationKey = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    com.google.protobuf.ByteString getLoraWanOTAAApplicationKey();

    /**
     * <code>optional uint64 loraWanABPDeviceAddress = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasLoraWanABPDeviceAddress();
    /**
     * <code>optional uint64 loraWanABPDeviceAddress = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    long getLoraWanABPDeviceAddress();

    /**
     * <code>optional bytes loraWanABPNetworkSessionKey = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasLoraWanABPNetworkSessionKey();
    /**
     * <code>optional bytes loraWanABPNetworkSessionKey = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    com.google.protobuf.ByteString getLoraWanABPNetworkSessionKey();

    /**
     * <code>optional bytes loraWanABPApplicationSessionKey = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasLoraWanABPApplicationSessionKey();
    /**
     * <code>optional bytes loraWanABPApplicationSessionKey = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    com.google.protobuf.ByteString getLoraWanABPApplicationSessionKey();

    /**
     * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasEmergencyChannel();
    /**
     * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraConfigChannelEmergency getEmergencyChannel();
    /**
     * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraConfigChannelEmergencyOrBuilder getEmergencyChannelOrBuilder();

    /**
     * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasCommandChannel();
    /**
     * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraConfigChannelCommand getCommandChannel();
    /**
     * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraConfigChannelCommandOrBuilder getCommandChannelOrBuilder();

    /**
     * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasParingChannel();
    /**
     * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraConfigChannelParing getParingChannel();
    /**
     * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.LoraConfigChannelParingOrBuilder getParingChannelOrBuilder();

    /**
     * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasPositionChannel();
    /**
     * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraConfigChannelPosition getPositionChannel();
    /**
     * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraConfigChannelPositionOrBuilder getPositionChannelOrBuilder();

    /**
     * <code>optional uint32 keepMovingState = 20;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    boolean hasKeepMovingState();
    /**
     * <code>optional uint32 keepMovingState = 20;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getKeepMovingState();

    /**
     * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    java.util.List<maxpb.MaxpbLora.DeviceItem> 
        getLoraDevicesList();
    /**
     * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.DeviceItem getLoraDevices(int index);
    /**
     * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getLoraDevicesCount();
    /**
     * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbLora.DeviceItemOrBuilder> 
        getLoraDevicesOrBuilderList();
    /**
     * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.DeviceItemOrBuilder getLoraDevicesOrBuilder(
        int index);

    /**
     * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    java.util.List<maxpb.MaxpbLora.DeviceItem> 
        getZigbeeDevicesList();
    /**
     * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.DeviceItem getZigbeeDevices(int index);
    /**
     * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    int getZigbeeDevicesCount();
    /**
     * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbLora.DeviceItemOrBuilder> 
        getZigbeeDevicesOrBuilderList();
    /**
     * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    maxpb.MaxpbLora.DeviceItemOrBuilder getZigbeeDevicesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code maxpb.LoraConfigPeripherals}
   */
  public static final class LoraConfigPeripherals extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.LoraConfigPeripherals)
      LoraConfigPeripheralsOrBuilder {
    // Use LoraConfigPeripherals.newBuilder() to construct.
    private LoraConfigPeripherals(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LoraConfigPeripherals(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LoraConfigPeripherals defaultInstance;
    public static LoraConfigPeripherals getDefaultInstance() {
      return defaultInstance;
    }

    public LoraConfigPeripherals getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LoraConfigPeripherals(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraMode value = maxpb.MaxpbLora.LoraMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                loraModeConfig_ = value;
              }
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraWanFrequencyPlan value = maxpb.MaxpbLora.LoraWanFrequencyPlan.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                loraWanFrequencyPlan_ = value;
              }
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraWanActivation value = maxpb.MaxpbLora.LoraWanActivation.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                loraWanActivation_ = value;
              }
              break;
            }
            case 72: {
              bitField0_ |= 0x00000008;
              loraWanOTAAApplicationEUI_ = input.readUInt64();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000010;
              loraWanOTAAApplicationKey_ = input.readBytes();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000020;
              loraWanABPDeviceAddress_ = input.readUInt64();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000040;
              loraWanABPNetworkSessionKey_ = input.readBytes();
              break;
            }
            case 106: {
              bitField0_ |= 0x00000080;
              loraWanABPApplicationSessionKey_ = input.readBytes();
              break;
            }
            case 114: {
              maxpb.MaxpbLora.LoraConfigChannelEmergency.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = emergencyChannel_.toBuilder();
              }
              emergencyChannel_ = input.readMessage(maxpb.MaxpbLora.LoraConfigChannelEmergency.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(emergencyChannel_);
                emergencyChannel_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 122: {
              maxpb.MaxpbLora.LoraConfigChannelCommand.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = commandChannel_.toBuilder();
              }
              commandChannel_ = input.readMessage(maxpb.MaxpbLora.LoraConfigChannelCommand.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(commandChannel_);
                commandChannel_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 130: {
              maxpb.MaxpbLora.LoraConfigChannelParing.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = paringChannel_.toBuilder();
              }
              paringChannel_ = input.readMessage(maxpb.MaxpbLora.LoraConfigChannelParing.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(paringChannel_);
                paringChannel_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 138: {
              maxpb.MaxpbLora.LoraConfigChannelPosition.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = positionChannel_.toBuilder();
              }
              positionChannel_ = input.readMessage(maxpb.MaxpbLora.LoraConfigChannelPosition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(positionChannel_);
                positionChannel_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 160: {
              bitField0_ |= 0x00001000;
              keepMovingState_ = input.readUInt32();
              break;
            }
            case 170: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                loraDevices_ = new java.util.ArrayList<maxpb.MaxpbLora.DeviceItem>();
                mutable_bitField0_ |= 0x00002000;
              }
              loraDevices_.add(input.readMessage(maxpb.MaxpbLora.DeviceItem.PARSER, extensionRegistry));
              break;
            }
            case 178: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                zigbeeDevices_ = new java.util.ArrayList<maxpb.MaxpbLora.DeviceItem>();
                mutable_bitField0_ |= 0x00004000;
              }
              zigbeeDevices_.add(input.readMessage(maxpb.MaxpbLora.DeviceItem.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          loraDevices_ = java.util.Collections.unmodifiableList(loraDevices_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          zigbeeDevices_ = java.util.Collections.unmodifiableList(zigbeeDevices_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigPeripherals_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigPeripherals_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbLora.LoraConfigPeripherals.class, maxpb.MaxpbLora.LoraConfigPeripherals.Builder.class);
    }

    public static com.google.protobuf.Parser<LoraConfigPeripherals> PARSER =
        new com.google.protobuf.AbstractParser<LoraConfigPeripherals>() {
      public LoraConfigPeripherals parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LoraConfigPeripherals(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LoraConfigPeripherals> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LORAMODECONFIG_FIELD_NUMBER = 1;
    private maxpb.MaxpbLora.LoraMode loraModeConfig_;
    /**
     * <code>optional .maxpb.LoraMode loraModeConfig = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasLoraModeConfig() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .maxpb.LoraMode loraModeConfig = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraMode getLoraModeConfig() {
      return loraModeConfig_;
    }

    public static final int LORAWANFREQUENCYPLAN_FIELD_NUMBER = 7;
    private maxpb.MaxpbLora.LoraWanFrequencyPlan loraWanFrequencyPlan_;
    /**
     * <code>optional .maxpb.LoraWanFrequencyPlan loraWanFrequencyPlan = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasLoraWanFrequencyPlan() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .maxpb.LoraWanFrequencyPlan loraWanFrequencyPlan = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraWanFrequencyPlan getLoraWanFrequencyPlan() {
      return loraWanFrequencyPlan_;
    }

    public static final int LORAWANACTIVATION_FIELD_NUMBER = 8;
    private maxpb.MaxpbLora.LoraWanActivation loraWanActivation_;
    /**
     * <code>optional .maxpb.LoraWanActivation loraWanActivation = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasLoraWanActivation() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .maxpb.LoraWanActivation loraWanActivation = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraWanActivation getLoraWanActivation() {
      return loraWanActivation_;
    }

    public static final int LORAWANOTAAAPPLICATIONEUI_FIELD_NUMBER = 9;
    private long loraWanOTAAApplicationEUI_;
    /**
     * <code>optional uint64 loraWanOTAAApplicationEUI = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasLoraWanOTAAApplicationEUI() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 loraWanOTAAApplicationEUI = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public long getLoraWanOTAAApplicationEUI() {
      return loraWanOTAAApplicationEUI_;
    }

    public static final int LORAWANOTAAAPPLICATIONKEY_FIELD_NUMBER = 10;
    private com.google.protobuf.ByteString loraWanOTAAApplicationKey_;
    /**
     * <code>optional bytes loraWanOTAAApplicationKey = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasLoraWanOTAAApplicationKey() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bytes loraWanOTAAApplicationKey = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public com.google.protobuf.ByteString getLoraWanOTAAApplicationKey() {
      return loraWanOTAAApplicationKey_;
    }

    public static final int LORAWANABPDEVICEADDRESS_FIELD_NUMBER = 11;
    private long loraWanABPDeviceAddress_;
    /**
     * <code>optional uint64 loraWanABPDeviceAddress = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasLoraWanABPDeviceAddress() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 loraWanABPDeviceAddress = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public long getLoraWanABPDeviceAddress() {
      return loraWanABPDeviceAddress_;
    }

    public static final int LORAWANABPNETWORKSESSIONKEY_FIELD_NUMBER = 12;
    private com.google.protobuf.ByteString loraWanABPNetworkSessionKey_;
    /**
     * <code>optional bytes loraWanABPNetworkSessionKey = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasLoraWanABPNetworkSessionKey() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bytes loraWanABPNetworkSessionKey = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public com.google.protobuf.ByteString getLoraWanABPNetworkSessionKey() {
      return loraWanABPNetworkSessionKey_;
    }

    public static final int LORAWANABPAPPLICATIONSESSIONKEY_FIELD_NUMBER = 13;
    private com.google.protobuf.ByteString loraWanABPApplicationSessionKey_;
    /**
     * <code>optional bytes loraWanABPApplicationSessionKey = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasLoraWanABPApplicationSessionKey() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bytes loraWanABPApplicationSessionKey = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public com.google.protobuf.ByteString getLoraWanABPApplicationSessionKey() {
      return loraWanABPApplicationSessionKey_;
    }

    public static final int EMERGENCYCHANNEL_FIELD_NUMBER = 14;
    private maxpb.MaxpbLora.LoraConfigChannelEmergency emergencyChannel_;
    /**
     * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasEmergencyChannel() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraConfigChannelEmergency getEmergencyChannel() {
      return emergencyChannel_;
    }
    /**
     * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraConfigChannelEmergencyOrBuilder getEmergencyChannelOrBuilder() {
      return emergencyChannel_;
    }

    public static final int COMMANDCHANNEL_FIELD_NUMBER = 15;
    private maxpb.MaxpbLora.LoraConfigChannelCommand commandChannel_;
    /**
     * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasCommandChannel() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraConfigChannelCommand getCommandChannel() {
      return commandChannel_;
    }
    /**
     * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraConfigChannelCommandOrBuilder getCommandChannelOrBuilder() {
      return commandChannel_;
    }

    public static final int PARINGCHANNEL_FIELD_NUMBER = 16;
    private maxpb.MaxpbLora.LoraConfigChannelParing paringChannel_;
    /**
     * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasParingChannel() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraConfigChannelParing getParingChannel() {
      return paringChannel_;
    }
    /**
     * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.LoraConfigChannelParingOrBuilder getParingChannelOrBuilder() {
      return paringChannel_;
    }

    public static final int POSITIONCHANNEL_FIELD_NUMBER = 17;
    private maxpb.MaxpbLora.LoraConfigChannelPosition positionChannel_;
    /**
     * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasPositionChannel() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraConfigChannelPosition getPositionChannel() {
      return positionChannel_;
    }
    /**
     * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraConfigChannelPositionOrBuilder getPositionChannelOrBuilder() {
      return positionChannel_;
    }

    public static final int KEEPMOVINGSTATE_FIELD_NUMBER = 20;
    private int keepMovingState_;
    /**
     * <code>optional uint32 keepMovingState = 20;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public boolean hasKeepMovingState() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 keepMovingState = 20;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getKeepMovingState() {
      return keepMovingState_;
    }

    public static final int LORADEVICES_FIELD_NUMBER = 21;
    private java.util.List<maxpb.MaxpbLora.DeviceItem> loraDevices_;
    /**
     * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public java.util.List<maxpb.MaxpbLora.DeviceItem> getLoraDevicesList() {
      return loraDevices_;
    }
    /**
     * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbLora.DeviceItemOrBuilder> 
        getLoraDevicesOrBuilderList() {
      return loraDevices_;
    }
    /**
     * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getLoraDevicesCount() {
      return loraDevices_.size();
    }
    /**
     * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.DeviceItem getLoraDevices(int index) {
      return loraDevices_.get(index);
    }
    /**
     * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.DeviceItemOrBuilder getLoraDevicesOrBuilder(
        int index) {
      return loraDevices_.get(index);
    }

    public static final int ZIGBEEDEVICES_FIELD_NUMBER = 22;
    private java.util.List<maxpb.MaxpbLora.DeviceItem> zigbeeDevices_;
    /**
     * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public java.util.List<maxpb.MaxpbLora.DeviceItem> getZigbeeDevicesList() {
      return zigbeeDevices_;
    }
    /**
     * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbLora.DeviceItemOrBuilder> 
        getZigbeeDevicesOrBuilderList() {
      return zigbeeDevices_;
    }
    /**
     * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public int getZigbeeDevicesCount() {
      return zigbeeDevices_.size();
    }
    /**
     * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.DeviceItem getZigbeeDevices(int index) {
      return zigbeeDevices_.get(index);
    }
    /**
     * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public maxpb.MaxpbLora.DeviceItemOrBuilder getZigbeeDevicesOrBuilder(
        int index) {
      return zigbeeDevices_.get(index);
    }

    private void initFields() {
      loraModeConfig_ = maxpb.MaxpbLora.LoraMode.LM_NONE;
      loraWanFrequencyPlan_ = maxpb.MaxpbLora.LoraWanFrequencyPlan.LWF_US915;
      loraWanActivation_ = maxpb.MaxpbLora.LoraWanActivation.LWA_OTAA;
      loraWanOTAAApplicationEUI_ = 0L;
      loraWanOTAAApplicationKey_ = com.google.protobuf.ByteString.EMPTY;
      loraWanABPDeviceAddress_ = 0L;
      loraWanABPNetworkSessionKey_ = com.google.protobuf.ByteString.EMPTY;
      loraWanABPApplicationSessionKey_ = com.google.protobuf.ByteString.EMPTY;
      emergencyChannel_ = maxpb.MaxpbLora.LoraConfigChannelEmergency.getDefaultInstance();
      commandChannel_ = maxpb.MaxpbLora.LoraConfigChannelCommand.getDefaultInstance();
      paringChannel_ = maxpb.MaxpbLora.LoraConfigChannelParing.getDefaultInstance();
      positionChannel_ = maxpb.MaxpbLora.LoraConfigChannelPosition.getDefaultInstance();
      keepMovingState_ = 0;
      loraDevices_ = java.util.Collections.emptyList();
      zigbeeDevices_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getLoraDevicesCount(); i++) {
        if (!getLoraDevices(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getZigbeeDevicesCount(); i++) {
        if (!getZigbeeDevices(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, loraModeConfig_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(7, loraWanFrequencyPlan_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(8, loraWanActivation_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(9, loraWanOTAAApplicationEUI_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(10, loraWanOTAAApplicationKey_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(11, loraWanABPDeviceAddress_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(12, loraWanABPNetworkSessionKey_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(13, loraWanABPApplicationSessionKey_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(14, emergencyChannel_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(15, commandChannel_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(16, paringChannel_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(17, positionChannel_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(20, keepMovingState_);
      }
      for (int i = 0; i < loraDevices_.size(); i++) {
        output.writeMessage(21, loraDevices_.get(i));
      }
      for (int i = 0; i < zigbeeDevices_.size(); i++) {
        output.writeMessage(22, zigbeeDevices_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, loraModeConfig_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, loraWanFrequencyPlan_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, loraWanActivation_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, loraWanOTAAApplicationEUI_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, loraWanOTAAApplicationKey_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(11, loraWanABPDeviceAddress_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, loraWanABPNetworkSessionKey_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, loraWanABPApplicationSessionKey_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, emergencyChannel_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, commandChannel_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, paringChannel_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, positionChannel_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, keepMovingState_);
      }
      for (int i = 0; i < loraDevices_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, loraDevices_.get(i));
      }
      for (int i = 0; i < zigbeeDevices_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, zigbeeDevices_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbLora.LoraConfigPeripherals parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraConfigPeripherals parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigPeripherals parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraConfigPeripherals parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigPeripherals parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraConfigPeripherals parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigPeripherals parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbLora.LoraConfigPeripherals parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraConfigPeripherals parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraConfigPeripherals parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbLora.LoraConfigPeripherals prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.LoraConfigPeripherals}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.LoraConfigPeripherals)
        maxpb.MaxpbLora.LoraConfigPeripheralsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigPeripherals_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigPeripherals_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbLora.LoraConfigPeripherals.class, maxpb.MaxpbLora.LoraConfigPeripherals.Builder.class);
      }

      // Construct using maxpb.MaxpbLora.LoraConfigPeripherals.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEmergencyChannelFieldBuilder();
          getCommandChannelFieldBuilder();
          getParingChannelFieldBuilder();
          getPositionChannelFieldBuilder();
          getLoraDevicesFieldBuilder();
          getZigbeeDevicesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        loraModeConfig_ = maxpb.MaxpbLora.LoraMode.LM_NONE;
        bitField0_ = (bitField0_ & ~0x00000001);
        loraWanFrequencyPlan_ = maxpb.MaxpbLora.LoraWanFrequencyPlan.LWF_US915;
        bitField0_ = (bitField0_ & ~0x00000002);
        loraWanActivation_ = maxpb.MaxpbLora.LoraWanActivation.LWA_OTAA;
        bitField0_ = (bitField0_ & ~0x00000004);
        loraWanOTAAApplicationEUI_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        loraWanOTAAApplicationKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        loraWanABPDeviceAddress_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        loraWanABPNetworkSessionKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        loraWanABPApplicationSessionKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (emergencyChannelBuilder_ == null) {
          emergencyChannel_ = maxpb.MaxpbLora.LoraConfigChannelEmergency.getDefaultInstance();
        } else {
          emergencyChannelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (commandChannelBuilder_ == null) {
          commandChannel_ = maxpb.MaxpbLora.LoraConfigChannelCommand.getDefaultInstance();
        } else {
          commandChannelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (paringChannelBuilder_ == null) {
          paringChannel_ = maxpb.MaxpbLora.LoraConfigChannelParing.getDefaultInstance();
        } else {
          paringChannelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (positionChannelBuilder_ == null) {
          positionChannel_ = maxpb.MaxpbLora.LoraConfigChannelPosition.getDefaultInstance();
        } else {
          positionChannelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        keepMovingState_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        if (loraDevicesBuilder_ == null) {
          loraDevices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          loraDevicesBuilder_.clear();
        }
        if (zigbeeDevicesBuilder_ == null) {
          zigbeeDevices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          zigbeeDevicesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraConfigPeripherals_descriptor;
      }

      public maxpb.MaxpbLora.LoraConfigPeripherals getDefaultInstanceForType() {
        return maxpb.MaxpbLora.LoraConfigPeripherals.getDefaultInstance();
      }

      public maxpb.MaxpbLora.LoraConfigPeripherals build() {
        maxpb.MaxpbLora.LoraConfigPeripherals result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbLora.LoraConfigPeripherals buildPartial() {
        maxpb.MaxpbLora.LoraConfigPeripherals result = new maxpb.MaxpbLora.LoraConfigPeripherals(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.loraModeConfig_ = loraModeConfig_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.loraWanFrequencyPlan_ = loraWanFrequencyPlan_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.loraWanActivation_ = loraWanActivation_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.loraWanOTAAApplicationEUI_ = loraWanOTAAApplicationEUI_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.loraWanOTAAApplicationKey_ = loraWanOTAAApplicationKey_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.loraWanABPDeviceAddress_ = loraWanABPDeviceAddress_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.loraWanABPNetworkSessionKey_ = loraWanABPNetworkSessionKey_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.loraWanABPApplicationSessionKey_ = loraWanABPApplicationSessionKey_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (emergencyChannelBuilder_ == null) {
          result.emergencyChannel_ = emergencyChannel_;
        } else {
          result.emergencyChannel_ = emergencyChannelBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (commandChannelBuilder_ == null) {
          result.commandChannel_ = commandChannel_;
        } else {
          result.commandChannel_ = commandChannelBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (paringChannelBuilder_ == null) {
          result.paringChannel_ = paringChannel_;
        } else {
          result.paringChannel_ = paringChannelBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        if (positionChannelBuilder_ == null) {
          result.positionChannel_ = positionChannel_;
        } else {
          result.positionChannel_ = positionChannelBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.keepMovingState_ = keepMovingState_;
        if (loraDevicesBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            loraDevices_ = java.util.Collections.unmodifiableList(loraDevices_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.loraDevices_ = loraDevices_;
        } else {
          result.loraDevices_ = loraDevicesBuilder_.build();
        }
        if (zigbeeDevicesBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            zigbeeDevices_ = java.util.Collections.unmodifiableList(zigbeeDevices_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.zigbeeDevices_ = zigbeeDevices_;
        } else {
          result.zigbeeDevices_ = zigbeeDevicesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbLora.LoraConfigPeripherals) {
          return mergeFrom((maxpb.MaxpbLora.LoraConfigPeripherals)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbLora.LoraConfigPeripherals other) {
        if (other == maxpb.MaxpbLora.LoraConfigPeripherals.getDefaultInstance()) return this;
        if (other.hasLoraModeConfig()) {
          setLoraModeConfig(other.getLoraModeConfig());
        }
        if (other.hasLoraWanFrequencyPlan()) {
          setLoraWanFrequencyPlan(other.getLoraWanFrequencyPlan());
        }
        if (other.hasLoraWanActivation()) {
          setLoraWanActivation(other.getLoraWanActivation());
        }
        if (other.hasLoraWanOTAAApplicationEUI()) {
          setLoraWanOTAAApplicationEUI(other.getLoraWanOTAAApplicationEUI());
        }
        if (other.hasLoraWanOTAAApplicationKey()) {
          setLoraWanOTAAApplicationKey(other.getLoraWanOTAAApplicationKey());
        }
        if (other.hasLoraWanABPDeviceAddress()) {
          setLoraWanABPDeviceAddress(other.getLoraWanABPDeviceAddress());
        }
        if (other.hasLoraWanABPNetworkSessionKey()) {
          setLoraWanABPNetworkSessionKey(other.getLoraWanABPNetworkSessionKey());
        }
        if (other.hasLoraWanABPApplicationSessionKey()) {
          setLoraWanABPApplicationSessionKey(other.getLoraWanABPApplicationSessionKey());
        }
        if (other.hasEmergencyChannel()) {
          mergeEmergencyChannel(other.getEmergencyChannel());
        }
        if (other.hasCommandChannel()) {
          mergeCommandChannel(other.getCommandChannel());
        }
        if (other.hasParingChannel()) {
          mergeParingChannel(other.getParingChannel());
        }
        if (other.hasPositionChannel()) {
          mergePositionChannel(other.getPositionChannel());
        }
        if (other.hasKeepMovingState()) {
          setKeepMovingState(other.getKeepMovingState());
        }
        if (loraDevicesBuilder_ == null) {
          if (!other.loraDevices_.isEmpty()) {
            if (loraDevices_.isEmpty()) {
              loraDevices_ = other.loraDevices_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureLoraDevicesIsMutable();
              loraDevices_.addAll(other.loraDevices_);
            }
            onChanged();
          }
        } else {
          if (!other.loraDevices_.isEmpty()) {
            if (loraDevicesBuilder_.isEmpty()) {
              loraDevicesBuilder_.dispose();
              loraDevicesBuilder_ = null;
              loraDevices_ = other.loraDevices_;
              bitField0_ = (bitField0_ & ~0x00002000);
              loraDevicesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLoraDevicesFieldBuilder() : null;
            } else {
              loraDevicesBuilder_.addAllMessages(other.loraDevices_);
            }
          }
        }
        if (zigbeeDevicesBuilder_ == null) {
          if (!other.zigbeeDevices_.isEmpty()) {
            if (zigbeeDevices_.isEmpty()) {
              zigbeeDevices_ = other.zigbeeDevices_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureZigbeeDevicesIsMutable();
              zigbeeDevices_.addAll(other.zigbeeDevices_);
            }
            onChanged();
          }
        } else {
          if (!other.zigbeeDevices_.isEmpty()) {
            if (zigbeeDevicesBuilder_.isEmpty()) {
              zigbeeDevicesBuilder_.dispose();
              zigbeeDevicesBuilder_ = null;
              zigbeeDevices_ = other.zigbeeDevices_;
              bitField0_ = (bitField0_ & ~0x00004000);
              zigbeeDevicesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getZigbeeDevicesFieldBuilder() : null;
            } else {
              zigbeeDevicesBuilder_.addAllMessages(other.zigbeeDevices_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getLoraDevicesCount(); i++) {
          if (!getLoraDevices(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getZigbeeDevicesCount(); i++) {
          if (!getZigbeeDevices(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbLora.LoraConfigPeripherals parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbLora.LoraConfigPeripherals) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private maxpb.MaxpbLora.LoraMode loraModeConfig_ = maxpb.MaxpbLora.LoraMode.LM_NONE;
      /**
       * <code>optional .maxpb.LoraMode loraModeConfig = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasLoraModeConfig() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .maxpb.LoraMode loraModeConfig = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraMode getLoraModeConfig() {
        return loraModeConfig_;
      }
      /**
       * <code>optional .maxpb.LoraMode loraModeConfig = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setLoraModeConfig(maxpb.MaxpbLora.LoraMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        loraModeConfig_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraMode loraModeConfig = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearLoraModeConfig() {
        bitField0_ = (bitField0_ & ~0x00000001);
        loraModeConfig_ = maxpb.MaxpbLora.LoraMode.LM_NONE;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraWanFrequencyPlan loraWanFrequencyPlan_ = maxpb.MaxpbLora.LoraWanFrequencyPlan.LWF_US915;
      /**
       * <code>optional .maxpb.LoraWanFrequencyPlan loraWanFrequencyPlan = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasLoraWanFrequencyPlan() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .maxpb.LoraWanFrequencyPlan loraWanFrequencyPlan = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraWanFrequencyPlan getLoraWanFrequencyPlan() {
        return loraWanFrequencyPlan_;
      }
      /**
       * <code>optional .maxpb.LoraWanFrequencyPlan loraWanFrequencyPlan = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setLoraWanFrequencyPlan(maxpb.MaxpbLora.LoraWanFrequencyPlan value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        loraWanFrequencyPlan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraWanFrequencyPlan loraWanFrequencyPlan = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearLoraWanFrequencyPlan() {
        bitField0_ = (bitField0_ & ~0x00000002);
        loraWanFrequencyPlan_ = maxpb.MaxpbLora.LoraWanFrequencyPlan.LWF_US915;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraWanActivation loraWanActivation_ = maxpb.MaxpbLora.LoraWanActivation.LWA_OTAA;
      /**
       * <code>optional .maxpb.LoraWanActivation loraWanActivation = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasLoraWanActivation() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .maxpb.LoraWanActivation loraWanActivation = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraWanActivation getLoraWanActivation() {
        return loraWanActivation_;
      }
      /**
       * <code>optional .maxpb.LoraWanActivation loraWanActivation = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setLoraWanActivation(maxpb.MaxpbLora.LoraWanActivation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        loraWanActivation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoraWanActivation loraWanActivation = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearLoraWanActivation() {
        bitField0_ = (bitField0_ & ~0x00000004);
        loraWanActivation_ = maxpb.MaxpbLora.LoraWanActivation.LWA_OTAA;
        onChanged();
        return this;
      }

      private long loraWanOTAAApplicationEUI_ ;
      /**
       * <code>optional uint64 loraWanOTAAApplicationEUI = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasLoraWanOTAAApplicationEUI() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 loraWanOTAAApplicationEUI = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public long getLoraWanOTAAApplicationEUI() {
        return loraWanOTAAApplicationEUI_;
      }
      /**
       * <code>optional uint64 loraWanOTAAApplicationEUI = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setLoraWanOTAAApplicationEUI(long value) {
        bitField0_ |= 0x00000008;
        loraWanOTAAApplicationEUI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 loraWanOTAAApplicationEUI = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearLoraWanOTAAApplicationEUI() {
        bitField0_ = (bitField0_ & ~0x00000008);
        loraWanOTAAApplicationEUI_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString loraWanOTAAApplicationKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes loraWanOTAAApplicationKey = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasLoraWanOTAAApplicationKey() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes loraWanOTAAApplicationKey = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public com.google.protobuf.ByteString getLoraWanOTAAApplicationKey() {
        return loraWanOTAAApplicationKey_;
      }
      /**
       * <code>optional bytes loraWanOTAAApplicationKey = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setLoraWanOTAAApplicationKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        loraWanOTAAApplicationKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes loraWanOTAAApplicationKey = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearLoraWanOTAAApplicationKey() {
        bitField0_ = (bitField0_ & ~0x00000010);
        loraWanOTAAApplicationKey_ = getDefaultInstance().getLoraWanOTAAApplicationKey();
        onChanged();
        return this;
      }

      private long loraWanABPDeviceAddress_ ;
      /**
       * <code>optional uint64 loraWanABPDeviceAddress = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasLoraWanABPDeviceAddress() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 loraWanABPDeviceAddress = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public long getLoraWanABPDeviceAddress() {
        return loraWanABPDeviceAddress_;
      }
      /**
       * <code>optional uint64 loraWanABPDeviceAddress = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setLoraWanABPDeviceAddress(long value) {
        bitField0_ |= 0x00000020;
        loraWanABPDeviceAddress_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 loraWanABPDeviceAddress = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearLoraWanABPDeviceAddress() {
        bitField0_ = (bitField0_ & ~0x00000020);
        loraWanABPDeviceAddress_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString loraWanABPNetworkSessionKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes loraWanABPNetworkSessionKey = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasLoraWanABPNetworkSessionKey() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bytes loraWanABPNetworkSessionKey = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public com.google.protobuf.ByteString getLoraWanABPNetworkSessionKey() {
        return loraWanABPNetworkSessionKey_;
      }
      /**
       * <code>optional bytes loraWanABPNetworkSessionKey = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setLoraWanABPNetworkSessionKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        loraWanABPNetworkSessionKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes loraWanABPNetworkSessionKey = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearLoraWanABPNetworkSessionKey() {
        bitField0_ = (bitField0_ & ~0x00000040);
        loraWanABPNetworkSessionKey_ = getDefaultInstance().getLoraWanABPNetworkSessionKey();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString loraWanABPApplicationSessionKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes loraWanABPApplicationSessionKey = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasLoraWanABPApplicationSessionKey() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bytes loraWanABPApplicationSessionKey = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public com.google.protobuf.ByteString getLoraWanABPApplicationSessionKey() {
        return loraWanABPApplicationSessionKey_;
      }
      /**
       * <code>optional bytes loraWanABPApplicationSessionKey = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setLoraWanABPApplicationSessionKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        loraWanABPApplicationSessionKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes loraWanABPApplicationSessionKey = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearLoraWanABPApplicationSessionKey() {
        bitField0_ = (bitField0_ & ~0x00000080);
        loraWanABPApplicationSessionKey_ = getDefaultInstance().getLoraWanABPApplicationSessionKey();
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraConfigChannelEmergency emergencyChannel_ = maxpb.MaxpbLora.LoraConfigChannelEmergency.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbLora.LoraConfigChannelEmergency, maxpb.MaxpbLora.LoraConfigChannelEmergency.Builder, maxpb.MaxpbLora.LoraConfigChannelEmergencyOrBuilder> emergencyChannelBuilder_;
      /**
       * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasEmergencyChannel() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelEmergency getEmergencyChannel() {
        if (emergencyChannelBuilder_ == null) {
          return emergencyChannel_;
        } else {
          return emergencyChannelBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setEmergencyChannel(maxpb.MaxpbLora.LoraConfigChannelEmergency value) {
        if (emergencyChannelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          emergencyChannel_ = value;
          onChanged();
        } else {
          emergencyChannelBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setEmergencyChannel(
          maxpb.MaxpbLora.LoraConfigChannelEmergency.Builder builderForValue) {
        if (emergencyChannelBuilder_ == null) {
          emergencyChannel_ = builderForValue.build();
          onChanged();
        } else {
          emergencyChannelBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder mergeEmergencyChannel(maxpb.MaxpbLora.LoraConfigChannelEmergency value) {
        if (emergencyChannelBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              emergencyChannel_ != maxpb.MaxpbLora.LoraConfigChannelEmergency.getDefaultInstance()) {
            emergencyChannel_ =
              maxpb.MaxpbLora.LoraConfigChannelEmergency.newBuilder(emergencyChannel_).mergeFrom(value).buildPartial();
          } else {
            emergencyChannel_ = value;
          }
          onChanged();
        } else {
          emergencyChannelBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearEmergencyChannel() {
        if (emergencyChannelBuilder_ == null) {
          emergencyChannel_ = maxpb.MaxpbLora.LoraConfigChannelEmergency.getDefaultInstance();
          onChanged();
        } else {
          emergencyChannelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelEmergency.Builder getEmergencyChannelBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getEmergencyChannelFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelEmergencyOrBuilder getEmergencyChannelOrBuilder() {
        if (emergencyChannelBuilder_ != null) {
          return emergencyChannelBuilder_.getMessageOrBuilder();
        } else {
          return emergencyChannel_;
        }
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelEmergency emergencyChannel = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbLora.LoraConfigChannelEmergency, maxpb.MaxpbLora.LoraConfigChannelEmergency.Builder, maxpb.MaxpbLora.LoraConfigChannelEmergencyOrBuilder> 
          getEmergencyChannelFieldBuilder() {
        if (emergencyChannelBuilder_ == null) {
          emergencyChannelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbLora.LoraConfigChannelEmergency, maxpb.MaxpbLora.LoraConfigChannelEmergency.Builder, maxpb.MaxpbLora.LoraConfigChannelEmergencyOrBuilder>(
                  getEmergencyChannel(),
                  getParentForChildren(),
                  isClean());
          emergencyChannel_ = null;
        }
        return emergencyChannelBuilder_;
      }

      private maxpb.MaxpbLora.LoraConfigChannelCommand commandChannel_ = maxpb.MaxpbLora.LoraConfigChannelCommand.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbLora.LoraConfigChannelCommand, maxpb.MaxpbLora.LoraConfigChannelCommand.Builder, maxpb.MaxpbLora.LoraConfigChannelCommandOrBuilder> commandChannelBuilder_;
      /**
       * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasCommandChannel() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelCommand getCommandChannel() {
        if (commandChannelBuilder_ == null) {
          return commandChannel_;
        } else {
          return commandChannelBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setCommandChannel(maxpb.MaxpbLora.LoraConfigChannelCommand value) {
        if (commandChannelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          commandChannel_ = value;
          onChanged();
        } else {
          commandChannelBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setCommandChannel(
          maxpb.MaxpbLora.LoraConfigChannelCommand.Builder builderForValue) {
        if (commandChannelBuilder_ == null) {
          commandChannel_ = builderForValue.build();
          onChanged();
        } else {
          commandChannelBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder mergeCommandChannel(maxpb.MaxpbLora.LoraConfigChannelCommand value) {
        if (commandChannelBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              commandChannel_ != maxpb.MaxpbLora.LoraConfigChannelCommand.getDefaultInstance()) {
            commandChannel_ =
              maxpb.MaxpbLora.LoraConfigChannelCommand.newBuilder(commandChannel_).mergeFrom(value).buildPartial();
          } else {
            commandChannel_ = value;
          }
          onChanged();
        } else {
          commandChannelBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearCommandChannel() {
        if (commandChannelBuilder_ == null) {
          commandChannel_ = maxpb.MaxpbLora.LoraConfigChannelCommand.getDefaultInstance();
          onChanged();
        } else {
          commandChannelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelCommand.Builder getCommandChannelBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getCommandChannelFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelCommandOrBuilder getCommandChannelOrBuilder() {
        if (commandChannelBuilder_ != null) {
          return commandChannelBuilder_.getMessageOrBuilder();
        } else {
          return commandChannel_;
        }
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelCommand commandChannel = 15;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbLora.LoraConfigChannelCommand, maxpb.MaxpbLora.LoraConfigChannelCommand.Builder, maxpb.MaxpbLora.LoraConfigChannelCommandOrBuilder> 
          getCommandChannelFieldBuilder() {
        if (commandChannelBuilder_ == null) {
          commandChannelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbLora.LoraConfigChannelCommand, maxpb.MaxpbLora.LoraConfigChannelCommand.Builder, maxpb.MaxpbLora.LoraConfigChannelCommandOrBuilder>(
                  getCommandChannel(),
                  getParentForChildren(),
                  isClean());
          commandChannel_ = null;
        }
        return commandChannelBuilder_;
      }

      private maxpb.MaxpbLora.LoraConfigChannelParing paringChannel_ = maxpb.MaxpbLora.LoraConfigChannelParing.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbLora.LoraConfigChannelParing, maxpb.MaxpbLora.LoraConfigChannelParing.Builder, maxpb.MaxpbLora.LoraConfigChannelParingOrBuilder> paringChannelBuilder_;
      /**
       * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasParingChannel() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelParing getParingChannel() {
        if (paringChannelBuilder_ == null) {
          return paringChannel_;
        } else {
          return paringChannelBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setParingChannel(maxpb.MaxpbLora.LoraConfigChannelParing value) {
        if (paringChannelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          paringChannel_ = value;
          onChanged();
        } else {
          paringChannelBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setParingChannel(
          maxpb.MaxpbLora.LoraConfigChannelParing.Builder builderForValue) {
        if (paringChannelBuilder_ == null) {
          paringChannel_ = builderForValue.build();
          onChanged();
        } else {
          paringChannelBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder mergeParingChannel(maxpb.MaxpbLora.LoraConfigChannelParing value) {
        if (paringChannelBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              paringChannel_ != maxpb.MaxpbLora.LoraConfigChannelParing.getDefaultInstance()) {
            paringChannel_ =
              maxpb.MaxpbLora.LoraConfigChannelParing.newBuilder(paringChannel_).mergeFrom(value).buildPartial();
          } else {
            paringChannel_ = value;
          }
          onChanged();
        } else {
          paringChannelBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearParingChannel() {
        if (paringChannelBuilder_ == null) {
          paringChannel_ = maxpb.MaxpbLora.LoraConfigChannelParing.getDefaultInstance();
          onChanged();
        } else {
          paringChannelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelParing.Builder getParingChannelBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getParingChannelFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelParingOrBuilder getParingChannelOrBuilder() {
        if (paringChannelBuilder_ != null) {
          return paringChannelBuilder_.getMessageOrBuilder();
        } else {
          return paringChannel_;
        }
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelParing paringChannel = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbLora.LoraConfigChannelParing, maxpb.MaxpbLora.LoraConfigChannelParing.Builder, maxpb.MaxpbLora.LoraConfigChannelParingOrBuilder> 
          getParingChannelFieldBuilder() {
        if (paringChannelBuilder_ == null) {
          paringChannelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbLora.LoraConfigChannelParing, maxpb.MaxpbLora.LoraConfigChannelParing.Builder, maxpb.MaxpbLora.LoraConfigChannelParingOrBuilder>(
                  getParingChannel(),
                  getParentForChildren(),
                  isClean());
          paringChannel_ = null;
        }
        return paringChannelBuilder_;
      }

      private maxpb.MaxpbLora.LoraConfigChannelPosition positionChannel_ = maxpb.MaxpbLora.LoraConfigChannelPosition.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbLora.LoraConfigChannelPosition, maxpb.MaxpbLora.LoraConfigChannelPosition.Builder, maxpb.MaxpbLora.LoraConfigChannelPositionOrBuilder> positionChannelBuilder_;
      /**
       * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasPositionChannel() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelPosition getPositionChannel() {
        if (positionChannelBuilder_ == null) {
          return positionChannel_;
        } else {
          return positionChannelBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setPositionChannel(maxpb.MaxpbLora.LoraConfigChannelPosition value) {
        if (positionChannelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          positionChannel_ = value;
          onChanged();
        } else {
          positionChannelBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setPositionChannel(
          maxpb.MaxpbLora.LoraConfigChannelPosition.Builder builderForValue) {
        if (positionChannelBuilder_ == null) {
          positionChannel_ = builderForValue.build();
          onChanged();
        } else {
          positionChannelBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder mergePositionChannel(maxpb.MaxpbLora.LoraConfigChannelPosition value) {
        if (positionChannelBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              positionChannel_ != maxpb.MaxpbLora.LoraConfigChannelPosition.getDefaultInstance()) {
            positionChannel_ =
              maxpb.MaxpbLora.LoraConfigChannelPosition.newBuilder(positionChannel_).mergeFrom(value).buildPartial();
          } else {
            positionChannel_ = value;
          }
          onChanged();
        } else {
          positionChannelBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearPositionChannel() {
        if (positionChannelBuilder_ == null) {
          positionChannel_ = maxpb.MaxpbLora.LoraConfigChannelPosition.getDefaultInstance();
          onChanged();
        } else {
          positionChannelBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelPosition.Builder getPositionChannelBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getPositionChannelFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraConfigChannelPositionOrBuilder getPositionChannelOrBuilder() {
        if (positionChannelBuilder_ != null) {
          return positionChannelBuilder_.getMessageOrBuilder();
        } else {
          return positionChannel_;
        }
      }
      /**
       * <code>optional .maxpb.LoraConfigChannelPosition positionChannel = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbLora.LoraConfigChannelPosition, maxpb.MaxpbLora.LoraConfigChannelPosition.Builder, maxpb.MaxpbLora.LoraConfigChannelPositionOrBuilder> 
          getPositionChannelFieldBuilder() {
        if (positionChannelBuilder_ == null) {
          positionChannelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbLora.LoraConfigChannelPosition, maxpb.MaxpbLora.LoraConfigChannelPosition.Builder, maxpb.MaxpbLora.LoraConfigChannelPositionOrBuilder>(
                  getPositionChannel(),
                  getParentForChildren(),
                  isClean());
          positionChannel_ = null;
        }
        return positionChannelBuilder_;
      }

      private int keepMovingState_ ;
      /**
       * <code>optional uint32 keepMovingState = 20;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public boolean hasKeepMovingState() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 keepMovingState = 20;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getKeepMovingState() {
        return keepMovingState_;
      }
      /**
       * <code>optional uint32 keepMovingState = 20;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setKeepMovingState(int value) {
        bitField0_ |= 0x00001000;
        keepMovingState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 keepMovingState = 20;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearKeepMovingState() {
        bitField0_ = (bitField0_ & ~0x00001000);
        keepMovingState_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<maxpb.MaxpbLora.DeviceItem> loraDevices_ =
        java.util.Collections.emptyList();
      private void ensureLoraDevicesIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          loraDevices_ = new java.util.ArrayList<maxpb.MaxpbLora.DeviceItem>(loraDevices_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbLora.DeviceItem, maxpb.MaxpbLora.DeviceItem.Builder, maxpb.MaxpbLora.DeviceItemOrBuilder> loraDevicesBuilder_;

      /**
       * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public java.util.List<maxpb.MaxpbLora.DeviceItem> getLoraDevicesList() {
        if (loraDevicesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(loraDevices_);
        } else {
          return loraDevicesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getLoraDevicesCount() {
        if (loraDevicesBuilder_ == null) {
          return loraDevices_.size();
        } else {
          return loraDevicesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.DeviceItem getLoraDevices(int index) {
        if (loraDevicesBuilder_ == null) {
          return loraDevices_.get(index);
        } else {
          return loraDevicesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setLoraDevices(
          int index, maxpb.MaxpbLora.DeviceItem value) {
        if (loraDevicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLoraDevicesIsMutable();
          loraDevices_.set(index, value);
          onChanged();
        } else {
          loraDevicesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setLoraDevices(
          int index, maxpb.MaxpbLora.DeviceItem.Builder builderForValue) {
        if (loraDevicesBuilder_ == null) {
          ensureLoraDevicesIsMutable();
          loraDevices_.set(index, builderForValue.build());
          onChanged();
        } else {
          loraDevicesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder addLoraDevices(maxpb.MaxpbLora.DeviceItem value) {
        if (loraDevicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLoraDevicesIsMutable();
          loraDevices_.add(value);
          onChanged();
        } else {
          loraDevicesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder addLoraDevices(
          int index, maxpb.MaxpbLora.DeviceItem value) {
        if (loraDevicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLoraDevicesIsMutable();
          loraDevices_.add(index, value);
          onChanged();
        } else {
          loraDevicesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder addLoraDevices(
          maxpb.MaxpbLora.DeviceItem.Builder builderForValue) {
        if (loraDevicesBuilder_ == null) {
          ensureLoraDevicesIsMutable();
          loraDevices_.add(builderForValue.build());
          onChanged();
        } else {
          loraDevicesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder addLoraDevices(
          int index, maxpb.MaxpbLora.DeviceItem.Builder builderForValue) {
        if (loraDevicesBuilder_ == null) {
          ensureLoraDevicesIsMutable();
          loraDevices_.add(index, builderForValue.build());
          onChanged();
        } else {
          loraDevicesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder addAllLoraDevices(
          java.lang.Iterable<? extends maxpb.MaxpbLora.DeviceItem> values) {
        if (loraDevicesBuilder_ == null) {
          ensureLoraDevicesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, loraDevices_);
          onChanged();
        } else {
          loraDevicesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearLoraDevices() {
        if (loraDevicesBuilder_ == null) {
          loraDevices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          loraDevicesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder removeLoraDevices(int index) {
        if (loraDevicesBuilder_ == null) {
          ensureLoraDevicesIsMutable();
          loraDevices_.remove(index);
          onChanged();
        } else {
          loraDevicesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.DeviceItem.Builder getLoraDevicesBuilder(
          int index) {
        return getLoraDevicesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.DeviceItemOrBuilder getLoraDevicesOrBuilder(
          int index) {
        if (loraDevicesBuilder_ == null) {
          return loraDevices_.get(index);  } else {
          return loraDevicesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbLora.DeviceItemOrBuilder> 
           getLoraDevicesOrBuilderList() {
        if (loraDevicesBuilder_ != null) {
          return loraDevicesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(loraDevices_);
        }
      }
      /**
       * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.DeviceItem.Builder addLoraDevicesBuilder() {
        return getLoraDevicesFieldBuilder().addBuilder(
            maxpb.MaxpbLora.DeviceItem.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.DeviceItem.Builder addLoraDevicesBuilder(
          int index) {
        return getLoraDevicesFieldBuilder().addBuilder(
            index, maxpb.MaxpbLora.DeviceItem.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.DeviceItem loraDevices = 21;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public java.util.List<maxpb.MaxpbLora.DeviceItem.Builder> 
           getLoraDevicesBuilderList() {
        return getLoraDevicesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbLora.DeviceItem, maxpb.MaxpbLora.DeviceItem.Builder, maxpb.MaxpbLora.DeviceItemOrBuilder> 
          getLoraDevicesFieldBuilder() {
        if (loraDevicesBuilder_ == null) {
          loraDevicesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbLora.DeviceItem, maxpb.MaxpbLora.DeviceItem.Builder, maxpb.MaxpbLora.DeviceItemOrBuilder>(
                  loraDevices_,
                  ((bitField0_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          loraDevices_ = null;
        }
        return loraDevicesBuilder_;
      }

      private java.util.List<maxpb.MaxpbLora.DeviceItem> zigbeeDevices_ =
        java.util.Collections.emptyList();
      private void ensureZigbeeDevicesIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          zigbeeDevices_ = new java.util.ArrayList<maxpb.MaxpbLora.DeviceItem>(zigbeeDevices_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbLora.DeviceItem, maxpb.MaxpbLora.DeviceItem.Builder, maxpb.MaxpbLora.DeviceItemOrBuilder> zigbeeDevicesBuilder_;

      /**
       * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public java.util.List<maxpb.MaxpbLora.DeviceItem> getZigbeeDevicesList() {
        if (zigbeeDevicesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(zigbeeDevices_);
        } else {
          return zigbeeDevicesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public int getZigbeeDevicesCount() {
        if (zigbeeDevicesBuilder_ == null) {
          return zigbeeDevices_.size();
        } else {
          return zigbeeDevicesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.DeviceItem getZigbeeDevices(int index) {
        if (zigbeeDevicesBuilder_ == null) {
          return zigbeeDevices_.get(index);
        } else {
          return zigbeeDevicesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setZigbeeDevices(
          int index, maxpb.MaxpbLora.DeviceItem value) {
        if (zigbeeDevicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureZigbeeDevicesIsMutable();
          zigbeeDevices_.set(index, value);
          onChanged();
        } else {
          zigbeeDevicesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder setZigbeeDevices(
          int index, maxpb.MaxpbLora.DeviceItem.Builder builderForValue) {
        if (zigbeeDevicesBuilder_ == null) {
          ensureZigbeeDevicesIsMutable();
          zigbeeDevices_.set(index, builderForValue.build());
          onChanged();
        } else {
          zigbeeDevicesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder addZigbeeDevices(maxpb.MaxpbLora.DeviceItem value) {
        if (zigbeeDevicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureZigbeeDevicesIsMutable();
          zigbeeDevices_.add(value);
          onChanged();
        } else {
          zigbeeDevicesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder addZigbeeDevices(
          int index, maxpb.MaxpbLora.DeviceItem value) {
        if (zigbeeDevicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureZigbeeDevicesIsMutable();
          zigbeeDevices_.add(index, value);
          onChanged();
        } else {
          zigbeeDevicesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder addZigbeeDevices(
          maxpb.MaxpbLora.DeviceItem.Builder builderForValue) {
        if (zigbeeDevicesBuilder_ == null) {
          ensureZigbeeDevicesIsMutable();
          zigbeeDevices_.add(builderForValue.build());
          onChanged();
        } else {
          zigbeeDevicesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder addZigbeeDevices(
          int index, maxpb.MaxpbLora.DeviceItem.Builder builderForValue) {
        if (zigbeeDevicesBuilder_ == null) {
          ensureZigbeeDevicesIsMutable();
          zigbeeDevices_.add(index, builderForValue.build());
          onChanged();
        } else {
          zigbeeDevicesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder addAllZigbeeDevices(
          java.lang.Iterable<? extends maxpb.MaxpbLora.DeviceItem> values) {
        if (zigbeeDevicesBuilder_ == null) {
          ensureZigbeeDevicesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, zigbeeDevices_);
          onChanged();
        } else {
          zigbeeDevicesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder clearZigbeeDevices() {
        if (zigbeeDevicesBuilder_ == null) {
          zigbeeDevices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          zigbeeDevicesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public Builder removeZigbeeDevices(int index) {
        if (zigbeeDevicesBuilder_ == null) {
          ensureZigbeeDevicesIsMutable();
          zigbeeDevices_.remove(index);
          onChanged();
        } else {
          zigbeeDevicesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.DeviceItem.Builder getZigbeeDevicesBuilder(
          int index) {
        return getZigbeeDevicesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.DeviceItemOrBuilder getZigbeeDevicesOrBuilder(
          int index) {
        if (zigbeeDevicesBuilder_ == null) {
          return zigbeeDevices_.get(index);  } else {
          return zigbeeDevicesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbLora.DeviceItemOrBuilder> 
           getZigbeeDevicesOrBuilderList() {
        if (zigbeeDevicesBuilder_ != null) {
          return zigbeeDevicesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(zigbeeDevices_);
        }
      }
      /**
       * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.DeviceItem.Builder addZigbeeDevicesBuilder() {
        return getZigbeeDevicesFieldBuilder().addBuilder(
            maxpb.MaxpbLora.DeviceItem.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public maxpb.MaxpbLora.DeviceItem.Builder addZigbeeDevicesBuilder(
          int index) {
        return getZigbeeDevicesFieldBuilder().addBuilder(
            index, maxpb.MaxpbLora.DeviceItem.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.DeviceItem zigbeeDevices = 22;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT160, MXT162, MXT180, A40
       * </pre>
       */
      public java.util.List<maxpb.MaxpbLora.DeviceItem.Builder> 
           getZigbeeDevicesBuilderList() {
        return getZigbeeDevicesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbLora.DeviceItem, maxpb.MaxpbLora.DeviceItem.Builder, maxpb.MaxpbLora.DeviceItemOrBuilder> 
          getZigbeeDevicesFieldBuilder() {
        if (zigbeeDevicesBuilder_ == null) {
          zigbeeDevicesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbLora.DeviceItem, maxpb.MaxpbLora.DeviceItem.Builder, maxpb.MaxpbLora.DeviceItemOrBuilder>(
                  zigbeeDevices_,
                  ((bitField0_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          zigbeeDevices_ = null;
        }
        return zigbeeDevicesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.LoraConfigPeripherals)
    }

    static {
      defaultInstance = new LoraConfigPeripherals(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.LoraConfigPeripherals)
  }

  public interface LoraActionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.LoraActions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 loraID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasLoraID();
    /**
     * <code>required uint32 loraID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getLoraID();

    /**
     * <code>required .maxpb.LoraActionID actionID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasActionID();
    /**
     * <code>required .maxpb.LoraActionID actionID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraActionID getActionID();

    /**
     * <code>optional int32 actionParamINT = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasActionParamINT();
    /**
     * <code>optional int32 actionParamINT = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getActionParamINT();

    /**
     * <code>optional uint64 expirationDateTime = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasExpirationDateTime();
    /**
     * <code>optional uint64 expirationDateTime = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    long getExpirationDateTime();
  }
  /**
   * Protobuf type {@code maxpb.LoraActions}
   *
   * <pre>
   *&#47;&#64;exclude
   * </pre>
   */
  public static final class LoraActions extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.LoraActions)
      LoraActionsOrBuilder {
    // Use LoraActions.newBuilder() to construct.
    private LoraActions(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LoraActions(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LoraActions defaultInstance;
    public static LoraActions getDefaultInstance() {
      return defaultInstance;
    }

    public LoraActions getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LoraActions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              loraID_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              maxpb.MaxpbLora.LoraActionID value = maxpb.MaxpbLora.LoraActionID.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                actionID_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              actionParamINT_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              expirationDateTime_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraActions_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraActions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbLora.LoraActions.class, maxpb.MaxpbLora.LoraActions.Builder.class);
    }

    public static com.google.protobuf.Parser<LoraActions> PARSER =
        new com.google.protobuf.AbstractParser<LoraActions>() {
      public LoraActions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LoraActions(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LoraActions> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LORAID_FIELD_NUMBER = 1;
    private int loraID_;
    /**
     * <code>required uint32 loraID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasLoraID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 loraID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getLoraID() {
      return loraID_;
    }

    public static final int ACTIONID_FIELD_NUMBER = 2;
    private maxpb.MaxpbLora.LoraActionID actionID_;
    /**
     * <code>required .maxpb.LoraActionID actionID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasActionID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .maxpb.LoraActionID actionID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraActionID getActionID() {
      return actionID_;
    }

    public static final int ACTIONPARAMINT_FIELD_NUMBER = 3;
    private int actionParamINT_;
    /**
     * <code>optional int32 actionParamINT = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasActionParamINT() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 actionParamINT = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getActionParamINT() {
      return actionParamINT_;
    }

    public static final int EXPIRATIONDATETIME_FIELD_NUMBER = 4;
    private long expirationDateTime_;
    /**
     * <code>optional uint64 expirationDateTime = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasExpirationDateTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 expirationDateTime = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public long getExpirationDateTime() {
      return expirationDateTime_;
    }

    private void initFields() {
      loraID_ = 0;
      actionID_ = maxpb.MaxpbLora.LoraActionID.LA_ACTION_NONE;
      actionParamINT_ = 0;
      expirationDateTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasLoraID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActionID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, loraID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, actionID_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, actionParamINT_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, expirationDateTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, loraID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, actionID_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, actionParamINT_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, expirationDateTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbLora.LoraActions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraActions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraActions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraActions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraActions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraActions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraActions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbLora.LoraActions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraActions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraActions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbLora.LoraActions prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.LoraActions}
     *
     * <pre>
     *&#47;&#64;exclude
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.LoraActions)
        maxpb.MaxpbLora.LoraActionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraActions_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraActions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbLora.LoraActions.class, maxpb.MaxpbLora.LoraActions.Builder.class);
      }

      // Construct using maxpb.MaxpbLora.LoraActions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        loraID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        actionID_ = maxpb.MaxpbLora.LoraActionID.LA_ACTION_NONE;
        bitField0_ = (bitField0_ & ~0x00000002);
        actionParamINT_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        expirationDateTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraActions_descriptor;
      }

      public maxpb.MaxpbLora.LoraActions getDefaultInstanceForType() {
        return maxpb.MaxpbLora.LoraActions.getDefaultInstance();
      }

      public maxpb.MaxpbLora.LoraActions build() {
        maxpb.MaxpbLora.LoraActions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbLora.LoraActions buildPartial() {
        maxpb.MaxpbLora.LoraActions result = new maxpb.MaxpbLora.LoraActions(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.loraID_ = loraID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.actionID_ = actionID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.actionParamINT_ = actionParamINT_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.expirationDateTime_ = expirationDateTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbLora.LoraActions) {
          return mergeFrom((maxpb.MaxpbLora.LoraActions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbLora.LoraActions other) {
        if (other == maxpb.MaxpbLora.LoraActions.getDefaultInstance()) return this;
        if (other.hasLoraID()) {
          setLoraID(other.getLoraID());
        }
        if (other.hasActionID()) {
          setActionID(other.getActionID());
        }
        if (other.hasActionParamINT()) {
          setActionParamINT(other.getActionParamINT());
        }
        if (other.hasExpirationDateTime()) {
          setExpirationDateTime(other.getExpirationDateTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLoraID()) {
          
          return false;
        }
        if (!hasActionID()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbLora.LoraActions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbLora.LoraActions) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int loraID_ ;
      /**
       * <code>required uint32 loraID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasLoraID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 loraID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getLoraID() {
        return loraID_;
      }
      /**
       * <code>required uint32 loraID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setLoraID(int value) {
        bitField0_ |= 0x00000001;
        loraID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 loraID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearLoraID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        loraID_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbLora.LoraActionID actionID_ = maxpb.MaxpbLora.LoraActionID.LA_ACTION_NONE;
      /**
       * <code>required .maxpb.LoraActionID actionID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasActionID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .maxpb.LoraActionID actionID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraActionID getActionID() {
        return actionID_;
      }
      /**
       * <code>required .maxpb.LoraActionID actionID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setActionID(maxpb.MaxpbLora.LoraActionID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        actionID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .maxpb.LoraActionID actionID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearActionID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        actionID_ = maxpb.MaxpbLora.LoraActionID.LA_ACTION_NONE;
        onChanged();
        return this;
      }

      private int actionParamINT_ ;
      /**
       * <code>optional int32 actionParamINT = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasActionParamINT() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 actionParamINT = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getActionParamINT() {
        return actionParamINT_;
      }
      /**
       * <code>optional int32 actionParamINT = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setActionParamINT(int value) {
        bitField0_ |= 0x00000004;
        actionParamINT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 actionParamINT = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearActionParamINT() {
        bitField0_ = (bitField0_ & ~0x00000004);
        actionParamINT_ = 0;
        onChanged();
        return this;
      }

      private long expirationDateTime_ ;
      /**
       * <code>optional uint64 expirationDateTime = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasExpirationDateTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 expirationDateTime = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public long getExpirationDateTime() {
        return expirationDateTime_;
      }
      /**
       * <code>optional uint64 expirationDateTime = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setExpirationDateTime(long value) {
        bitField0_ |= 0x00000008;
        expirationDateTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 expirationDateTime = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearExpirationDateTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        expirationDateTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.LoraActions)
    }

    static {
      defaultInstance = new LoraActions(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.LoraActions)
  }

  public interface LoraGatewayCmdOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.LoraGatewayCmd)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasDeviceID();
    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    long getDeviceID();

    /**
     * <code>required uint64 commandID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasCommandID();
    /**
     * <code>required uint64 commandID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    long getCommandID();

    /**
     * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<maxpb.MaxpbLora.LoraActions> 
        getIncludeActionsList();
    /**
     * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraActions getIncludeActions(int index);
    /**
     * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getIncludeActionsCount();
    /**
     * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbLora.LoraActionsOrBuilder> 
        getIncludeActionsOrBuilderList();
    /**
     * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraActionsOrBuilder getIncludeActionsOrBuilder(
        int index);

    /**
     * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<maxpb.MaxpbLora.LoraActions> 
        getRemoveActionsList();
    /**
     * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraActions getRemoveActions(int index);
    /**
     * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getRemoveActionsCount();
    /**
     * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbLora.LoraActionsOrBuilder> 
        getRemoveActionsOrBuilderList();
    /**
     * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraActionsOrBuilder getRemoveActionsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code maxpb.LoraGatewayCmd}
   *
   * <pre>
   *&#47;&#64;exclude
   * </pre>
   */
  public static final class LoraGatewayCmd extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.LoraGatewayCmd)
      LoraGatewayCmdOrBuilder {
    // Use LoraGatewayCmd.newBuilder() to construct.
    private LoraGatewayCmd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LoraGatewayCmd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LoraGatewayCmd defaultInstance;
    public static LoraGatewayCmd getDefaultInstance() {
      return defaultInstance;
    }

    public LoraGatewayCmd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LoraGatewayCmd(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              deviceID_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              commandID_ = input.readUInt64();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                includeActions_ = new java.util.ArrayList<maxpb.MaxpbLora.LoraActions>();
                mutable_bitField0_ |= 0x00000004;
              }
              includeActions_.add(input.readMessage(maxpb.MaxpbLora.LoraActions.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                removeActions_ = new java.util.ArrayList<maxpb.MaxpbLora.LoraActions>();
                mutable_bitField0_ |= 0x00000008;
              }
              removeActions_.add(input.readMessage(maxpb.MaxpbLora.LoraActions.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          includeActions_ = java.util.Collections.unmodifiableList(includeActions_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          removeActions_ = java.util.Collections.unmodifiableList(removeActions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraGatewayCmd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbLora.internal_static_maxpb_LoraGatewayCmd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbLora.LoraGatewayCmd.class, maxpb.MaxpbLora.LoraGatewayCmd.Builder.class);
    }

    public static com.google.protobuf.Parser<LoraGatewayCmd> PARSER =
        new com.google.protobuf.AbstractParser<LoraGatewayCmd>() {
      public LoraGatewayCmd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LoraGatewayCmd(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LoraGatewayCmd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DEVICEID_FIELD_NUMBER = 1;
    private long deviceID_;
    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasDeviceID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public long getDeviceID() {
      return deviceID_;
    }

    public static final int COMMANDID_FIELD_NUMBER = 2;
    private long commandID_;
    /**
     * <code>required uint64 commandID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasCommandID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 commandID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public long getCommandID() {
      return commandID_;
    }

    public static final int INCLUDEACTIONS_FIELD_NUMBER = 3;
    private java.util.List<maxpb.MaxpbLora.LoraActions> includeActions_;
    /**
     * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<maxpb.MaxpbLora.LoraActions> getIncludeActionsList() {
      return includeActions_;
    }
    /**
     * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbLora.LoraActionsOrBuilder> 
        getIncludeActionsOrBuilderList() {
      return includeActions_;
    }
    /**
     * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getIncludeActionsCount() {
      return includeActions_.size();
    }
    /**
     * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraActions getIncludeActions(int index) {
      return includeActions_.get(index);
    }
    /**
     * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraActionsOrBuilder getIncludeActionsOrBuilder(
        int index) {
      return includeActions_.get(index);
    }

    public static final int REMOVEACTIONS_FIELD_NUMBER = 4;
    private java.util.List<maxpb.MaxpbLora.LoraActions> removeActions_;
    /**
     * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<maxpb.MaxpbLora.LoraActions> getRemoveActionsList() {
      return removeActions_;
    }
    /**
     * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbLora.LoraActionsOrBuilder> 
        getRemoveActionsOrBuilderList() {
      return removeActions_;
    }
    /**
     * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getRemoveActionsCount() {
      return removeActions_.size();
    }
    /**
     * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraActions getRemoveActions(int index) {
      return removeActions_.get(index);
    }
    /**
     * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraActionsOrBuilder getRemoveActionsOrBuilder(
        int index) {
      return removeActions_.get(index);
    }

    private void initFields() {
      deviceID_ = 0L;
      commandID_ = 0L;
      includeActions_ = java.util.Collections.emptyList();
      removeActions_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDeviceID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCommandID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getIncludeActionsCount(); i++) {
        if (!getIncludeActions(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getRemoveActionsCount(); i++) {
        if (!getRemoveActions(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, deviceID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, commandID_);
      }
      for (int i = 0; i < includeActions_.size(); i++) {
        output.writeMessage(3, includeActions_.get(i));
      }
      for (int i = 0; i < removeActions_.size(); i++) {
        output.writeMessage(4, removeActions_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, deviceID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, commandID_);
      }
      for (int i = 0; i < includeActions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, includeActions_.get(i));
      }
      for (int i = 0; i < removeActions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, removeActions_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbLora.LoraGatewayCmd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraGatewayCmd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraGatewayCmd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.LoraGatewayCmd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraGatewayCmd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraGatewayCmd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraGatewayCmd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbLora.LoraGatewayCmd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.LoraGatewayCmd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.LoraGatewayCmd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbLora.LoraGatewayCmd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.LoraGatewayCmd}
     *
     * <pre>
     *&#47;&#64;exclude
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.LoraGatewayCmd)
        maxpb.MaxpbLora.LoraGatewayCmdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraGatewayCmd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraGatewayCmd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbLora.LoraGatewayCmd.class, maxpb.MaxpbLora.LoraGatewayCmd.Builder.class);
      }

      // Construct using maxpb.MaxpbLora.LoraGatewayCmd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIncludeActionsFieldBuilder();
          getRemoveActionsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        deviceID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        commandID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (includeActionsBuilder_ == null) {
          includeActions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          includeActionsBuilder_.clear();
        }
        if (removeActionsBuilder_ == null) {
          removeActions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          removeActionsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbLora.internal_static_maxpb_LoraGatewayCmd_descriptor;
      }

      public maxpb.MaxpbLora.LoraGatewayCmd getDefaultInstanceForType() {
        return maxpb.MaxpbLora.LoraGatewayCmd.getDefaultInstance();
      }

      public maxpb.MaxpbLora.LoraGatewayCmd build() {
        maxpb.MaxpbLora.LoraGatewayCmd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbLora.LoraGatewayCmd buildPartial() {
        maxpb.MaxpbLora.LoraGatewayCmd result = new maxpb.MaxpbLora.LoraGatewayCmd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deviceID_ = deviceID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.commandID_ = commandID_;
        if (includeActionsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            includeActions_ = java.util.Collections.unmodifiableList(includeActions_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.includeActions_ = includeActions_;
        } else {
          result.includeActions_ = includeActionsBuilder_.build();
        }
        if (removeActionsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            removeActions_ = java.util.Collections.unmodifiableList(removeActions_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.removeActions_ = removeActions_;
        } else {
          result.removeActions_ = removeActionsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbLora.LoraGatewayCmd) {
          return mergeFrom((maxpb.MaxpbLora.LoraGatewayCmd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbLora.LoraGatewayCmd other) {
        if (other == maxpb.MaxpbLora.LoraGatewayCmd.getDefaultInstance()) return this;
        if (other.hasDeviceID()) {
          setDeviceID(other.getDeviceID());
        }
        if (other.hasCommandID()) {
          setCommandID(other.getCommandID());
        }
        if (includeActionsBuilder_ == null) {
          if (!other.includeActions_.isEmpty()) {
            if (includeActions_.isEmpty()) {
              includeActions_ = other.includeActions_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureIncludeActionsIsMutable();
              includeActions_.addAll(other.includeActions_);
            }
            onChanged();
          }
        } else {
          if (!other.includeActions_.isEmpty()) {
            if (includeActionsBuilder_.isEmpty()) {
              includeActionsBuilder_.dispose();
              includeActionsBuilder_ = null;
              includeActions_ = other.includeActions_;
              bitField0_ = (bitField0_ & ~0x00000004);
              includeActionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getIncludeActionsFieldBuilder() : null;
            } else {
              includeActionsBuilder_.addAllMessages(other.includeActions_);
            }
          }
        }
        if (removeActionsBuilder_ == null) {
          if (!other.removeActions_.isEmpty()) {
            if (removeActions_.isEmpty()) {
              removeActions_ = other.removeActions_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRemoveActionsIsMutable();
              removeActions_.addAll(other.removeActions_);
            }
            onChanged();
          }
        } else {
          if (!other.removeActions_.isEmpty()) {
            if (removeActionsBuilder_.isEmpty()) {
              removeActionsBuilder_.dispose();
              removeActionsBuilder_ = null;
              removeActions_ = other.removeActions_;
              bitField0_ = (bitField0_ & ~0x00000008);
              removeActionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRemoveActionsFieldBuilder() : null;
            } else {
              removeActionsBuilder_.addAllMessages(other.removeActions_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDeviceID()) {
          
          return false;
        }
        if (!hasCommandID()) {
          
          return false;
        }
        for (int i = 0; i < getIncludeActionsCount(); i++) {
          if (!getIncludeActions(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getRemoveActionsCount(); i++) {
          if (!getRemoveActions(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbLora.LoraGatewayCmd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbLora.LoraGatewayCmd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long deviceID_ ;
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasDeviceID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public long getDeviceID() {
        return deviceID_;
      }
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setDeviceID(long value) {
        bitField0_ |= 0x00000001;
        deviceID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearDeviceID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceID_ = 0L;
        onChanged();
        return this;
      }

      private long commandID_ ;
      /**
       * <code>required uint64 commandID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasCommandID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 commandID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public long getCommandID() {
        return commandID_;
      }
      /**
       * <code>required uint64 commandID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setCommandID(long value) {
        bitField0_ |= 0x00000002;
        commandID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 commandID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearCommandID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        commandID_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<maxpb.MaxpbLora.LoraActions> includeActions_ =
        java.util.Collections.emptyList();
      private void ensureIncludeActionsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          includeActions_ = new java.util.ArrayList<maxpb.MaxpbLora.LoraActions>(includeActions_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbLora.LoraActions, maxpb.MaxpbLora.LoraActions.Builder, maxpb.MaxpbLora.LoraActionsOrBuilder> includeActionsBuilder_;

      /**
       * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbLora.LoraActions> getIncludeActionsList() {
        if (includeActionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(includeActions_);
        } else {
          return includeActionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getIncludeActionsCount() {
        if (includeActionsBuilder_ == null) {
          return includeActions_.size();
        } else {
          return includeActionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraActions getIncludeActions(int index) {
        if (includeActionsBuilder_ == null) {
          return includeActions_.get(index);
        } else {
          return includeActionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setIncludeActions(
          int index, maxpb.MaxpbLora.LoraActions value) {
        if (includeActionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIncludeActionsIsMutable();
          includeActions_.set(index, value);
          onChanged();
        } else {
          includeActionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setIncludeActions(
          int index, maxpb.MaxpbLora.LoraActions.Builder builderForValue) {
        if (includeActionsBuilder_ == null) {
          ensureIncludeActionsIsMutable();
          includeActions_.set(index, builderForValue.build());
          onChanged();
        } else {
          includeActionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addIncludeActions(maxpb.MaxpbLora.LoraActions value) {
        if (includeActionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIncludeActionsIsMutable();
          includeActions_.add(value);
          onChanged();
        } else {
          includeActionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addIncludeActions(
          int index, maxpb.MaxpbLora.LoraActions value) {
        if (includeActionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIncludeActionsIsMutable();
          includeActions_.add(index, value);
          onChanged();
        } else {
          includeActionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addIncludeActions(
          maxpb.MaxpbLora.LoraActions.Builder builderForValue) {
        if (includeActionsBuilder_ == null) {
          ensureIncludeActionsIsMutable();
          includeActions_.add(builderForValue.build());
          onChanged();
        } else {
          includeActionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addIncludeActions(
          int index, maxpb.MaxpbLora.LoraActions.Builder builderForValue) {
        if (includeActionsBuilder_ == null) {
          ensureIncludeActionsIsMutable();
          includeActions_.add(index, builderForValue.build());
          onChanged();
        } else {
          includeActionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addAllIncludeActions(
          java.lang.Iterable<? extends maxpb.MaxpbLora.LoraActions> values) {
        if (includeActionsBuilder_ == null) {
          ensureIncludeActionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, includeActions_);
          onChanged();
        } else {
          includeActionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearIncludeActions() {
        if (includeActionsBuilder_ == null) {
          includeActions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          includeActionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder removeIncludeActions(int index) {
        if (includeActionsBuilder_ == null) {
          ensureIncludeActionsIsMutable();
          includeActions_.remove(index);
          onChanged();
        } else {
          includeActionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraActions.Builder getIncludeActionsBuilder(
          int index) {
        return getIncludeActionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraActionsOrBuilder getIncludeActionsOrBuilder(
          int index) {
        if (includeActionsBuilder_ == null) {
          return includeActions_.get(index);  } else {
          return includeActionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbLora.LoraActionsOrBuilder> 
           getIncludeActionsOrBuilderList() {
        if (includeActionsBuilder_ != null) {
          return includeActionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(includeActions_);
        }
      }
      /**
       * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraActions.Builder addIncludeActionsBuilder() {
        return getIncludeActionsFieldBuilder().addBuilder(
            maxpb.MaxpbLora.LoraActions.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraActions.Builder addIncludeActionsBuilder(
          int index) {
        return getIncludeActionsFieldBuilder().addBuilder(
            index, maxpb.MaxpbLora.LoraActions.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.LoraActions includeActions = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbLora.LoraActions.Builder> 
           getIncludeActionsBuilderList() {
        return getIncludeActionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbLora.LoraActions, maxpb.MaxpbLora.LoraActions.Builder, maxpb.MaxpbLora.LoraActionsOrBuilder> 
          getIncludeActionsFieldBuilder() {
        if (includeActionsBuilder_ == null) {
          includeActionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbLora.LoraActions, maxpb.MaxpbLora.LoraActions.Builder, maxpb.MaxpbLora.LoraActionsOrBuilder>(
                  includeActions_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          includeActions_ = null;
        }
        return includeActionsBuilder_;
      }

      private java.util.List<maxpb.MaxpbLora.LoraActions> removeActions_ =
        java.util.Collections.emptyList();
      private void ensureRemoveActionsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          removeActions_ = new java.util.ArrayList<maxpb.MaxpbLora.LoraActions>(removeActions_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbLora.LoraActions, maxpb.MaxpbLora.LoraActions.Builder, maxpb.MaxpbLora.LoraActionsOrBuilder> removeActionsBuilder_;

      /**
       * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbLora.LoraActions> getRemoveActionsList() {
        if (removeActionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(removeActions_);
        } else {
          return removeActionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getRemoveActionsCount() {
        if (removeActionsBuilder_ == null) {
          return removeActions_.size();
        } else {
          return removeActionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraActions getRemoveActions(int index) {
        if (removeActionsBuilder_ == null) {
          return removeActions_.get(index);
        } else {
          return removeActionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setRemoveActions(
          int index, maxpb.MaxpbLora.LoraActions value) {
        if (removeActionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemoveActionsIsMutable();
          removeActions_.set(index, value);
          onChanged();
        } else {
          removeActionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setRemoveActions(
          int index, maxpb.MaxpbLora.LoraActions.Builder builderForValue) {
        if (removeActionsBuilder_ == null) {
          ensureRemoveActionsIsMutable();
          removeActions_.set(index, builderForValue.build());
          onChanged();
        } else {
          removeActionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addRemoveActions(maxpb.MaxpbLora.LoraActions value) {
        if (removeActionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemoveActionsIsMutable();
          removeActions_.add(value);
          onChanged();
        } else {
          removeActionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addRemoveActions(
          int index, maxpb.MaxpbLora.LoraActions value) {
        if (removeActionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemoveActionsIsMutable();
          removeActions_.add(index, value);
          onChanged();
        } else {
          removeActionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addRemoveActions(
          maxpb.MaxpbLora.LoraActions.Builder builderForValue) {
        if (removeActionsBuilder_ == null) {
          ensureRemoveActionsIsMutable();
          removeActions_.add(builderForValue.build());
          onChanged();
        } else {
          removeActionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addRemoveActions(
          int index, maxpb.MaxpbLora.LoraActions.Builder builderForValue) {
        if (removeActionsBuilder_ == null) {
          ensureRemoveActionsIsMutable();
          removeActions_.add(index, builderForValue.build());
          onChanged();
        } else {
          removeActionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addAllRemoveActions(
          java.lang.Iterable<? extends maxpb.MaxpbLora.LoraActions> values) {
        if (removeActionsBuilder_ == null) {
          ensureRemoveActionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, removeActions_);
          onChanged();
        } else {
          removeActionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearRemoveActions() {
        if (removeActionsBuilder_ == null) {
          removeActions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          removeActionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder removeRemoveActions(int index) {
        if (removeActionsBuilder_ == null) {
          ensureRemoveActionsIsMutable();
          removeActions_.remove(index);
          onChanged();
        } else {
          removeActionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraActions.Builder getRemoveActionsBuilder(
          int index) {
        return getRemoveActionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraActionsOrBuilder getRemoveActionsOrBuilder(
          int index) {
        if (removeActionsBuilder_ == null) {
          return removeActions_.get(index);  } else {
          return removeActionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbLora.LoraActionsOrBuilder> 
           getRemoveActionsOrBuilderList() {
        if (removeActionsBuilder_ != null) {
          return removeActionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(removeActions_);
        }
      }
      /**
       * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraActions.Builder addRemoveActionsBuilder() {
        return getRemoveActionsFieldBuilder().addBuilder(
            maxpb.MaxpbLora.LoraActions.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraActions.Builder addRemoveActionsBuilder(
          int index) {
        return getRemoveActionsFieldBuilder().addBuilder(
            index, maxpb.MaxpbLora.LoraActions.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.LoraActions removeActions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbLora.LoraActions.Builder> 
           getRemoveActionsBuilderList() {
        return getRemoveActionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbLora.LoraActions, maxpb.MaxpbLora.LoraActions.Builder, maxpb.MaxpbLora.LoraActionsOrBuilder> 
          getRemoveActionsFieldBuilder() {
        if (removeActionsBuilder_ == null) {
          removeActionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbLora.LoraActions, maxpb.MaxpbLora.LoraActions.Builder, maxpb.MaxpbLora.LoraActionsOrBuilder>(
                  removeActions_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          removeActions_ = null;
        }
        return removeActionsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.LoraGatewayCmd)
    }

    static {
      defaultInstance = new LoraGatewayCmd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.LoraGatewayCmd)
  }

  public interface MultipleReportLoraOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.MultipleReportLora)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 gatewayID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasGatewayID();
    /**
     * <code>required uint64 gatewayID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    long getGatewayID();

    /**
     * <code>required uint64 packetID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasPacketID();
    /**
     * <code>required uint64 packetID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    long getPacketID();

    /**
     * <code>required uint64 gatewayDateTime = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasGatewayDateTime();
    /**
     * <code>required uint64 gatewayDateTime = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    long getGatewayDateTime();

    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<maxpb.MaxpbReport.PositionInfo> 
        getGatewayPositionList();
    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.PositionInfo getGatewayPosition(int index);
    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getGatewayPositionCount();
    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbReport.PositionInfoOrBuilder> 
        getGatewayPositionOrBuilderList();
    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.PositionInfoOrBuilder getGatewayPositionOrBuilder(
        int index);

    /**
     * <code>repeated .maxpb.LoraData data = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<maxpb.MaxpbLora.LoraData> 
        getDataList();
    /**
     * <code>repeated .maxpb.LoraData data = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraData getData(int index);
    /**
     * <code>repeated .maxpb.LoraData data = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getDataCount();
    /**
     * <code>repeated .maxpb.LoraData data = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbLora.LoraDataOrBuilder> 
        getDataOrBuilderList();
    /**
     * <code>repeated .maxpb.LoraData data = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbLora.LoraDataOrBuilder getDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code maxpb.MultipleReportLora}
   *
   * <pre>
   *&#47;&#64;exclude
   * </pre>
   */
  public static final class MultipleReportLora extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.MultipleReportLora)
      MultipleReportLoraOrBuilder {
    // Use MultipleReportLora.newBuilder() to construct.
    private MultipleReportLora(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MultipleReportLora(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MultipleReportLora defaultInstance;
    public static MultipleReportLora getDefaultInstance() {
      return defaultInstance;
    }

    public MultipleReportLora getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MultipleReportLora(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gatewayID_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              packetID_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              gatewayDateTime_ = input.readUInt64();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                gatewayPosition_ = new java.util.ArrayList<maxpb.MaxpbReport.PositionInfo>();
                mutable_bitField0_ |= 0x00000008;
              }
              gatewayPosition_.add(input.readMessage(maxpb.MaxpbReport.PositionInfo.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                data_ = new java.util.ArrayList<maxpb.MaxpbLora.LoraData>();
                mutable_bitField0_ |= 0x00000010;
              }
              data_.add(input.readMessage(maxpb.MaxpbLora.LoraData.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          gatewayPosition_ = java.util.Collections.unmodifiableList(gatewayPosition_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          data_ = java.util.Collections.unmodifiableList(data_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbLora.internal_static_maxpb_MultipleReportLora_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbLora.internal_static_maxpb_MultipleReportLora_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbLora.MultipleReportLora.class, maxpb.MaxpbLora.MultipleReportLora.Builder.class);
    }

    public static com.google.protobuf.Parser<MultipleReportLora> PARSER =
        new com.google.protobuf.AbstractParser<MultipleReportLora>() {
      public MultipleReportLora parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MultipleReportLora(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MultipleReportLora> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int GATEWAYID_FIELD_NUMBER = 1;
    private long gatewayID_;
    /**
     * <code>required uint64 gatewayID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasGatewayID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 gatewayID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public long getGatewayID() {
      return gatewayID_;
    }

    public static final int PACKETID_FIELD_NUMBER = 2;
    private long packetID_;
    /**
     * <code>required uint64 packetID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasPacketID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 packetID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public long getPacketID() {
      return packetID_;
    }

    public static final int GATEWAYDATETIME_FIELD_NUMBER = 3;
    private long gatewayDateTime_;
    /**
     * <code>required uint64 gatewayDateTime = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasGatewayDateTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint64 gatewayDateTime = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public long getGatewayDateTime() {
      return gatewayDateTime_;
    }

    public static final int GATEWAYPOSITION_FIELD_NUMBER = 4;
    private java.util.List<maxpb.MaxpbReport.PositionInfo> gatewayPosition_;
    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<maxpb.MaxpbReport.PositionInfo> getGatewayPositionList() {
      return gatewayPosition_;
    }
    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbReport.PositionInfoOrBuilder> 
        getGatewayPositionOrBuilderList() {
      return gatewayPosition_;
    }
    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getGatewayPositionCount() {
      return gatewayPosition_.size();
    }
    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.PositionInfo getGatewayPosition(int index) {
      return gatewayPosition_.get(index);
    }
    /**
     * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.PositionInfoOrBuilder getGatewayPositionOrBuilder(
        int index) {
      return gatewayPosition_.get(index);
    }

    public static final int DATA_FIELD_NUMBER = 5;
    private java.util.List<maxpb.MaxpbLora.LoraData> data_;
    /**
     * <code>repeated .maxpb.LoraData data = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<maxpb.MaxpbLora.LoraData> getDataList() {
      return data_;
    }
    /**
     * <code>repeated .maxpb.LoraData data = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbLora.LoraDataOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <code>repeated .maxpb.LoraData data = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated .maxpb.LoraData data = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraData getData(int index) {
      return data_.get(index);
    }
    /**
     * <code>repeated .maxpb.LoraData data = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbLora.LoraDataOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    private void initFields() {
      gatewayID_ = 0L;
      packetID_ = 0L;
      gatewayDateTime_ = 0L;
      gatewayPosition_ = java.util.Collections.emptyList();
      data_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasGatewayID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPacketID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGatewayDateTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getGatewayPositionCount(); i++) {
        if (!getGatewayPosition(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getDataCount(); i++) {
        if (!getData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, gatewayID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, packetID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, gatewayDateTime_);
      }
      for (int i = 0; i < gatewayPosition_.size(); i++) {
        output.writeMessage(4, gatewayPosition_.get(i));
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(5, data_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, gatewayID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, packetID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, gatewayDateTime_);
      }
      for (int i = 0; i < gatewayPosition_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, gatewayPosition_.get(i));
      }
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, data_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbLora.MultipleReportLora parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.MultipleReportLora parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.MultipleReportLora parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbLora.MultipleReportLora parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbLora.MultipleReportLora parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.MultipleReportLora parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.MultipleReportLora parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbLora.MultipleReportLora parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbLora.MultipleReportLora parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbLora.MultipleReportLora parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbLora.MultipleReportLora prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.MultipleReportLora}
     *
     * <pre>
     *&#47;&#64;exclude
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.MultipleReportLora)
        maxpb.MaxpbLora.MultipleReportLoraOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbLora.internal_static_maxpb_MultipleReportLora_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbLora.internal_static_maxpb_MultipleReportLora_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbLora.MultipleReportLora.class, maxpb.MaxpbLora.MultipleReportLora.Builder.class);
      }

      // Construct using maxpb.MaxpbLora.MultipleReportLora.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGatewayPositionFieldBuilder();
          getDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gatewayID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        packetID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        gatewayDateTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (gatewayPositionBuilder_ == null) {
          gatewayPosition_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          gatewayPositionBuilder_.clear();
        }
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          dataBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbLora.internal_static_maxpb_MultipleReportLora_descriptor;
      }

      public maxpb.MaxpbLora.MultipleReportLora getDefaultInstanceForType() {
        return maxpb.MaxpbLora.MultipleReportLora.getDefaultInstance();
      }

      public maxpb.MaxpbLora.MultipleReportLora build() {
        maxpb.MaxpbLora.MultipleReportLora result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbLora.MultipleReportLora buildPartial() {
        maxpb.MaxpbLora.MultipleReportLora result = new maxpb.MaxpbLora.MultipleReportLora(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gatewayID_ = gatewayID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.packetID_ = packetID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gatewayDateTime_ = gatewayDateTime_;
        if (gatewayPositionBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            gatewayPosition_ = java.util.Collections.unmodifiableList(gatewayPosition_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.gatewayPosition_ = gatewayPosition_;
        } else {
          result.gatewayPosition_ = gatewayPositionBuilder_.build();
        }
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbLora.MultipleReportLora) {
          return mergeFrom((maxpb.MaxpbLora.MultipleReportLora)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbLora.MultipleReportLora other) {
        if (other == maxpb.MaxpbLora.MultipleReportLora.getDefaultInstance()) return this;
        if (other.hasGatewayID()) {
          setGatewayID(other.getGatewayID());
        }
        if (other.hasPacketID()) {
          setPacketID(other.getPacketID());
        }
        if (other.hasGatewayDateTime()) {
          setGatewayDateTime(other.getGatewayDateTime());
        }
        if (gatewayPositionBuilder_ == null) {
          if (!other.gatewayPosition_.isEmpty()) {
            if (gatewayPosition_.isEmpty()) {
              gatewayPosition_ = other.gatewayPosition_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureGatewayPositionIsMutable();
              gatewayPosition_.addAll(other.gatewayPosition_);
            }
            onChanged();
          }
        } else {
          if (!other.gatewayPosition_.isEmpty()) {
            if (gatewayPositionBuilder_.isEmpty()) {
              gatewayPositionBuilder_.dispose();
              gatewayPositionBuilder_ = null;
              gatewayPosition_ = other.gatewayPosition_;
              bitField0_ = (bitField0_ & ~0x00000008);
              gatewayPositionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGatewayPositionFieldBuilder() : null;
            } else {
              gatewayPositionBuilder_.addAllMessages(other.gatewayPosition_);
            }
          }
        }
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000010);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasGatewayID()) {
          
          return false;
        }
        if (!hasPacketID()) {
          
          return false;
        }
        if (!hasGatewayDateTime()) {
          
          return false;
        }
        for (int i = 0; i < getGatewayPositionCount(); i++) {
          if (!getGatewayPosition(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getDataCount(); i++) {
          if (!getData(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbLora.MultipleReportLora parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbLora.MultipleReportLora) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long gatewayID_ ;
      /**
       * <code>required uint64 gatewayID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasGatewayID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 gatewayID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public long getGatewayID() {
        return gatewayID_;
      }
      /**
       * <code>required uint64 gatewayID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setGatewayID(long value) {
        bitField0_ |= 0x00000001;
        gatewayID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 gatewayID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearGatewayID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gatewayID_ = 0L;
        onChanged();
        return this;
      }

      private long packetID_ ;
      /**
       * <code>required uint64 packetID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasPacketID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 packetID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public long getPacketID() {
        return packetID_;
      }
      /**
       * <code>required uint64 packetID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setPacketID(long value) {
        bitField0_ |= 0x00000002;
        packetID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 packetID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearPacketID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        packetID_ = 0L;
        onChanged();
        return this;
      }

      private long gatewayDateTime_ ;
      /**
       * <code>required uint64 gatewayDateTime = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasGatewayDateTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint64 gatewayDateTime = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public long getGatewayDateTime() {
        return gatewayDateTime_;
      }
      /**
       * <code>required uint64 gatewayDateTime = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setGatewayDateTime(long value) {
        bitField0_ |= 0x00000004;
        gatewayDateTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 gatewayDateTime = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearGatewayDateTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gatewayDateTime_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<maxpb.MaxpbReport.PositionInfo> gatewayPosition_ =
        java.util.Collections.emptyList();
      private void ensureGatewayPositionIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          gatewayPosition_ = new java.util.ArrayList<maxpb.MaxpbReport.PositionInfo>(gatewayPosition_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.PositionInfo, maxpb.MaxpbReport.PositionInfo.Builder, maxpb.MaxpbReport.PositionInfoOrBuilder> gatewayPositionBuilder_;

      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.PositionInfo> getGatewayPositionList() {
        if (gatewayPositionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(gatewayPosition_);
        } else {
          return gatewayPositionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getGatewayPositionCount() {
        if (gatewayPositionBuilder_ == null) {
          return gatewayPosition_.size();
        } else {
          return gatewayPositionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo getGatewayPosition(int index) {
        if (gatewayPositionBuilder_ == null) {
          return gatewayPosition_.get(index);
        } else {
          return gatewayPositionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setGatewayPosition(
          int index, maxpb.MaxpbReport.PositionInfo value) {
        if (gatewayPositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGatewayPositionIsMutable();
          gatewayPosition_.set(index, value);
          onChanged();
        } else {
          gatewayPositionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setGatewayPosition(
          int index, maxpb.MaxpbReport.PositionInfo.Builder builderForValue) {
        if (gatewayPositionBuilder_ == null) {
          ensureGatewayPositionIsMutable();
          gatewayPosition_.set(index, builderForValue.build());
          onChanged();
        } else {
          gatewayPositionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addGatewayPosition(maxpb.MaxpbReport.PositionInfo value) {
        if (gatewayPositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGatewayPositionIsMutable();
          gatewayPosition_.add(value);
          onChanged();
        } else {
          gatewayPositionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addGatewayPosition(
          int index, maxpb.MaxpbReport.PositionInfo value) {
        if (gatewayPositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGatewayPositionIsMutable();
          gatewayPosition_.add(index, value);
          onChanged();
        } else {
          gatewayPositionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addGatewayPosition(
          maxpb.MaxpbReport.PositionInfo.Builder builderForValue) {
        if (gatewayPositionBuilder_ == null) {
          ensureGatewayPositionIsMutable();
          gatewayPosition_.add(builderForValue.build());
          onChanged();
        } else {
          gatewayPositionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addGatewayPosition(
          int index, maxpb.MaxpbReport.PositionInfo.Builder builderForValue) {
        if (gatewayPositionBuilder_ == null) {
          ensureGatewayPositionIsMutable();
          gatewayPosition_.add(index, builderForValue.build());
          onChanged();
        } else {
          gatewayPositionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addAllGatewayPosition(
          java.lang.Iterable<? extends maxpb.MaxpbReport.PositionInfo> values) {
        if (gatewayPositionBuilder_ == null) {
          ensureGatewayPositionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, gatewayPosition_);
          onChanged();
        } else {
          gatewayPositionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearGatewayPosition() {
        if (gatewayPositionBuilder_ == null) {
          gatewayPosition_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          gatewayPositionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder removeGatewayPosition(int index) {
        if (gatewayPositionBuilder_ == null) {
          ensureGatewayPositionIsMutable();
          gatewayPosition_.remove(index);
          onChanged();
        } else {
          gatewayPositionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo.Builder getGatewayPositionBuilder(
          int index) {
        return getGatewayPositionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfoOrBuilder getGatewayPositionOrBuilder(
          int index) {
        if (gatewayPositionBuilder_ == null) {
          return gatewayPosition_.get(index);  } else {
          return gatewayPositionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbReport.PositionInfoOrBuilder> 
           getGatewayPositionOrBuilderList() {
        if (gatewayPositionBuilder_ != null) {
          return gatewayPositionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(gatewayPosition_);
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo.Builder addGatewayPositionBuilder() {
        return getGatewayPositionFieldBuilder().addBuilder(
            maxpb.MaxpbReport.PositionInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo.Builder addGatewayPositionBuilder(
          int index) {
        return getGatewayPositionFieldBuilder().addBuilder(
            index, maxpb.MaxpbReport.PositionInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.PositionInfo gatewayPosition = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.PositionInfo.Builder> 
           getGatewayPositionBuilderList() {
        return getGatewayPositionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.PositionInfo, maxpb.MaxpbReport.PositionInfo.Builder, maxpb.MaxpbReport.PositionInfoOrBuilder> 
          getGatewayPositionFieldBuilder() {
        if (gatewayPositionBuilder_ == null) {
          gatewayPositionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbReport.PositionInfo, maxpb.MaxpbReport.PositionInfo.Builder, maxpb.MaxpbReport.PositionInfoOrBuilder>(
                  gatewayPosition_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          gatewayPosition_ = null;
        }
        return gatewayPositionBuilder_;
      }

      private java.util.List<maxpb.MaxpbLora.LoraData> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          data_ = new java.util.ArrayList<maxpb.MaxpbLora.LoraData>(data_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbLora.LoraData, maxpb.MaxpbLora.LoraData.Builder, maxpb.MaxpbLora.LoraDataOrBuilder> dataBuilder_;

      /**
       * <code>repeated .maxpb.LoraData data = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbLora.LoraData> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.LoraData data = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.LoraData data = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraData getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.LoraData data = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setData(
          int index, maxpb.MaxpbLora.LoraData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraData data = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setData(
          int index, maxpb.MaxpbLora.LoraData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraData data = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addData(maxpb.MaxpbLora.LoraData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraData data = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addData(
          int index, maxpb.MaxpbLora.LoraData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraData data = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addData(
          maxpb.MaxpbLora.LoraData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraData data = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addData(
          int index, maxpb.MaxpbLora.LoraData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraData data = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends maxpb.MaxpbLora.LoraData> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraData data = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraData data = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.LoraData data = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraData.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.LoraData data = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraDataOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.LoraData data = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbLora.LoraDataOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <code>repeated .maxpb.LoraData data = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraData.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            maxpb.MaxpbLora.LoraData.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.LoraData data = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbLora.LoraData.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, maxpb.MaxpbLora.LoraData.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.LoraData data = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbLora.LoraData.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbLora.LoraData, maxpb.MaxpbLora.LoraData.Builder, maxpb.MaxpbLora.LoraDataOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbLora.LoraData, maxpb.MaxpbLora.LoraData.Builder, maxpb.MaxpbLora.LoraDataOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.MultipleReportLora)
    }

    static {
      defaultInstance = new MultipleReportLora(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.MultipleReportLora)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_LoraRadioInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_LoraRadioInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_LoraData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_LoraData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_LoraConfigChannelEmergency_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_LoraConfigChannelEmergency_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_LoraConfigChannelCommand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_LoraConfigChannelCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_LoraConfigChannelParing_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_LoraConfigChannelParing_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_LoraConfigChannelPosition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_LoraConfigChannelPosition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_LoraConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_LoraConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_DeviceItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_DeviceItem_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_LoraConfigPeripherals_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_LoraConfigPeripherals_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_LoraActions_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_LoraActions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_LoraGatewayCmd_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_LoraGatewayCmd_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_MultipleReportLora_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_MultipleReportLora_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020maxpb_lora.proto\022\005maxpb\032\022maxpb_report." +
      "proto\032\020maxpb_gpio.proto\032\025maxpb_telemetry" +
      ".proto\032\031maxpb_customer_data.proto\"\273\001\n\rLo" +
      "raRadioInfo\022\014\n\004RSSI\030\001 \001(\021\022\013\n\003SNR\030\002 \001(\021\022\017" +
      "\n\007channel\030\003 \001(\r\022\021\n\tfrequency\030\004 \001(\r\022&\n\002SF" +
      "\030\005 \001(\0162\032.maxpb.LoraSpreadingFactor\022!\n\002CR" +
      "\030\006 \001(\0162\025.maxpb.LoraCodingRate\022 \n\002BW\030\010 \001(" +
      "\0162\024.maxpb.LoraBandwidth\"\311\003\n\010LoraData\022\016\n\006" +
      "loraID\030\001 \002(\r\022\026\n\016sequenceNumber\030\002 \002(\r\022)\n\022" +
      "identificationPack\030\003 \001(\0132\r.maxpb.IDPack\022",
      "\'\n\tloraRadio\030\004 \001(\0132\024.maxpb.LoraRadioInfo" +
      "\022%\n\010position\030\005 \003(\0132\023.maxpb.PositionInfo\022" +
      "\033\n\003ios\030\006 \001(\0132\016.maxpb.IOsInfo\022\037\n\005flags\030\007 " +
      "\001(\0132\020.maxpb.FlagsInfo\022\'\n\ttelemetry\030\010 \001(\013" +
      "2\024.maxpb.TelemetryInfo\022\027\n\017gatewayDateTim" +
      "e\030\t \001(\004\022\027\n\017gatewayDeviceId\030\n \001(\004\022,\n\017gate" +
      "wayPosition\030\013 \003(\0132\023.maxpb.PositionInfo\022\'" +
      "\n\013loraNetwork\030\014 \001(\0162\022.maxpb.LoraNetwork\022" +
      "*\n\014customerData\030\200\001 \001(\0132\023.maxpb.CustomerD" +
      "ata\"\274\003\n\032LoraConfigChannelEmergency\022\021\n\tfr",
      "equency\030\001 \001(\r\022&\n\002SF\030\002 \001(\0162\032.maxpb.LoraSp" +
      "readingFactor\022!\n\002CR\030\003 \001(\0162\025.maxpb.LoraCo" +
      "dingRate\022 \n\002BW\030\004 \001(\0162\024.maxpb.LoraBandwid" +
      "th\022\r\n\005power\030\005 \001(\r\022\026\n\016moveTxInterval\030\006 \001(" +
      "\r\022\026\n\016stopTxInterval\030\007 \001(\r\022\030\n\020moveRxONInt" +
      "erval\030\010 \001(\r\022\031\n\021moveRxOFFInterval\030\t \001(\r\022\030" +
      "\n\020stopRxONInterval\030\n \001(\r\022\031\n\021stopRxOFFInt" +
      "erval\030\013 \001(\r\022%\n\010protocol\030\r \001(\0162\023.maxpb.Lo" +
      "raProtocol\022\022\n\nloraP2PKey\030\022 \001(\014\022\034\n\024moveTx" +
      "IntervalDevice\030\023 \001(\r\022\034\n\024stopTxIntervalDe",
      "vice\030\024 \001(\r\"\316\002\n\030LoraConfigChannelCommand\022" +
      "\021\n\tfrequency\030\001 \001(\r\022&\n\002SF\030\002 \001(\0162\032.maxpb.L" +
      "oraSpreadingFactor\022!\n\002CR\030\003 \001(\0162\025.maxpb.L" +
      "oraCodingRate\022 \n\002BW\030\004 \001(\0162\024.maxpb.LoraBa" +
      "ndwidth\022\r\n\005power\030\005 \001(\r\022\030\n\020moveRxONInterv" +
      "al\030\010 \001(\r\022\031\n\021moveRxOFFInterval\030\t \001(\r\022\030\n\020s" +
      "topRxONInterval\030\n \001(\r\022\031\n\021stopRxOFFInterv" +
      "al\030\013 \001(\r\022%\n\010protocol\030\r \001(\0162\023.maxpb.LoraP" +
      "rotocol\022\022\n\nloraP2PKey\030\022 \001(\014\"\367\003\n\027LoraConf" +
      "igChannelParing\022\021\n\tfrequency\030\001 \001(\r\022&\n\002SF",
      "\030\002 \001(\0162\032.maxpb.LoraSpreadingFactor\022!\n\002CR" +
      "\030\003 \001(\0162\025.maxpb.LoraCodingRate\022 \n\002BW\030\004 \001(" +
      "\0162\024.maxpb.LoraBandwidth\022\r\n\005power\030\005 \001(\r\022\026" +
      "\n\016moveTxInterval\030\006 \001(\r\022\026\n\016stopTxInterval" +
      "\030\007 \001(\r\022\030\n\020moveRxONInterval\030\010 \001(\r\022\031\n\021move" +
      "RxOFFInterval\030\t \001(\r\022\030\n\020stopRxONInterval\030" +
      "\n \001(\r\022\031\n\021stopRxOFFInterval\030\013 \001(\r\022%\n\010prot" +
      "ocol\030\r \001(\0162\023.maxpb.LoraProtocol\022\034\n\024moveK" +
      "eepAliveTimeout\030\016 \001(\r\022\034\n\024stopKeepAliveTi" +
      "meout\030\017 \001(\r\022\035\n\025moveTxIntervalCommand\030\020 \001",
      "(\r\022\035\n\025stopTxIntervalCommand\030\021 \001(\r\022\022\n\nlor" +
      "aP2PKey\030\022 \001(\014\"\377\002\n\031LoraConfigChannelPosit" +
      "ion\022\021\n\tfrequency\030\001 \001(\r\022&\n\002SF\030\002 \001(\0162\032.max" +
      "pb.LoraSpreadingFactor\022!\n\002CR\030\003 \001(\0162\025.max" +
      "pb.LoraCodingRate\022 \n\002BW\030\004 \001(\0162\024.maxpb.Lo" +
      "raBandwidth\022\r\n\005power\030\005 \001(\r\022\026\n\016moveTxInte" +
      "rval\030\006 \001(\r\022\026\n\016stopTxInterval\030\007 \001(\r\022\030\n\020mo" +
      "veRxONInterval\030\010 \001(\r\022\031\n\021moveRxOFFInterva" +
      "l\030\t \001(\r\022\030\n\020stopRxONInterval\030\n \001(\r\022\031\n\021sto" +
      "pRxOFFInterval\030\013 \001(\r\022%\n\010protocol\030\r \001(\0162\023",
      ".maxpb.LoraProtocol\022\022\n\nloraP2PKey\030\022 \001(\014\"" +
      "\371\004\n\nLoraConfig\022\'\n\016loraModeConfig\030\001 \001(\0162\017" +
      ".maxpb.LoraMode\0229\n\024loraWanFrequencyPlan\030" +
      "\007 \001(\0162\033.maxpb.LoraWanFrequencyPlan\0223\n\021lo" +
      "raWanActivation\030\010 \001(\0162\030.maxpb.LoraWanAct" +
      "ivation\022!\n\031loraWanOTAAApplicationEUI\030\t \001" +
      "(\004\022!\n\031loraWanOTAAApplicationKey\030\n \001(\014\022\037\n" +
      "\027loraWanABPDeviceAddress\030\013 \001(\004\022#\n\033loraWa" +
      "nABPNetworkSessionKey\030\014 \001(\014\022\'\n\037loraWanAB" +
      "PApplicationSessionKey\030\r \001(\014\022;\n\020emergenc",
      "yChannel\030\016 \001(\0132!.maxpb.LoraConfigChannel" +
      "Emergency\0227\n\016commandChannel\030\017 \001(\0132\037.maxp" +
      "b.LoraConfigChannelCommand\0225\n\rparingChan" +
      "nel\030\020 \001(\0132\036.maxpb.LoraConfigChannelParin" +
      "g\0229\n\017positionChannel\030\021 \001(\0132 .maxpb.LoraC" +
      "onfigChannelPosition\022\034\n\024loraP2PCoordinat" +
      "orID\030\023 \001(\r\022\027\n\017keepMovingState\030\024 \001(\r\"9\n\nD" +
      "eviceItem\022\r\n\005index\030\001 \002(\r\022\016\n\006LoraID\030\002 \002(\r" +
      "\022\014\n\004IEEE\030\003 \002(\004\"\270\005\n\025LoraConfigPeripherals" +
      "\022\'\n\016loraModeConfig\030\001 \001(\0162\017.maxpb.LoraMod",
      "e\0229\n\024loraWanFrequencyPlan\030\007 \001(\0162\033.maxpb." +
      "LoraWanFrequencyPlan\0223\n\021loraWanActivatio" +
      "n\030\010 \001(\0162\030.maxpb.LoraWanActivation\022!\n\031lor" +
      "aWanOTAAApplicationEUI\030\t \001(\004\022!\n\031loraWanO" +
      "TAAApplicationKey\030\n \001(\014\022\037\n\027loraWanABPDev" +
      "iceAddress\030\013 \001(\004\022#\n\033loraWanABPNetworkSes" +
      "sionKey\030\014 \001(\014\022\'\n\037loraWanABPApplicationSe" +
      "ssionKey\030\r \001(\014\022;\n\020emergencyChannel\030\016 \001(\013" +
      "2!.maxpb.LoraConfigChannelEmergency\0227\n\016c" +
      "ommandChannel\030\017 \001(\0132\037.maxpb.LoraConfigCh",
      "annelCommand\0225\n\rparingChannel\030\020 \001(\0132\036.ma" +
      "xpb.LoraConfigChannelParing\0229\n\017positionC" +
      "hannel\030\021 \001(\0132 .maxpb.LoraConfigChannelPo" +
      "sition\022\027\n\017keepMovingState\030\024 \001(\r\022&\n\013loraD" +
      "evices\030\025 \003(\0132\021.maxpb.DeviceItem\022(\n\rzigbe" +
      "eDevices\030\026 \003(\0132\021.maxpb.DeviceItem\"x\n\013Lor" +
      "aActions\022\016\n\006loraID\030\001 \002(\r\022%\n\010actionID\030\002 \002" +
      "(\0162\023.maxpb.LoraActionID\022\026\n\016actionParamIN" +
      "T\030\003 \001(\005\022\032\n\022expirationDateTime\030\004 \001(\004\"\214\001\n\016" +
      "LoraGatewayCmd\022\020\n\010deviceID\030\001 \002(\004\022\021\n\tcomm",
      "andID\030\002 \002(\004\022*\n\016includeActions\030\003 \003(\0132\022.ma" +
      "xpb.LoraActions\022)\n\rremoveActions\030\004 \003(\0132\022" +
      ".maxpb.LoraActions\"\237\001\n\022MultipleReportLor" +
      "a\022\021\n\tgatewayID\030\001 \002(\004\022\020\n\010packetID\030\002 \002(\004\022\027" +
      "\n\017gatewayDateTime\030\003 \002(\004\022,\n\017gatewayPositi" +
      "on\030\004 \003(\0132\023.maxpb.PositionInfo\022\035\n\004data\030\005 " +
      "\003(\0132\017.maxpb.LoraData*9\n\013LoraNetwork\022\016\n\nL" +
      "N_UNKNOWN\020\000\022\016\n\nLN_LORAWAN\020\001\022\n\n\006LN_P2P\020\002*" +
      "P\n\016LoraCodingRate\022\016\n\nCR_UNKNOWN\020\000\022\n\n\006CR_" +
      "4_5\020\001\022\n\n\006CR_4_6\020\002\022\n\n\006CR_4_7\020\003\022\n\n\006CR_4_8\020",
      "\004*f\n\023LoraSpreadingFactor\022\r\n\tSF_UNKOWN\020\000\022" +
      "\007\n\003SF6\020\006\022\007\n\003SF7\020\007\022\007\n\003SF8\020\010\022\007\n\003SF9\020\t\022\010\n\004S" +
      "F10\020\n\022\010\n\004SF11\020\013\022\010\n\004SF12\020\014*P\n\rLoraBandwid" +
      "th\022\017\n\013LBW_UNKNOWN\020\000\022\016\n\nLBW_125kHz\020\001\022\016\n\nL" +
      "BW_250kHz\020\002\022\016\n\nLBW_500kHz\020\003*\302\002\n\010LoraMode" +
      "\022\013\n\007LM_NONE\020\000\022\024\n\020LM_P2P_POSITIONS\020\001\022\020\n\014L" +
      "M_P2P_ALARM\020\002\022\024\n\020LM_WAN_POSITIONS\020\003\022\020\n\014L" +
      "M_WAN_ALARM\020\004\022\030\n\024LM_P2P_WAN_POSITIONS\020\005\022" +
      "\024\n\020LM_P2P_WAN_ALARM\020\006\022\022\n\016LM_P2P_GATEWAY\020" +
      "\007\022\021\n\rLM_P2P_FINDER\020\010\022\030\n\024LM_P2P_PARING_DE",
      "VICE\020\t\022\035\n\031LM_P2P_PARING_COORDINATOR\020\n\022\r\n" +
      "\tLM_RFU_01\020\013\022\r\n\tLM_RFU_02\020\014\022\r\n\tLM_RFU_03" +
      "\020\r\022\r\n\tLM_RFU_04\020\016\022\r\n\tLM_RFU_05\020\017*f\n\014Lora" +
      "Protocol\022\013\n\007LP_VER1\020\000\022\r\n\tLP_RFU_01\020\001\022\r\n\t" +
      "LP_RFU_02\020\002\022\r\n\tLP_RFU_03\020\003\022\r\n\tLP_RFU_04\020" +
      "\004\022\r\n\tLP_RFU_05\020\005*\271\001\n\024LoraWanFrequencyPla" +
      "n\022\r\n\tLWF_US915\020\000\022\024\n\020LWF_US915_HYBRID\020\001\022\r" +
      "\n\tLWF_EU868\020\002\022\016\n\nLWF_AUS915\020\003\022\r\n\tLWF_BR9" +
      "15\020\004\022\016\n\nLWF_RFU_01\020\005\022\016\n\nLWF_RFU_02\020\006\022\016\n\n" +
      "LWF_RFU_03\020\007\022\016\n\nLWF_RFU_04\020\010\022\016\n\nLWF_RFU_",
      "05\020\t*.\n\021LoraWanActivation\022\014\n\010LWA_OTAA\020\000\022" +
      "\013\n\007LWA_ABP\020\001*\231\002\n\014LoraActionID\022\022\n\016LA_ACTI" +
      "ON_NONE\020\000\022\031\n\025LA_ACTION_ALARM_STATE\020\001\022\034\n\030" +
      "LA_ACTION_SET_ZIGBEE_KEY\020\002\022\033\n\027LA_ACTION_" +
      "RESET_DEFAULT\020\003\022\033\n\027LA_ACTION_ACTIVE_CONF" +
      "IG\020\004\022\031\n\025LA_ACTION_ENTER_STOCK\020\005\022\023\n\017LA_AC" +
      "TION_RFU01\020\006\022\023\n\017LA_ACTION_RFU02\020\007\022\023\n\017LA_" +
      "ACTION_RFU03\020\010\022\023\n\017LA_ACTION_RFU04\020\t\022\023\n\017L" +
      "A_ACTION_RFU05\020\n"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          maxpb.MaxpbReport.getDescriptor(),
          maxpb.MaxpbGpio.getDescriptor(),
          maxpb.MaxpbTelemetry.getDescriptor(),
          maxpb.MaxpbCustomerData.getDescriptor(),
        }, assigner);
    internal_static_maxpb_LoraRadioInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_maxpb_LoraRadioInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_LoraRadioInfo_descriptor,
        new java.lang.String[] { "RSSI", "SNR", "Channel", "Frequency", "SF", "CR", "BW", });
    internal_static_maxpb_LoraData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_maxpb_LoraData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_LoraData_descriptor,
        new java.lang.String[] { "LoraID", "SequenceNumber", "IdentificationPack", "LoraRadio", "Position", "Ios", "Flags", "Telemetry", "GatewayDateTime", "GatewayDeviceId", "GatewayPosition", "LoraNetwork", "CustomerData", });
    internal_static_maxpb_LoraConfigChannelEmergency_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_maxpb_LoraConfigChannelEmergency_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_LoraConfigChannelEmergency_descriptor,
        new java.lang.String[] { "Frequency", "SF", "CR", "BW", "Power", "MoveTxInterval", "StopTxInterval", "MoveRxONInterval", "MoveRxOFFInterval", "StopRxONInterval", "StopRxOFFInterval", "Protocol", "LoraP2PKey", "MoveTxIntervalDevice", "StopTxIntervalDevice", });
    internal_static_maxpb_LoraConfigChannelCommand_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_maxpb_LoraConfigChannelCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_LoraConfigChannelCommand_descriptor,
        new java.lang.String[] { "Frequency", "SF", "CR", "BW", "Power", "MoveRxONInterval", "MoveRxOFFInterval", "StopRxONInterval", "StopRxOFFInterval", "Protocol", "LoraP2PKey", });
    internal_static_maxpb_LoraConfigChannelParing_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_maxpb_LoraConfigChannelParing_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_LoraConfigChannelParing_descriptor,
        new java.lang.String[] { "Frequency", "SF", "CR", "BW", "Power", "MoveTxInterval", "StopTxInterval", "MoveRxONInterval", "MoveRxOFFInterval", "StopRxONInterval", "StopRxOFFInterval", "Protocol", "MoveKeepAliveTimeout", "StopKeepAliveTimeout", "MoveTxIntervalCommand", "StopTxIntervalCommand", "LoraP2PKey", });
    internal_static_maxpb_LoraConfigChannelPosition_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_maxpb_LoraConfigChannelPosition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_LoraConfigChannelPosition_descriptor,
        new java.lang.String[] { "Frequency", "SF", "CR", "BW", "Power", "MoveTxInterval", "StopTxInterval", "MoveRxONInterval", "MoveRxOFFInterval", "StopRxONInterval", "StopRxOFFInterval", "Protocol", "LoraP2PKey", });
    internal_static_maxpb_LoraConfig_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_maxpb_LoraConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_LoraConfig_descriptor,
        new java.lang.String[] { "LoraModeConfig", "LoraWanFrequencyPlan", "LoraWanActivation", "LoraWanOTAAApplicationEUI", "LoraWanOTAAApplicationKey", "LoraWanABPDeviceAddress", "LoraWanABPNetworkSessionKey", "LoraWanABPApplicationSessionKey", "EmergencyChannel", "CommandChannel", "ParingChannel", "PositionChannel", "LoraP2PCoordinatorID", "KeepMovingState", });
    internal_static_maxpb_DeviceItem_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_maxpb_DeviceItem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_DeviceItem_descriptor,
        new java.lang.String[] { "Index", "LoraID", "IEEE", });
    internal_static_maxpb_LoraConfigPeripherals_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_maxpb_LoraConfigPeripherals_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_LoraConfigPeripherals_descriptor,
        new java.lang.String[] { "LoraModeConfig", "LoraWanFrequencyPlan", "LoraWanActivation", "LoraWanOTAAApplicationEUI", "LoraWanOTAAApplicationKey", "LoraWanABPDeviceAddress", "LoraWanABPNetworkSessionKey", "LoraWanABPApplicationSessionKey", "EmergencyChannel", "CommandChannel", "ParingChannel", "PositionChannel", "KeepMovingState", "LoraDevices", "ZigbeeDevices", });
    internal_static_maxpb_LoraActions_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_maxpb_LoraActions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_LoraActions_descriptor,
        new java.lang.String[] { "LoraID", "ActionID", "ActionParamINT", "ExpirationDateTime", });
    internal_static_maxpb_LoraGatewayCmd_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_maxpb_LoraGatewayCmd_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_LoraGatewayCmd_descriptor,
        new java.lang.String[] { "DeviceID", "CommandID", "IncludeActions", "RemoveActions", });
    internal_static_maxpb_MultipleReportLora_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_maxpb_MultipleReportLora_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_MultipleReportLora_descriptor,
        new java.lang.String[] { "GatewayID", "PacketID", "GatewayDateTime", "GatewayPosition", "Data", });
    maxpb.MaxpbReport.getDescriptor();
    maxpb.MaxpbGpio.getDescriptor();
    maxpb.MaxpbTelemetry.getDescriptor();
    maxpb.MaxpbCustomerData.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
