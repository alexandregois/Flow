// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: maxpb_report.proto

package maxpb;

public final class MaxpbReport {
  private MaxpbReport() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code maxpb.ReportReason}
   *
   * <pre>
   *&#47; If two or more reasons are generated on the same second, only the one with lower value will be sent
   * </pre>
   */
  public enum ReportReason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RR_SHUTDOWN = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    RR_SHUTDOWN(0, 0),
    /**
     * <code>RR_RFU_01 = 1;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_01(1, 1),
    /**
     * <code>RR_RFU_02 = 2;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_02(2, 2),
    /**
     * <code>RR_RFU_03 = 3;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_03(3, 3),
    /**
     * <code>RR_HIGH_TEMPERATURE = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    RR_HIGH_TEMPERATURE(4, 4),
    /**
     * <code>RR_RFU_04 = 5;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_04(5, 5),
    /**
     * <code>RR_RFU_05 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_05(6, 6),
    /**
     * <code>RR_RFU_06 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_06(7, 7),
    /**
     * <code>RR_PASSWORD_WRONG_3_TIMES = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    RR_PASSWORD_WRONG_3_TIMES(8, 8),
    /**
     * <code>RR_RFU_07 = 9;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_07(9, 9),
    /**
     * <code>RR_RFU_08 = 10;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_08(10, 10),
    /**
     * <code>RR_RFU_09 = 11;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_09(11, 11),
    /**
     * <code>RR_POWER_ON = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    RR_POWER_ON(12, 12),
    /**
     * <code>RR_RFU_10 = 13;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_10(13, 13),
    /**
     * <code>RR_RFU_11 = 14;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_11(14, 14),
    /**
     * <code>RR_RFU_12 = 15;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_12(15, 15),
    /**
     * <code>RR_EVENTS = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    RR_EVENTS(16, 16),
    /**
     * <code>RR_RFU_13 = 17;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_13(17, 17),
    /**
     * <code>RR_RFU_14 = 18;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_14(18, 18),
    /**
     * <code>RR_RFU_15 = 19;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_15(19, 19),
    /**
     * <code>RR_RFU_16 = 20;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_16(20, 20),
    /**
     * <code>RR_DIRECTION_CHANGED = 50;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    RR_DIRECTION_CHANGED(21, 50),
    /**
     * <code>RR_DISTANCE_THRESHOLD = 52;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    RR_DISTANCE_THRESHOLD(22, 52),
    /**
     * <code>RR_RFU_17 = 53;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_17(23, 53),
    /**
     * <code>RR_RFU_18 = 54;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_18(24, 54),
    /**
     * <code>RR_RFU_19 = 55;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_19(25, 55),
    /**
     * <code>RR_RFU_20 = 56;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_20(26, 56),
    /**
     * <code>RR_RFU_21 = 57;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_21(27, 57),
    /**
     * <code>RR_TIMER_PANIC = 60;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    RR_TIMER_PANIC(28, 60),
    /**
     * <code>RR_RFU_22 = 61;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_22(29, 61),
    /**
     * <code>RR_TIMER_JAMMER = 62;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    RR_TIMER_JAMMER(30, 62),
    /**
     * <code>RR_RFU_23 = 63;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_23(31, 63),
    /**
     * <code>RR_TIMER_BATTERY = 64;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    RR_TIMER_BATTERY(32, 64),
    /**
     * <code>RR_RFU_24 = 65;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_24(33, 65),
    /**
     * <code>RR_TIMER_SLEEP = 66;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    RR_TIMER_SLEEP(34, 66),
    /**
     * <code>RR_RFU_25 = 67;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_25(35, 67),
    /**
     * <code>RR_TIMER_LOW_POWER = 68;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    RR_TIMER_LOW_POWER(36, 68),
    /**
     * <code>RR_RFU_26 = 69;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_26(37, 69),
    /**
     * <code>RR_TIMER_IGN_ON_MOVING = 70;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    RR_TIMER_IGN_ON_MOVING(38, 70),
    /**
     * <code>RR_RFU_27 = 71;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_27(39, 71),
    /**
     * <code>RR_TIMER_IGN_ON_STOP = 72;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    RR_TIMER_IGN_ON_STOP(40, 72),
    /**
     * <code>RR_RFU_28 = 73;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_28(41, 73),
    /**
     * <code>RR_TIMER_IGN_OFF_MOVING = 74;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    RR_TIMER_IGN_OFF_MOVING(42, 74),
    /**
     * <code>RR_RFU_29 = 75;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_29(43, 75),
    /**
     * <code>RR_TIMER_IGN_OFF_STOP = 76;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    RR_TIMER_IGN_OFF_STOP(44, 76),
    /**
     * <code>RR_RFU_30 = 77;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_30(45, 77),
    /**
     * <code>RR_TIMER_PORTABLE_MOVING = 78;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, MXT180
     * </pre>
     */
    RR_TIMER_PORTABLE_MOVING(46, 78),
    /**
     * <code>RR_RFU_32 = 79;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_32(47, 79),
    /**
     * <code>RR_TIMER_PORTABLE_STOP = 80;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    RR_TIMER_PORTABLE_STOP(48, 80),
    /**
     * <code>RR_RFU_34 = 81;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_34(49, 81),
    /**
     * <code>RR_LORA_REPORT_DATA = 100;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT180
     * </pre>
     */
    RR_LORA_REPORT_DATA(50, 100),
    /**
     * <code>RR_RFU_35 = 101;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_35(51, 101),
    /**
     * <code>RR_ACCESSORIES_REPORT_DATA = 102;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy: MXT162, MAXIO
     * </pre>
     */
    RR_ACCESSORIES_REPORT_DATA(52, 102),
    /**
     * <code>RR_RFU_37 = 103;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_37(53, 103),
    /**
     * <code>RR_RFU_38 = 104;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_38(54, 104),
    /**
     * <code>RR_RFU_39 = 105;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_39(55, 105),
    /**
     * <code>RR_RECONSTRUCTION = 125;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    RR_RECONSTRUCTION(56, 125),
    /**
     * <code>RR_PASSWORD_CHANGED = 126;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    RR_PASSWORD_CHANGED(57, 126),
    /**
     * <code>RR_SERVER_REQUISITION = 127;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    RR_SERVER_REQUISITION(58, 127),
    /**
     * <code>RR_RFU_40 = 128;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_40(59, 128),
    /**
     * <code>RR_RFU_41 = 129;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_41(60, 129),
    /**
     * <code>RR_RFU_42 = 130;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_42(61, 130),
    /**
     * <code>RR_RFU_43 = 131;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_43(62, 131),
    /**
     * <code>RR_RFU_44 = 132;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    RR_RFU_44(63, 132),
    ;

    /**
     * <code>RR_SHUTDOWN = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int RR_SHUTDOWN_VALUE = 0;
    /**
     * <code>RR_RFU_01 = 1;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_01_VALUE = 1;
    /**
     * <code>RR_RFU_02 = 2;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_02_VALUE = 2;
    /**
     * <code>RR_RFU_03 = 3;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_03_VALUE = 3;
    /**
     * <code>RR_HIGH_TEMPERATURE = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int RR_HIGH_TEMPERATURE_VALUE = 4;
    /**
     * <code>RR_RFU_04 = 5;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_04_VALUE = 5;
    /**
     * <code>RR_RFU_05 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_05_VALUE = 6;
    /**
     * <code>RR_RFU_06 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_06_VALUE = 7;
    /**
     * <code>RR_PASSWORD_WRONG_3_TIMES = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int RR_PASSWORD_WRONG_3_TIMES_VALUE = 8;
    /**
     * <code>RR_RFU_07 = 9;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_07_VALUE = 9;
    /**
     * <code>RR_RFU_08 = 10;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_08_VALUE = 10;
    /**
     * <code>RR_RFU_09 = 11;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_09_VALUE = 11;
    /**
     * <code>RR_POWER_ON = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int RR_POWER_ON_VALUE = 12;
    /**
     * <code>RR_RFU_10 = 13;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_10_VALUE = 13;
    /**
     * <code>RR_RFU_11 = 14;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_11_VALUE = 14;
    /**
     * <code>RR_RFU_12 = 15;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_12_VALUE = 15;
    /**
     * <code>RR_EVENTS = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int RR_EVENTS_VALUE = 16;
    /**
     * <code>RR_RFU_13 = 17;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_13_VALUE = 17;
    /**
     * <code>RR_RFU_14 = 18;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_14_VALUE = 18;
    /**
     * <code>RR_RFU_15 = 19;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_15_VALUE = 19;
    /**
     * <code>RR_RFU_16 = 20;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_16_VALUE = 20;
    /**
     * <code>RR_DIRECTION_CHANGED = 50;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int RR_DIRECTION_CHANGED_VALUE = 50;
    /**
     * <code>RR_DISTANCE_THRESHOLD = 52;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int RR_DISTANCE_THRESHOLD_VALUE = 52;
    /**
     * <code>RR_RFU_17 = 53;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_17_VALUE = 53;
    /**
     * <code>RR_RFU_18 = 54;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_18_VALUE = 54;
    /**
     * <code>RR_RFU_19 = 55;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_19_VALUE = 55;
    /**
     * <code>RR_RFU_20 = 56;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_20_VALUE = 56;
    /**
     * <code>RR_RFU_21 = 57;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_21_VALUE = 57;
    /**
     * <code>RR_TIMER_PANIC = 60;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int RR_TIMER_PANIC_VALUE = 60;
    /**
     * <code>RR_RFU_22 = 61;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_22_VALUE = 61;
    /**
     * <code>RR_TIMER_JAMMER = 62;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int RR_TIMER_JAMMER_VALUE = 62;
    /**
     * <code>RR_RFU_23 = 63;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_23_VALUE = 63;
    /**
     * <code>RR_TIMER_BATTERY = 64;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int RR_TIMER_BATTERY_VALUE = 64;
    /**
     * <code>RR_RFU_24 = 65;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_24_VALUE = 65;
    /**
     * <code>RR_TIMER_SLEEP = 66;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public static final int RR_TIMER_SLEEP_VALUE = 66;
    /**
     * <code>RR_RFU_25 = 67;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_25_VALUE = 67;
    /**
     * <code>RR_TIMER_LOW_POWER = 68;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int RR_TIMER_LOW_POWER_VALUE = 68;
    /**
     * <code>RR_RFU_26 = 69;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_26_VALUE = 69;
    /**
     * <code>RR_TIMER_IGN_ON_MOVING = 70;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int RR_TIMER_IGN_ON_MOVING_VALUE = 70;
    /**
     * <code>RR_RFU_27 = 71;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_27_VALUE = 71;
    /**
     * <code>RR_TIMER_IGN_ON_STOP = 72;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int RR_TIMER_IGN_ON_STOP_VALUE = 72;
    /**
     * <code>RR_RFU_28 = 73;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_28_VALUE = 73;
    /**
     * <code>RR_TIMER_IGN_OFF_MOVING = 74;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int RR_TIMER_IGN_OFF_MOVING_VALUE = 74;
    /**
     * <code>RR_RFU_29 = 75;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_29_VALUE = 75;
    /**
     * <code>RR_TIMER_IGN_OFF_STOP = 76;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int RR_TIMER_IGN_OFF_STOP_VALUE = 76;
    /**
     * <code>RR_RFU_30 = 77;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_30_VALUE = 77;
    /**
     * <code>RR_TIMER_PORTABLE_MOVING = 78;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, MXT180
     * </pre>
     */
    public static final int RR_TIMER_PORTABLE_MOVING_VALUE = 78;
    /**
     * <code>RR_RFU_32 = 79;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_32_VALUE = 79;
    /**
     * <code>RR_TIMER_PORTABLE_STOP = 80;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int RR_TIMER_PORTABLE_STOP_VALUE = 80;
    /**
     * <code>RR_RFU_34 = 81;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_34_VALUE = 81;
    /**
     * <code>RR_LORA_REPORT_DATA = 100;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT180
     * </pre>
     */
    public static final int RR_LORA_REPORT_DATA_VALUE = 100;
    /**
     * <code>RR_RFU_35 = 101;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_35_VALUE = 101;
    /**
     * <code>RR_ACCESSORIES_REPORT_DATA = 102;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy: MXT162, MAXIO
     * </pre>
     */
    public static final int RR_ACCESSORIES_REPORT_DATA_VALUE = 102;
    /**
     * <code>RR_RFU_37 = 103;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_37_VALUE = 103;
    /**
     * <code>RR_RFU_38 = 104;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_38_VALUE = 104;
    /**
     * <code>RR_RFU_39 = 105;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_39_VALUE = 105;
    /**
     * <code>RR_RECONSTRUCTION = 125;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public static final int RR_RECONSTRUCTION_VALUE = 125;
    /**
     * <code>RR_PASSWORD_CHANGED = 126;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int RR_PASSWORD_CHANGED_VALUE = 126;
    /**
     * <code>RR_SERVER_REQUISITION = 127;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public static final int RR_SERVER_REQUISITION_VALUE = 127;
    /**
     * <code>RR_RFU_40 = 128;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_40_VALUE = 128;
    /**
     * <code>RR_RFU_41 = 129;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_41_VALUE = 129;
    /**
     * <code>RR_RFU_42 = 130;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_42_VALUE = 130;
    /**
     * <code>RR_RFU_43 = 131;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_43_VALUE = 131;
    /**
     * <code>RR_RFU_44 = 132;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int RR_RFU_44_VALUE = 132;


    public final int getNumber() { return value; }

    public static ReportReason valueOf(int value) {
      switch (value) {
        case 0: return RR_SHUTDOWN;
        case 1: return RR_RFU_01;
        case 2: return RR_RFU_02;
        case 3: return RR_RFU_03;
        case 4: return RR_HIGH_TEMPERATURE;
        case 5: return RR_RFU_04;
        case 6: return RR_RFU_05;
        case 7: return RR_RFU_06;
        case 8: return RR_PASSWORD_WRONG_3_TIMES;
        case 9: return RR_RFU_07;
        case 10: return RR_RFU_08;
        case 11: return RR_RFU_09;
        case 12: return RR_POWER_ON;
        case 13: return RR_RFU_10;
        case 14: return RR_RFU_11;
        case 15: return RR_RFU_12;
        case 16: return RR_EVENTS;
        case 17: return RR_RFU_13;
        case 18: return RR_RFU_14;
        case 19: return RR_RFU_15;
        case 20: return RR_RFU_16;
        case 50: return RR_DIRECTION_CHANGED;
        case 52: return RR_DISTANCE_THRESHOLD;
        case 53: return RR_RFU_17;
        case 54: return RR_RFU_18;
        case 55: return RR_RFU_19;
        case 56: return RR_RFU_20;
        case 57: return RR_RFU_21;
        case 60: return RR_TIMER_PANIC;
        case 61: return RR_RFU_22;
        case 62: return RR_TIMER_JAMMER;
        case 63: return RR_RFU_23;
        case 64: return RR_TIMER_BATTERY;
        case 65: return RR_RFU_24;
        case 66: return RR_TIMER_SLEEP;
        case 67: return RR_RFU_25;
        case 68: return RR_TIMER_LOW_POWER;
        case 69: return RR_RFU_26;
        case 70: return RR_TIMER_IGN_ON_MOVING;
        case 71: return RR_RFU_27;
        case 72: return RR_TIMER_IGN_ON_STOP;
        case 73: return RR_RFU_28;
        case 74: return RR_TIMER_IGN_OFF_MOVING;
        case 75: return RR_RFU_29;
        case 76: return RR_TIMER_IGN_OFF_STOP;
        case 77: return RR_RFU_30;
        case 78: return RR_TIMER_PORTABLE_MOVING;
        case 79: return RR_RFU_32;
        case 80: return RR_TIMER_PORTABLE_STOP;
        case 81: return RR_RFU_34;
        case 100: return RR_LORA_REPORT_DATA;
        case 101: return RR_RFU_35;
        case 102: return RR_ACCESSORIES_REPORT_DATA;
        case 103: return RR_RFU_37;
        case 104: return RR_RFU_38;
        case 105: return RR_RFU_39;
        case 125: return RR_RECONSTRUCTION;
        case 126: return RR_PASSWORD_CHANGED;
        case 127: return RR_SERVER_REQUISITION;
        case 128: return RR_RFU_40;
        case 129: return RR_RFU_41;
        case 130: return RR_RFU_42;
        case 131: return RR_RFU_43;
        case 132: return RR_RFU_44;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ReportReason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ReportReason>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ReportReason>() {
            public ReportReason findValueByNumber(int number) {
              return ReportReason.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbReport.getDescriptor().getEnumTypes().get(0);
    }

    private static final ReportReason[] VALUES = values();

    public static ReportReason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ReportReason(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.ReportReason)
  }

  /**
   * Protobuf enum {@code maxpb.ReportEvents}
   *
   * <pre>
   *&#47; This enum will be used as bitmask
   * </pre>
   */
  public enum ReportEvents
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RE_NONE = 0;</code>
     *
     * <pre>
     *&#47; Proto3 compatibility SupportedBy: 
     * </pre>
     */
    RE_NONE(0, 0),
    /**
     * <code>RE_ENABLE = 1;</code>
     *
     * <pre>
     *&#47; Bit 0 SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    RE_ENABLE(1, 1),
    /**
     * <code>RE_WIFI_BT_SERIAL = 2;</code>
     *
     * <pre>
     *&#47; Bit 1 SupportedBy: MXT160, MXT162
     * </pre>
     */
    RE_WIFI_BT_SERIAL(2, 2),
    /**
     * <code>RE_RF = 4;</code>
     *
     * <pre>
     *&#47; Bit 2 SupportedBy: 
     * </pre>
     */
    RE_RF(3, 4),
    /**
     * <code>RE_GPRS = 8;</code>
     *
     * <pre>
     *&#47; Bit 3 SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    RE_GPRS(4, 8),
    /**
     * <code>RE_SATELITTE = 16;</code>
     *
     * <pre>
     *&#47; Bit 4 SupportedBy: 
     * </pre>
     */
    RE_SATELITTE(5, 16),
    ;

    /**
     * <code>RE_NONE = 0;</code>
     *
     * <pre>
     *&#47; Proto3 compatibility SupportedBy: 
     * </pre>
     */
    public static final int RE_NONE_VALUE = 0;
    /**
     * <code>RE_ENABLE = 1;</code>
     *
     * <pre>
     *&#47; Bit 0 SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int RE_ENABLE_VALUE = 1;
    /**
     * <code>RE_WIFI_BT_SERIAL = 2;</code>
     *
     * <pre>
     *&#47; Bit 1 SupportedBy: MXT160, MXT162
     * </pre>
     */
    public static final int RE_WIFI_BT_SERIAL_VALUE = 2;
    /**
     * <code>RE_RF = 4;</code>
     *
     * <pre>
     *&#47; Bit 2 SupportedBy: 
     * </pre>
     */
    public static final int RE_RF_VALUE = 4;
    /**
     * <code>RE_GPRS = 8;</code>
     *
     * <pre>
     *&#47; Bit 3 SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int RE_GPRS_VALUE = 8;
    /**
     * <code>RE_SATELITTE = 16;</code>
     *
     * <pre>
     *&#47; Bit 4 SupportedBy: 
     * </pre>
     */
    public static final int RE_SATELITTE_VALUE = 16;


    public final int getNumber() { return value; }

    public static ReportEvents valueOf(int value) {
      switch (value) {
        case 0: return RE_NONE;
        case 1: return RE_ENABLE;
        case 2: return RE_WIFI_BT_SERIAL;
        case 4: return RE_RF;
        case 8: return RE_GPRS;
        case 16: return RE_SATELITTE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ReportEvents>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ReportEvents>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ReportEvents>() {
            public ReportEvents findValueByNumber(int number) {
              return ReportEvents.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbReport.getDescriptor().getEnumTypes().get(1);
    }

    private static final ReportEvents[] VALUES = values();

    public static ReportEvents valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ReportEvents(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.ReportEvents)
  }

  /**
   * Protobuf enum {@code maxpb.DeviceEvent}
   */
  public enum DeviceEvent
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DE_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_NONE(0, 0),
    /**
     * <code>DE_CONFIG_CHANGED = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142
     * </pre>
     */
    DE_CONFIG_CHANGED(1, 1),
    /**
     * <code>DE_GPS_FIXED = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    DE_GPS_FIXED(2, 2),
    /**
     * <code>DE_GPS_FIX_LOST = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    DE_GPS_FIX_LOST(3, 3),
    /**
     * <code>DE_IGNITION_ON = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    DE_IGNITION_ON(4, 4),
    /**
     * <code>DE_IGNITION_OFF = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    DE_IGNITION_OFF(5, 5),
    /**
     * <code>DE_PANIC_ACTIVATED = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    DE_PANIC_ACTIVATED(6, 6),
    /**
     * <code>DE_PANIC_DEACTIVATED = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    DE_PANIC_DEACTIVATED(7, 7),
    /**
     * <code>DE_EXTPOWER_FAIL = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    DE_EXTPOWER_FAIL(8, 8),
    /**
     * <code>DE_EXTPOWER_OK = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    DE_EXTPOWER_OK(9, 9),
    /**
     * <code>DE_GPS_ANTENNA_FAIL = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142
     * </pre>
     */
    DE_GPS_ANTENNA_FAIL(10, 10),
    /**
     * <code>DE_GPS_ANTENNA_OK = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142
     * </pre>
     */
    DE_GPS_ANTENNA_OK(11, 11),
    /**
     * <code>DE_BATTERY_FAIL = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    DE_BATTERY_FAIL(12, 12),
    /**
     * <code>DE_BATTERY_OK = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    DE_BATTERY_OK(13, 13),
    /**
     * <code>DE_JAMMING_START = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    DE_JAMMING_START(14, 14),
    /**
     * <code>DE_JAMMING_END = 15;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    DE_JAMMING_END(15, 15),
    /**
     * <code>DE_VIRTUAL_IGNITION_CALIBRATED = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    DE_VIRTUAL_IGNITION_CALIBRATED(16, 16),
    /**
     * <code>DE_ENTER_DEEP_SLEEP = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    DE_ENTER_DEEP_SLEEP(17, 17),
    /**
     * <code>DE_LBS_INFO = 18;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    DE_LBS_INFO(18, 18),
    /**
     * <code>DE_IGNITION_MODE_CHANGED = 19;</code>
     *
     * <pre>
     *&#47; Generated when an input configured as IMD_IGNITION_IF_USED is activated SupportedBy: MXT160, MXT162
     * </pre>
     */
    DE_IGNITION_MODE_CHANGED(19, 19),
    /**
     * <code>DE_ALARM_STATE_CHANGED = 20;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    DE_ALARM_STATE_CHANGED(20, 20),
    /**
     * <code>DE_RFU_00 = 21;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_RFU_00(21, 21),
    /**
     * <code>DE_GPRS_CONNECTED = 22;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142
     * </pre>
     */
    DE_GPRS_CONNECTED(22, 22),
    /**
     * <code>DE_TRANSMISSION_RETRIES_LIMIT = 23;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142
     * </pre>
     */
    DE_TRANSMISSION_RETRIES_LIMIT(23, 23),
    /**
     * <code>DE_TRIP_RECONSTRUCTION = 24;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    DE_TRIP_RECONSTRUCTION(24, 24),
    /**
     * <code>DE_EMERGENCY_STATE_CHANGED = 25;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    DE_EMERGENCY_STATE_CHANGED(25, 25),
    /**
     * <code>DE_RFU_01 = 26;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_01(26, 26),
    /**
     * <code>DE_RFU_02 = 27;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_02(27, 27),
    /**
     * <code>DE_RFU_03 = 28;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_03(28, 28),
    /**
     * <code>DE_RFU_04 = 29;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_04(29, 29),
    /**
     * <code>DE_RFU_05 = 30;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_05(30, 30),
    /**
     * <code>DE_RFU_06 = 31;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_06(31, 31),
    /**
     * <code>DE_RFU_07 = 32;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_07(32, 32),
    /**
     * <code>DE_RFU_08 = 33;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_08(33, 33),
    /**
     * <code>DE_RFU_09 = 34;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_09(34, 34),
    /**
     * <code>DE_RFU_10 = 35;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_10(35, 35),
    /**
     * <code>DE_INPUT1_STATE_CHANGE = 50;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    DE_INPUT1_STATE_CHANGE(36, 50),
    /**
     * <code>DE_INPUT2_STATE_CHANGE = 51;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160
     * </pre>
     */
    DE_INPUT2_STATE_CHANGE(37, 51),
    /**
     * <code>DE_INPUT3_STATE_CHANGE = 52;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160
     * </pre>
     */
    DE_INPUT3_STATE_CHANGE(38, 52),
    /**
     * <code>DE_INPUT4_STATE_CHANGE = 53;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_INPUT4_STATE_CHANGE(39, 53),
    /**
     * <code>DE_INPUT5_STATE_CHANGE = 54;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_INPUT5_STATE_CHANGE(40, 54),
    /**
     * <code>DE_INPUT6_STATE_CHANGE = 55;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_INPUT6_STATE_CHANGE(41, 55),
    /**
     * <code>DE_INPUT7_STATE_CHANGE = 56;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_INPUT7_STATE_CHANGE(42, 56),
    /**
     * <code>DE_INPUT8_STATE_CHANGE = 57;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_INPUT8_STATE_CHANGE(43, 57),
    /**
     * <code>DE_INPUT9_STATE_CHANGE = 58;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_INPUT9_STATE_CHANGE(44, 58),
    /**
     * <code>DE_INPUT10_STATE_CHANGE = 59;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_INPUT10_STATE_CHANGE(45, 59),
    /**
     * <code>DE_INPUT11_STATE_CHANGE = 60;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_INPUT11_STATE_CHANGE(46, 60),
    /**
     * <code>DE_INPUT12_STATE_CHANGE = 61;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_INPUT12_STATE_CHANGE(47, 61),
    /**
     * <code>DE_INPUT13_STATE_CHANGE = 62;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_INPUT13_STATE_CHANGE(48, 62),
    /**
     * <code>DE_INPUT14_STATE_CHANGE = 63;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_INPUT14_STATE_CHANGE(49, 63),
    /**
     * <code>DE_INPUT15_STATE_CHANGE = 64;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_INPUT15_STATE_CHANGE(50, 64),
    /**
     * <code>DE_INPUT16_STATE_CHANGE = 65;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_INPUT16_STATE_CHANGE(51, 65),
    /**
     * <code>DE_RFU_11 = 66;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_11(52, 66),
    /**
     * <code>DE_RFU_12 = 67;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_12(53, 67),
    /**
     * <code>DE_RFU_13 = 68;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_13(54, 68),
    /**
     * <code>DE_RFU_14 = 69;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_14(55, 69),
    /**
     * <code>DE_RFU_15 = 70;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_15(56, 70),
    /**
     * <code>DE_RFU_16 = 71;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_16(57, 71),
    /**
     * <code>DE_RFU_17 = 72;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_17(58, 72),
    /**
     * <code>DE_RFU_18 = 73;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_18(59, 73),
    /**
     * <code>DE_RFU_19 = 74;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_19(60, 74),
    /**
     * <code>DE_RFU_20 = 75;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_20(61, 75),
    /**
     * <code>DE_OUTPUT1_STATE_CHANGE = 100;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    DE_OUTPUT1_STATE_CHANGE(62, 100),
    /**
     * <code>DE_OUTPUT2_STATE_CHANGE = 101;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    DE_OUTPUT2_STATE_CHANGE(63, 101),
    /**
     * <code>DE_OUTPUT3_STATE_CHANGE = 102;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_OUTPUT3_STATE_CHANGE(64, 102),
    /**
     * <code>DE_OUTPUT4_STATE_CHANGE = 103;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_OUTPUT4_STATE_CHANGE(65, 103),
    /**
     * <code>DE_OUTPUT5_STATE_CHANGE = 104;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_OUTPUT5_STATE_CHANGE(66, 104),
    /**
     * <code>DE_OUTPUT6_STATE_CHANGE = 105;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_OUTPUT6_STATE_CHANGE(67, 105),
    /**
     * <code>DE_OUTPUT7_STATE_CHANGE = 106;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_OUTPUT7_STATE_CHANGE(68, 106),
    /**
     * <code>DE_OUTPUT8_STATE_CHANGE = 107;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    DE_OUTPUT8_STATE_CHANGE(69, 107),
    /**
     * <code>DE_RFU_21 = 108;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_21(70, 108),
    /**
     * <code>DE_RFU_22 = 109;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_22(71, 109),
    /**
     * <code>DE_RFU_23 = 110;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_23(72, 110),
    /**
     * <code>DE_RFU_24 = 111;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_24(73, 111),
    /**
     * <code>DE_RFU_25 = 112;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_25(74, 112),
    /**
     * <code>DE_RFU_26 = 113;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_26(75, 113),
    /**
     * <code>DE_RFU_27 = 114;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_27(76, 114),
    /**
     * <code>DE_RFU_28 = 115;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_28(77, 115),
    /**
     * <code>DE_RFU_29 = 116;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_29(78, 116),
    /**
     * <code>DE_RFU_30 = 117;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    DE_RFU_30(79, 117),
    ;

    /**
     * <code>DE_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_NONE_VALUE = 0;
    /**
     * <code>DE_CONFIG_CHANGED = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142
     * </pre>
     */
    public static final int DE_CONFIG_CHANGED_VALUE = 1;
    /**
     * <code>DE_GPS_FIXED = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int DE_GPS_FIXED_VALUE = 2;
    /**
     * <code>DE_GPS_FIX_LOST = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int DE_GPS_FIX_LOST_VALUE = 3;
    /**
     * <code>DE_IGNITION_ON = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int DE_IGNITION_ON_VALUE = 4;
    /**
     * <code>DE_IGNITION_OFF = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int DE_IGNITION_OFF_VALUE = 5;
    /**
     * <code>DE_PANIC_ACTIVATED = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int DE_PANIC_ACTIVATED_VALUE = 6;
    /**
     * <code>DE_PANIC_DEACTIVATED = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int DE_PANIC_DEACTIVATED_VALUE = 7;
    /**
     * <code>DE_EXTPOWER_FAIL = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int DE_EXTPOWER_FAIL_VALUE = 8;
    /**
     * <code>DE_EXTPOWER_OK = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int DE_EXTPOWER_OK_VALUE = 9;
    /**
     * <code>DE_GPS_ANTENNA_FAIL = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142
     * </pre>
     */
    public static final int DE_GPS_ANTENNA_FAIL_VALUE = 10;
    /**
     * <code>DE_GPS_ANTENNA_OK = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142
     * </pre>
     */
    public static final int DE_GPS_ANTENNA_OK_VALUE = 11;
    /**
     * <code>DE_BATTERY_FAIL = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public static final int DE_BATTERY_FAIL_VALUE = 12;
    /**
     * <code>DE_BATTERY_OK = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public static final int DE_BATTERY_OK_VALUE = 13;
    /**
     * <code>DE_JAMMING_START = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public static final int DE_JAMMING_START_VALUE = 14;
    /**
     * <code>DE_JAMMING_END = 15;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public static final int DE_JAMMING_END_VALUE = 15;
    /**
     * <code>DE_VIRTUAL_IGNITION_CALIBRATED = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public static final int DE_VIRTUAL_IGNITION_CALIBRATED_VALUE = 16;
    /**
     * <code>DE_ENTER_DEEP_SLEEP = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public static final int DE_ENTER_DEEP_SLEEP_VALUE = 17;
    /**
     * <code>DE_LBS_INFO = 18;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public static final int DE_LBS_INFO_VALUE = 18;
    /**
     * <code>DE_IGNITION_MODE_CHANGED = 19;</code>
     *
     * <pre>
     *&#47; Generated when an input configured as IMD_IGNITION_IF_USED is activated SupportedBy: MXT160, MXT162
     * </pre>
     */
    public static final int DE_IGNITION_MODE_CHANGED_VALUE = 19;
    /**
     * <code>DE_ALARM_STATE_CHANGED = 20;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public static final int DE_ALARM_STATE_CHANGED_VALUE = 20;
    /**
     * <code>DE_RFU_00 = 21;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_RFU_00_VALUE = 21;
    /**
     * <code>DE_GPRS_CONNECTED = 22;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142
     * </pre>
     */
    public static final int DE_GPRS_CONNECTED_VALUE = 22;
    /**
     * <code>DE_TRANSMISSION_RETRIES_LIMIT = 23;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142
     * </pre>
     */
    public static final int DE_TRANSMISSION_RETRIES_LIMIT_VALUE = 23;
    /**
     * <code>DE_TRIP_RECONSTRUCTION = 24;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int DE_TRIP_RECONSTRUCTION_VALUE = 24;
    /**
     * <code>DE_EMERGENCY_STATE_CHANGED = 25;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int DE_EMERGENCY_STATE_CHANGED_VALUE = 25;
    /**
     * <code>DE_RFU_01 = 26;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_01_VALUE = 26;
    /**
     * <code>DE_RFU_02 = 27;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_02_VALUE = 27;
    /**
     * <code>DE_RFU_03 = 28;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_03_VALUE = 28;
    /**
     * <code>DE_RFU_04 = 29;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_04_VALUE = 29;
    /**
     * <code>DE_RFU_05 = 30;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_05_VALUE = 30;
    /**
     * <code>DE_RFU_06 = 31;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_06_VALUE = 31;
    /**
     * <code>DE_RFU_07 = 32;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_07_VALUE = 32;
    /**
     * <code>DE_RFU_08 = 33;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_08_VALUE = 33;
    /**
     * <code>DE_RFU_09 = 34;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_09_VALUE = 34;
    /**
     * <code>DE_RFU_10 = 35;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_10_VALUE = 35;
    /**
     * <code>DE_INPUT1_STATE_CHANGE = 50;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int DE_INPUT1_STATE_CHANGE_VALUE = 50;
    /**
     * <code>DE_INPUT2_STATE_CHANGE = 51;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160
     * </pre>
     */
    public static final int DE_INPUT2_STATE_CHANGE_VALUE = 51;
    /**
     * <code>DE_INPUT3_STATE_CHANGE = 52;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160
     * </pre>
     */
    public static final int DE_INPUT3_STATE_CHANGE_VALUE = 52;
    /**
     * <code>DE_INPUT4_STATE_CHANGE = 53;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_INPUT4_STATE_CHANGE_VALUE = 53;
    /**
     * <code>DE_INPUT5_STATE_CHANGE = 54;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_INPUT5_STATE_CHANGE_VALUE = 54;
    /**
     * <code>DE_INPUT6_STATE_CHANGE = 55;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_INPUT6_STATE_CHANGE_VALUE = 55;
    /**
     * <code>DE_INPUT7_STATE_CHANGE = 56;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_INPUT7_STATE_CHANGE_VALUE = 56;
    /**
     * <code>DE_INPUT8_STATE_CHANGE = 57;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_INPUT8_STATE_CHANGE_VALUE = 57;
    /**
     * <code>DE_INPUT9_STATE_CHANGE = 58;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_INPUT9_STATE_CHANGE_VALUE = 58;
    /**
     * <code>DE_INPUT10_STATE_CHANGE = 59;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_INPUT10_STATE_CHANGE_VALUE = 59;
    /**
     * <code>DE_INPUT11_STATE_CHANGE = 60;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_INPUT11_STATE_CHANGE_VALUE = 60;
    /**
     * <code>DE_INPUT12_STATE_CHANGE = 61;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_INPUT12_STATE_CHANGE_VALUE = 61;
    /**
     * <code>DE_INPUT13_STATE_CHANGE = 62;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_INPUT13_STATE_CHANGE_VALUE = 62;
    /**
     * <code>DE_INPUT14_STATE_CHANGE = 63;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_INPUT14_STATE_CHANGE_VALUE = 63;
    /**
     * <code>DE_INPUT15_STATE_CHANGE = 64;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_INPUT15_STATE_CHANGE_VALUE = 64;
    /**
     * <code>DE_INPUT16_STATE_CHANGE = 65;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_INPUT16_STATE_CHANGE_VALUE = 65;
    /**
     * <code>DE_RFU_11 = 66;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_11_VALUE = 66;
    /**
     * <code>DE_RFU_12 = 67;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_12_VALUE = 67;
    /**
     * <code>DE_RFU_13 = 68;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_13_VALUE = 68;
    /**
     * <code>DE_RFU_14 = 69;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_14_VALUE = 69;
    /**
     * <code>DE_RFU_15 = 70;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_15_VALUE = 70;
    /**
     * <code>DE_RFU_16 = 71;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_16_VALUE = 71;
    /**
     * <code>DE_RFU_17 = 72;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_17_VALUE = 72;
    /**
     * <code>DE_RFU_18 = 73;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_18_VALUE = 73;
    /**
     * <code>DE_RFU_19 = 74;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_19_VALUE = 74;
    /**
     * <code>DE_RFU_20 = 75;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_20_VALUE = 75;
    /**
     * <code>DE_OUTPUT1_STATE_CHANGE = 100;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public static final int DE_OUTPUT1_STATE_CHANGE_VALUE = 100;
    /**
     * <code>DE_OUTPUT2_STATE_CHANGE = 101;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public static final int DE_OUTPUT2_STATE_CHANGE_VALUE = 101;
    /**
     * <code>DE_OUTPUT3_STATE_CHANGE = 102;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_OUTPUT3_STATE_CHANGE_VALUE = 102;
    /**
     * <code>DE_OUTPUT4_STATE_CHANGE = 103;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_OUTPUT4_STATE_CHANGE_VALUE = 103;
    /**
     * <code>DE_OUTPUT5_STATE_CHANGE = 104;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_OUTPUT5_STATE_CHANGE_VALUE = 104;
    /**
     * <code>DE_OUTPUT6_STATE_CHANGE = 105;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_OUTPUT6_STATE_CHANGE_VALUE = 105;
    /**
     * <code>DE_OUTPUT7_STATE_CHANGE = 106;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_OUTPUT7_STATE_CHANGE_VALUE = 106;
    /**
     * <code>DE_OUTPUT8_STATE_CHANGE = 107;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int DE_OUTPUT8_STATE_CHANGE_VALUE = 107;
    /**
     * <code>DE_RFU_21 = 108;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_21_VALUE = 108;
    /**
     * <code>DE_RFU_22 = 109;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_22_VALUE = 109;
    /**
     * <code>DE_RFU_23 = 110;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_23_VALUE = 110;
    /**
     * <code>DE_RFU_24 = 111;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_24_VALUE = 111;
    /**
     * <code>DE_RFU_25 = 112;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_25_VALUE = 112;
    /**
     * <code>DE_RFU_26 = 113;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_26_VALUE = 113;
    /**
     * <code>DE_RFU_27 = 114;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_27_VALUE = 114;
    /**
     * <code>DE_RFU_28 = 115;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_28_VALUE = 115;
    /**
     * <code>DE_RFU_29 = 116;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_29_VALUE = 116;
    /**
     * <code>DE_RFU_30 = 117;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int DE_RFU_30_VALUE = 117;


    public final int getNumber() { return value; }

    public static DeviceEvent valueOf(int value) {
      switch (value) {
        case 0: return DE_NONE;
        case 1: return DE_CONFIG_CHANGED;
        case 2: return DE_GPS_FIXED;
        case 3: return DE_GPS_FIX_LOST;
        case 4: return DE_IGNITION_ON;
        case 5: return DE_IGNITION_OFF;
        case 6: return DE_PANIC_ACTIVATED;
        case 7: return DE_PANIC_DEACTIVATED;
        case 8: return DE_EXTPOWER_FAIL;
        case 9: return DE_EXTPOWER_OK;
        case 10: return DE_GPS_ANTENNA_FAIL;
        case 11: return DE_GPS_ANTENNA_OK;
        case 12: return DE_BATTERY_FAIL;
        case 13: return DE_BATTERY_OK;
        case 14: return DE_JAMMING_START;
        case 15: return DE_JAMMING_END;
        case 16: return DE_VIRTUAL_IGNITION_CALIBRATED;
        case 17: return DE_ENTER_DEEP_SLEEP;
        case 18: return DE_LBS_INFO;
        case 19: return DE_IGNITION_MODE_CHANGED;
        case 20: return DE_ALARM_STATE_CHANGED;
        case 21: return DE_RFU_00;
        case 22: return DE_GPRS_CONNECTED;
        case 23: return DE_TRANSMISSION_RETRIES_LIMIT;
        case 24: return DE_TRIP_RECONSTRUCTION;
        case 25: return DE_EMERGENCY_STATE_CHANGED;
        case 26: return DE_RFU_01;
        case 27: return DE_RFU_02;
        case 28: return DE_RFU_03;
        case 29: return DE_RFU_04;
        case 30: return DE_RFU_05;
        case 31: return DE_RFU_06;
        case 32: return DE_RFU_07;
        case 33: return DE_RFU_08;
        case 34: return DE_RFU_09;
        case 35: return DE_RFU_10;
        case 50: return DE_INPUT1_STATE_CHANGE;
        case 51: return DE_INPUT2_STATE_CHANGE;
        case 52: return DE_INPUT3_STATE_CHANGE;
        case 53: return DE_INPUT4_STATE_CHANGE;
        case 54: return DE_INPUT5_STATE_CHANGE;
        case 55: return DE_INPUT6_STATE_CHANGE;
        case 56: return DE_INPUT7_STATE_CHANGE;
        case 57: return DE_INPUT8_STATE_CHANGE;
        case 58: return DE_INPUT9_STATE_CHANGE;
        case 59: return DE_INPUT10_STATE_CHANGE;
        case 60: return DE_INPUT11_STATE_CHANGE;
        case 61: return DE_INPUT12_STATE_CHANGE;
        case 62: return DE_INPUT13_STATE_CHANGE;
        case 63: return DE_INPUT14_STATE_CHANGE;
        case 64: return DE_INPUT15_STATE_CHANGE;
        case 65: return DE_INPUT16_STATE_CHANGE;
        case 66: return DE_RFU_11;
        case 67: return DE_RFU_12;
        case 68: return DE_RFU_13;
        case 69: return DE_RFU_14;
        case 70: return DE_RFU_15;
        case 71: return DE_RFU_16;
        case 72: return DE_RFU_17;
        case 73: return DE_RFU_18;
        case 74: return DE_RFU_19;
        case 75: return DE_RFU_20;
        case 100: return DE_OUTPUT1_STATE_CHANGE;
        case 101: return DE_OUTPUT2_STATE_CHANGE;
        case 102: return DE_OUTPUT3_STATE_CHANGE;
        case 103: return DE_OUTPUT4_STATE_CHANGE;
        case 104: return DE_OUTPUT5_STATE_CHANGE;
        case 105: return DE_OUTPUT6_STATE_CHANGE;
        case 106: return DE_OUTPUT7_STATE_CHANGE;
        case 107: return DE_OUTPUT8_STATE_CHANGE;
        case 108: return DE_RFU_21;
        case 109: return DE_RFU_22;
        case 110: return DE_RFU_23;
        case 111: return DE_RFU_24;
        case 112: return DE_RFU_25;
        case 113: return DE_RFU_26;
        case 114: return DE_RFU_27;
        case 115: return DE_RFU_28;
        case 116: return DE_RFU_29;
        case 117: return DE_RFU_30;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DeviceEvent>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DeviceEvent>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DeviceEvent>() {
            public DeviceEvent findValueByNumber(int number) {
              return DeviceEvent.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbReport.getDescriptor().getEnumTypes().get(2);
    }

    private static final DeviceEvent[] VALUES = values();

    public static DeviceEvent valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DeviceEvent(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.DeviceEvent)
  }

  /**
   * Protobuf enum {@code maxpb.PositionSource}
   */
  public enum PositionSource
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PS_GPS = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    PS_GPS(0, 0),
    /**
     * <code>PS_LBS = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: GATEWAY
     * </pre>
     */
    PS_LBS(1, 1),
    /**
     * <code>PS_LORA = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: GATEWAY
     * </pre>
     */
    PS_LORA(2, 2),
    /**
     * <code>PS_GLONASS = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    PS_GLONASS(3, 3),
    /**
     * <code>PS_RFU_01 = 4;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    PS_RFU_01(4, 4),
    /**
     * <code>PS_RFU_02 = 5;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    PS_RFU_02(5, 5),
    /**
     * <code>PS_RFU_03 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    PS_RFU_03(6, 6),
    /**
     * <code>PS_RFU_04 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    PS_RFU_04(7, 7),
    /**
     * <code>PS_RFU_05 = 8;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    PS_RFU_05(8, 8),
    ;

    /**
     * <code>PS_GPS = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int PS_GPS_VALUE = 0;
    /**
     * <code>PS_LBS = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: GATEWAY
     * </pre>
     */
    public static final int PS_LBS_VALUE = 1;
    /**
     * <code>PS_LORA = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: GATEWAY
     * </pre>
     */
    public static final int PS_LORA_VALUE = 2;
    /**
     * <code>PS_GLONASS = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int PS_GLONASS_VALUE = 3;
    /**
     * <code>PS_RFU_01 = 4;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int PS_RFU_01_VALUE = 4;
    /**
     * <code>PS_RFU_02 = 5;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int PS_RFU_02_VALUE = 5;
    /**
     * <code>PS_RFU_03 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int PS_RFU_03_VALUE = 6;
    /**
     * <code>PS_RFU_04 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int PS_RFU_04_VALUE = 7;
    /**
     * <code>PS_RFU_05 = 8;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int PS_RFU_05_VALUE = 8;


    public final int getNumber() { return value; }

    public static PositionSource valueOf(int value) {
      switch (value) {
        case 0: return PS_GPS;
        case 1: return PS_LBS;
        case 2: return PS_LORA;
        case 3: return PS_GLONASS;
        case 4: return PS_RFU_01;
        case 5: return PS_RFU_02;
        case 6: return PS_RFU_03;
        case 7: return PS_RFU_04;
        case 8: return PS_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PositionSource>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PositionSource>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PositionSource>() {
            public PositionSource findValueByNumber(int number) {
              return PositionSource.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbReport.getDescriptor().getEnumTypes().get(3);
    }

    private static final PositionSource[] VALUES = values();

    public static PositionSource valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private PositionSource(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.PositionSource)
  }

  /**
   * Protobuf enum {@code maxpb.PositionFormat}
   */
  public enum PositionFormat
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PF_SOURCE_DEFAULT = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    PF_SOURCE_DEFAULT(0, 0),
    /**
     * <code>PF_WGS84 = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, GATEWAY
     * </pre>
     */
    PF_WGS84(1, 1),
    /**
     * <code>PF_SAD69 = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: GATEWAY
     * </pre>
     */
    PF_SAD69(2, 2),
    /**
     * <code>PF_PZ90 = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, GATEWAY
     * </pre>
     */
    PF_PZ90(3, 3),
    /**
     * <code>PF_GTRF = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: GATEWAY
     * </pre>
     */
    PF_GTRF(4, 4),
    /**
     * <code>PF_CGCS2000 = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: GATEWAY
     * </pre>
     */
    PF_CGCS2000(5, 5),
    /**
     * <code>PF_SIRGAS2000 = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: GATEWAY
     * </pre>
     */
    PF_SIRGAS2000(6, 6),
    /**
     * <code>PF_RFU_01 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    PF_RFU_01(7, 7),
    /**
     * <code>PF_RFU_02 = 8;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    PF_RFU_02(8, 8),
    /**
     * <code>PF_RFU_03 = 9;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    PF_RFU_03(9, 9),
    /**
     * <code>PF_RFU_04 = 10;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    PF_RFU_04(10, 10),
    /**
     * <code>PF_RFU_05 = 11;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    PF_RFU_05(11, 11),
    ;

    /**
     * <code>PF_SOURCE_DEFAULT = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int PF_SOURCE_DEFAULT_VALUE = 0;
    /**
     * <code>PF_WGS84 = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, GATEWAY
     * </pre>
     */
    public static final int PF_WGS84_VALUE = 1;
    /**
     * <code>PF_SAD69 = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: GATEWAY
     * </pre>
     */
    public static final int PF_SAD69_VALUE = 2;
    /**
     * <code>PF_PZ90 = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, GATEWAY
     * </pre>
     */
    public static final int PF_PZ90_VALUE = 3;
    /**
     * <code>PF_GTRF = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: GATEWAY
     * </pre>
     */
    public static final int PF_GTRF_VALUE = 4;
    /**
     * <code>PF_CGCS2000 = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: GATEWAY
     * </pre>
     */
    public static final int PF_CGCS2000_VALUE = 5;
    /**
     * <code>PF_SIRGAS2000 = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: GATEWAY
     * </pre>
     */
    public static final int PF_SIRGAS2000_VALUE = 6;
    /**
     * <code>PF_RFU_01 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int PF_RFU_01_VALUE = 7;
    /**
     * <code>PF_RFU_02 = 8;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int PF_RFU_02_VALUE = 8;
    /**
     * <code>PF_RFU_03 = 9;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int PF_RFU_03_VALUE = 9;
    /**
     * <code>PF_RFU_04 = 10;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int PF_RFU_04_VALUE = 10;
    /**
     * <code>PF_RFU_05 = 11;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int PF_RFU_05_VALUE = 11;


    public final int getNumber() { return value; }

    public static PositionFormat valueOf(int value) {
      switch (value) {
        case 0: return PF_SOURCE_DEFAULT;
        case 1: return PF_WGS84;
        case 2: return PF_SAD69;
        case 3: return PF_PZ90;
        case 4: return PF_GTRF;
        case 5: return PF_CGCS2000;
        case 6: return PF_SIRGAS2000;
        case 7: return PF_RFU_01;
        case 8: return PF_RFU_02;
        case 9: return PF_RFU_03;
        case 10: return PF_RFU_04;
        case 11: return PF_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PositionFormat>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PositionFormat>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PositionFormat>() {
            public PositionFormat findValueByNumber(int number) {
              return PositionFormat.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbReport.getDescriptor().getEnumTypes().get(4);
    }

    private static final PositionFormat[] VALUES = values();

    public static PositionFormat valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private PositionFormat(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.PositionFormat)
  }

  /**
   * Protobuf enum {@code maxpb.PowerState}
   *
   * <pre>
   *&#47; Used to report current state or force a state
   * </pre>
   */
  public enum PowerState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PS_NORMAL = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    PS_NORMAL(0, 0),
    /**
     * <code>PS_SLEEP = 1;</code>
     *
     * <pre>
     *&#47; Device in sleep mode SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    PS_SLEEP(1, 1),
    /**
     * <code>PS_LOW_POWER = 2;</code>
     *
     * <pre>
     *&#47; Device in low power mode SupportedBy: MXT160, MXT162
     * </pre>
     */
    PS_LOW_POWER(2, 2),
    /**
     * <code>PS_STOCK = 3;</code>
     *
     * <pre>
     *&#47; Device in stock mode SupportedBy: MXT160, MXT162
     * </pre>
     */
    PS_STOCK(3, 3),
    /**
     * <code>PS_RESET = 4;</code>
     *
     * <pre>
     *&#47; Reset device SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    PS_RESET(4, 4),
    /**
     * <code>PST_RFU_01 = 5;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    PST_RFU_01(5, 5),
    /**
     * <code>PST_RFU_02 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    PST_RFU_02(6, 6),
    /**
     * <code>PST_RFU_03 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    PST_RFU_03(7, 7),
    /**
     * <code>PST_RFU_04 = 8;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    PST_RFU_04(8, 8),
    /**
     * <code>PST_RFU_05 = 9;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    PST_RFU_05(9, 9),
    ;

    /**
     * <code>PS_NORMAL = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public static final int PS_NORMAL_VALUE = 0;
    /**
     * <code>PS_SLEEP = 1;</code>
     *
     * <pre>
     *&#47; Device in sleep mode SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public static final int PS_SLEEP_VALUE = 1;
    /**
     * <code>PS_LOW_POWER = 2;</code>
     *
     * <pre>
     *&#47; Device in low power mode SupportedBy: MXT160, MXT162
     * </pre>
     */
    public static final int PS_LOW_POWER_VALUE = 2;
    /**
     * <code>PS_STOCK = 3;</code>
     *
     * <pre>
     *&#47; Device in stock mode SupportedBy: MXT160, MXT162
     * </pre>
     */
    public static final int PS_STOCK_VALUE = 3;
    /**
     * <code>PS_RESET = 4;</code>
     *
     * <pre>
     *&#47; Reset device SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public static final int PS_RESET_VALUE = 4;
    /**
     * <code>PST_RFU_01 = 5;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int PST_RFU_01_VALUE = 5;
    /**
     * <code>PST_RFU_02 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int PST_RFU_02_VALUE = 6;
    /**
     * <code>PST_RFU_03 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int PST_RFU_03_VALUE = 7;
    /**
     * <code>PST_RFU_04 = 8;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int PST_RFU_04_VALUE = 8;
    /**
     * <code>PST_RFU_05 = 9;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int PST_RFU_05_VALUE = 9;


    public final int getNumber() { return value; }

    public static PowerState valueOf(int value) {
      switch (value) {
        case 0: return PS_NORMAL;
        case 1: return PS_SLEEP;
        case 2: return PS_LOW_POWER;
        case 3: return PS_STOCK;
        case 4: return PS_RESET;
        case 5: return PST_RFU_01;
        case 6: return PST_RFU_02;
        case 7: return PST_RFU_03;
        case 8: return PST_RFU_04;
        case 9: return PST_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PowerState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PowerState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PowerState>() {
            public PowerState findValueByNumber(int number) {
              return PowerState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbReport.getDescriptor().getEnumTypes().get(5);
    }

    private static final PowerState[] VALUES = values();

    public static PowerState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private PowerState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.PowerState)
  }

  /**
   * Protobuf enum {@code maxpb.ConnectionState}
   */
  public enum ConnectionState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CT_DISCONNECTED = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    CT_DISCONNECTED(0, 0),
    /**
     * <code>CT_CONNECTED = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    CT_CONNECTED(1, 1),
    /**
     * <code>CT_SOCKET_ESTABILISHED = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    CT_SOCKET_ESTABILISHED(2, 2),
    /**
     * <code>CT_RFU_01 = 3;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    CT_RFU_01(3, 3),
    /**
     * <code>CT_RFU_02 = 4;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    CT_RFU_02(4, 4),
    /**
     * <code>CT_RFU_03 = 5;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    CT_RFU_03(5, 5),
    /**
     * <code>CT_RFU_04 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    CT_RFU_04(6, 6),
    /**
     * <code>CT_RFU_05 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    CT_RFU_05(7, 7),
    ;

    /**
     * <code>CT_DISCONNECTED = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public static final int CT_DISCONNECTED_VALUE = 0;
    /**
     * <code>CT_CONNECTED = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public static final int CT_CONNECTED_VALUE = 1;
    /**
     * <code>CT_SOCKET_ESTABILISHED = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public static final int CT_SOCKET_ESTABILISHED_VALUE = 2;
    /**
     * <code>CT_RFU_01 = 3;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int CT_RFU_01_VALUE = 3;
    /**
     * <code>CT_RFU_02 = 4;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int CT_RFU_02_VALUE = 4;
    /**
     * <code>CT_RFU_03 = 5;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int CT_RFU_03_VALUE = 5;
    /**
     * <code>CT_RFU_04 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int CT_RFU_04_VALUE = 6;
    /**
     * <code>CT_RFU_05 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int CT_RFU_05_VALUE = 7;


    public final int getNumber() { return value; }

    public static ConnectionState valueOf(int value) {
      switch (value) {
        case 0: return CT_DISCONNECTED;
        case 1: return CT_CONNECTED;
        case 2: return CT_SOCKET_ESTABILISHED;
        case 3: return CT_RFU_01;
        case 4: return CT_RFU_02;
        case 5: return CT_RFU_03;
        case 6: return CT_RFU_04;
        case 7: return CT_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ConnectionState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ConnectionState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ConnectionState>() {
            public ConnectionState findValueByNumber(int number) {
              return ConnectionState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbReport.getDescriptor().getEnumTypes().get(6);
    }

    private static final ConnectionState[] VALUES = values();

    public static ConnectionState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ConnectionState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.ConnectionState)
  }

  /**
   * Protobuf enum {@code maxpb.ConnectionType}
   */
  public enum ConnectionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CONN_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    CONN_NONE(0, 0),
    /**
     * <code>CONN_GPRS = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    CONN_GPRS(1, 1),
    /**
     * <code>CONN_WIFI = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    CONN_WIFI(2, 2),
    /**
     * <code>CONN_RFU_01 = 3;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    CONN_RFU_01(3, 3),
    /**
     * <code>CONN_RFU_02 = 4;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    CONN_RFU_02(4, 4),
    /**
     * <code>CONN_RFU_03 = 5;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    CONN_RFU_03(5, 5),
    /**
     * <code>CONN_RFU_04 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    CONN_RFU_04(6, 6),
    /**
     * <code>CONN_RFU_05 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    CONN_RFU_05(7, 7),
    ;

    /**
     * <code>CONN_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int CONN_NONE_VALUE = 0;
    /**
     * <code>CONN_GPRS = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int CONN_GPRS_VALUE = 1;
    /**
     * <code>CONN_WIFI = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int CONN_WIFI_VALUE = 2;
    /**
     * <code>CONN_RFU_01 = 3;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int CONN_RFU_01_VALUE = 3;
    /**
     * <code>CONN_RFU_02 = 4;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int CONN_RFU_02_VALUE = 4;
    /**
     * <code>CONN_RFU_03 = 5;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int CONN_RFU_03_VALUE = 5;
    /**
     * <code>CONN_RFU_04 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int CONN_RFU_04_VALUE = 6;
    /**
     * <code>CONN_RFU_05 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int CONN_RFU_05_VALUE = 7;


    public final int getNumber() { return value; }

    public static ConnectionType valueOf(int value) {
      switch (value) {
        case 0: return CONN_NONE;
        case 1: return CONN_GPRS;
        case 2: return CONN_WIFI;
        case 3: return CONN_RFU_01;
        case 4: return CONN_RFU_02;
        case 5: return CONN_RFU_03;
        case 6: return CONN_RFU_04;
        case 7: return CONN_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ConnectionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ConnectionType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ConnectionType>() {
            public ConnectionType findValueByNumber(int number) {
              return ConnectionType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbReport.getDescriptor().getEnumTypes().get(7);
    }

    private static final ConnectionType[] VALUES = values();

    public static ConnectionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ConnectionType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.ConnectionType)
  }

  /**
   * Protobuf enum {@code maxpb.SimCard}
   */
  public enum SimCard
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SC_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    SC_NONE(0, 0),
    /**
     * <code>SC_PRIMARY = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    SC_PRIMARY(1, 1),
    /**
     * <code>SC_SECONDARY = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    SC_SECONDARY(2, 2),
    /**
     * <code>SC_RFU_01 = 3;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    SC_RFU_01(3, 3),
    /**
     * <code>SC_RFU_02 = 4;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    SC_RFU_02(4, 4),
    /**
     * <code>SC_RFU_03 = 5;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    SC_RFU_03(5, 5),
    /**
     * <code>SC_RFU_04 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    SC_RFU_04(6, 6),
    /**
     * <code>SC_RFU_05 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    SC_RFU_05(7, 7),
    ;

    /**
     * <code>SC_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int SC_NONE_VALUE = 0;
    /**
     * <code>SC_PRIMARY = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int SC_PRIMARY_VALUE = 1;
    /**
     * <code>SC_SECONDARY = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int SC_SECONDARY_VALUE = 2;
    /**
     * <code>SC_RFU_01 = 3;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int SC_RFU_01_VALUE = 3;
    /**
     * <code>SC_RFU_02 = 4;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int SC_RFU_02_VALUE = 4;
    /**
     * <code>SC_RFU_03 = 5;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int SC_RFU_03_VALUE = 5;
    /**
     * <code>SC_RFU_04 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int SC_RFU_04_VALUE = 6;
    /**
     * <code>SC_RFU_05 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int SC_RFU_05_VALUE = 7;


    public final int getNumber() { return value; }

    public static SimCard valueOf(int value) {
      switch (value) {
        case 0: return SC_NONE;
        case 1: return SC_PRIMARY;
        case 2: return SC_SECONDARY;
        case 3: return SC_RFU_01;
        case 4: return SC_RFU_02;
        case 5: return SC_RFU_03;
        case 6: return SC_RFU_04;
        case 7: return SC_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SimCard>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SimCard>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SimCard>() {
            public SimCard findValueByNumber(int number) {
              return SimCard.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbReport.getDescriptor().getEnumTypes().get(8);
    }

    private static final SimCard[] VALUES = values();

    public static SimCard valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SimCard(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.SimCard)
  }

  /**
   * Protobuf enum {@code maxpb.BatteryState}
   */
  public enum BatteryState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BATT_CHARGING = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    BATT_CHARGING(0, 0),
    /**
     * <code>BATT_COMPLETE = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    BATT_COMPLETE(1, 1),
    /**
     * <code>BATT_FAULT = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    BATT_FAULT(2, 2),
    /**
     * <code>BATT_DISCHARGING = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    BATT_DISCHARGING(3, 3),
    /**
     * <code>BATT_MISSING = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    BATT_MISSING(4, 4),
    /**
     * <code>BATT_RFU_01 = 5;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    BATT_RFU_01(5, 5),
    /**
     * <code>BATT_RFU_02 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    BATT_RFU_02(6, 6),
    /**
     * <code>BATT_RFU_03 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    BATT_RFU_03(7, 7),
    /**
     * <code>BATT_RFU_04 = 8;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    BATT_RFU_04(8, 8),
    /**
     * <code>BATT_RFU_05 = 9;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    BATT_RFU_05(9, 9),
    ;

    /**
     * <code>BATT_CHARGING = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int BATT_CHARGING_VALUE = 0;
    /**
     * <code>BATT_COMPLETE = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int BATT_COMPLETE_VALUE = 1;
    /**
     * <code>BATT_FAULT = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int BATT_FAULT_VALUE = 2;
    /**
     * <code>BATT_DISCHARGING = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int BATT_DISCHARGING_VALUE = 3;
    /**
     * <code>BATT_MISSING = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int BATT_MISSING_VALUE = 4;
    /**
     * <code>BATT_RFU_01 = 5;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int BATT_RFU_01_VALUE = 5;
    /**
     * <code>BATT_RFU_02 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int BATT_RFU_02_VALUE = 6;
    /**
     * <code>BATT_RFU_03 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int BATT_RFU_03_VALUE = 7;
    /**
     * <code>BATT_RFU_04 = 8;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int BATT_RFU_04_VALUE = 8;
    /**
     * <code>BATT_RFU_05 = 9;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int BATT_RFU_05_VALUE = 9;


    public final int getNumber() { return value; }

    public static BatteryState valueOf(int value) {
      switch (value) {
        case 0: return BATT_CHARGING;
        case 1: return BATT_COMPLETE;
        case 2: return BATT_FAULT;
        case 3: return BATT_DISCHARGING;
        case 4: return BATT_MISSING;
        case 5: return BATT_RFU_01;
        case 6: return BATT_RFU_02;
        case 7: return BATT_RFU_03;
        case 8: return BATT_RFU_04;
        case 9: return BATT_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BatteryState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<BatteryState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BatteryState>() {
            public BatteryState findValueByNumber(int number) {
              return BatteryState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbReport.getDescriptor().getEnumTypes().get(9);
    }

    private static final BatteryState[] VALUES = values();

    public static BatteryState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private BatteryState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.BatteryState)
  }

  /**
   * Protobuf enum {@code maxpb.Registration}
   */
  public enum Registration
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>REG_NOT_REGISTERED = 0;</code>
     *
     * <pre>
     *&#47; Modem is not currently searching a new operator to register SupportedBy: MXT160, MXT162
     * </pre>
     */
    REG_NOT_REGISTERED(0, 0),
    /**
     * <code>REG_REGISTERED = 1;</code>
     *
     * <pre>
     *&#47; Home network SupportedBy: MXT160, MXT162
     * </pre>
     */
    REG_REGISTERED(1, 1),
    /**
     * <code>REG_SEARCHING = 2;</code>
     *
     * <pre>
     *&#47; Not registered, but modem is currently searching a new operator to register SupportedBy: 
     * </pre>
     */
    REG_SEARCHING(2, 2),
    /**
     * <code>REG_DENIED = 3;</code>
     *
     * <pre>
     *&#47; Registration denied SupportedBy: 
     * </pre>
     */
    REG_DENIED(3, 3),
    /**
     * <code>REG_UNKNOWN = 4;</code>
     *
     * <pre>
     *&#47; Out of GERAN/UTRAN/E-UTRAN coverage SupportedBy: 
     * </pre>
     */
    REG_UNKNOWN(4, 4),
    /**
     * <code>REG_ROAMING = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    REG_ROAMING(5, 5),
    /**
     * <code>REG_SMS_ONLY = 6;</code>
     *
     * <pre>
     *&#47; Registered for "SMS only", home network (applicable only when indicates E-UTRAN) SupportedBy: 
     * </pre>
     */
    REG_SMS_ONLY(6, 6),
    /**
     * <code>REG_SMS_ONLY_ROAMING = 7;</code>
     *
     * <pre>
     *&#47; Registered for "SMS only", roaming (applicable only when indicates E-UTRAN) SupportedBy: 
     * </pre>
     */
    REG_SMS_ONLY_ROAMING(7, 7),
    /**
     * <code>REG_EMERGENCY = 8;</code>
     *
     * <pre>
     *&#47; Attached for emergency bearer services only SupportedBy: 
     * </pre>
     */
    REG_EMERGENCY(8, 8),
    /**
     * <code>REG_CSFB = 9;</code>
     *
     * <pre>
     *&#47; Registered for "CSFB not preferred", home network (applicable only when indicates E-UTRAN) SupportedBy: 
     * </pre>
     */
    REG_CSFB(9, 9),
    /**
     * <code>REG_CSFB_ROAMING = 10;</code>
     *
     * <pre>
     *&#47; Registered for "CSFB not preferred", roaming (applicable only when indicates E-UTRAN) SupportedBy: 
     * </pre>
     */
    REG_CSFB_ROAMING(10, 10),
    /**
     * <code>REG_RFU_01 = 11;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    REG_RFU_01(11, 11),
    /**
     * <code>REG_RFU_02 = 12;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    REG_RFU_02(12, 12),
    /**
     * <code>REG_RFU_03 = 13;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    REG_RFU_03(13, 13),
    /**
     * <code>REG_RFU_04 = 14;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    REG_RFU_04(14, 14),
    /**
     * <code>REG_RFU_05 = 15;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    REG_RFU_05(15, 15),
    ;

    /**
     * <code>REG_NOT_REGISTERED = 0;</code>
     *
     * <pre>
     *&#47; Modem is not currently searching a new operator to register SupportedBy: MXT160, MXT162
     * </pre>
     */
    public static final int REG_NOT_REGISTERED_VALUE = 0;
    /**
     * <code>REG_REGISTERED = 1;</code>
     *
     * <pre>
     *&#47; Home network SupportedBy: MXT160, MXT162
     * </pre>
     */
    public static final int REG_REGISTERED_VALUE = 1;
    /**
     * <code>REG_SEARCHING = 2;</code>
     *
     * <pre>
     *&#47; Not registered, but modem is currently searching a new operator to register SupportedBy: 
     * </pre>
     */
    public static final int REG_SEARCHING_VALUE = 2;
    /**
     * <code>REG_DENIED = 3;</code>
     *
     * <pre>
     *&#47; Registration denied SupportedBy: 
     * </pre>
     */
    public static final int REG_DENIED_VALUE = 3;
    /**
     * <code>REG_UNKNOWN = 4;</code>
     *
     * <pre>
     *&#47; Out of GERAN/UTRAN/E-UTRAN coverage SupportedBy: 
     * </pre>
     */
    public static final int REG_UNKNOWN_VALUE = 4;
    /**
     * <code>REG_ROAMING = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int REG_ROAMING_VALUE = 5;
    /**
     * <code>REG_SMS_ONLY = 6;</code>
     *
     * <pre>
     *&#47; Registered for "SMS only", home network (applicable only when indicates E-UTRAN) SupportedBy: 
     * </pre>
     */
    public static final int REG_SMS_ONLY_VALUE = 6;
    /**
     * <code>REG_SMS_ONLY_ROAMING = 7;</code>
     *
     * <pre>
     *&#47; Registered for "SMS only", roaming (applicable only when indicates E-UTRAN) SupportedBy: 
     * </pre>
     */
    public static final int REG_SMS_ONLY_ROAMING_VALUE = 7;
    /**
     * <code>REG_EMERGENCY = 8;</code>
     *
     * <pre>
     *&#47; Attached for emergency bearer services only SupportedBy: 
     * </pre>
     */
    public static final int REG_EMERGENCY_VALUE = 8;
    /**
     * <code>REG_CSFB = 9;</code>
     *
     * <pre>
     *&#47; Registered for "CSFB not preferred", home network (applicable only when indicates E-UTRAN) SupportedBy: 
     * </pre>
     */
    public static final int REG_CSFB_VALUE = 9;
    /**
     * <code>REG_CSFB_ROAMING = 10;</code>
     *
     * <pre>
     *&#47; Registered for "CSFB not preferred", roaming (applicable only when indicates E-UTRAN) SupportedBy: 
     * </pre>
     */
    public static final int REG_CSFB_ROAMING_VALUE = 10;
    /**
     * <code>REG_RFU_01 = 11;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int REG_RFU_01_VALUE = 11;
    /**
     * <code>REG_RFU_02 = 12;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int REG_RFU_02_VALUE = 12;
    /**
     * <code>REG_RFU_03 = 13;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int REG_RFU_03_VALUE = 13;
    /**
     * <code>REG_RFU_04 = 14;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int REG_RFU_04_VALUE = 14;
    /**
     * <code>REG_RFU_05 = 15;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int REG_RFU_05_VALUE = 15;


    public final int getNumber() { return value; }

    public static Registration valueOf(int value) {
      switch (value) {
        case 0: return REG_NOT_REGISTERED;
        case 1: return REG_REGISTERED;
        case 2: return REG_SEARCHING;
        case 3: return REG_DENIED;
        case 4: return REG_UNKNOWN;
        case 5: return REG_ROAMING;
        case 6: return REG_SMS_ONLY;
        case 7: return REG_SMS_ONLY_ROAMING;
        case 8: return REG_EMERGENCY;
        case 9: return REG_CSFB;
        case 10: return REG_CSFB_ROAMING;
        case 11: return REG_RFU_01;
        case 12: return REG_RFU_02;
        case 13: return REG_RFU_03;
        case 14: return REG_RFU_04;
        case 15: return REG_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Registration>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Registration>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Registration>() {
            public Registration findValueByNumber(int number) {
              return Registration.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbReport.getDescriptor().getEnumTypes().get(10);
    }

    private static final Registration[] VALUES = values();

    public static Registration valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Registration(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.Registration)
  }

  /**
   * Protobuf enum {@code maxpb.AlarmState}
   */
  public enum AlarmState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ALM_ST_DEACTIVATED = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    ALM_ST_DEACTIVATED(0, 0),
    /**
     * <code>ALM_ST_ACTIVATE_IN_PROCESS = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    ALM_ST_ACTIVATE_IN_PROCESS(1, 1),
    /**
     * <code>ALM_ST_ACTIVATED = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    ALM_ST_ACTIVATED(2, 2),
    /**
     * <code>ALM_ST_ALARM_IN_PROCESS = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    ALM_ST_ALARM_IN_PROCESS(3, 3),
    /**
     * <code>ALM_ST_ALARMED = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    ALM_ST_ALARMED(4, 4),
    /**
     * <code>ALM_ST_PARTIAL_ACTIVATED = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    ALM_ST_PARTIAL_ACTIVATED(5, 5),
    /**
     * <code>ALM_RFU_01 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    ALM_RFU_01(6, 6),
    /**
     * <code>ALM_RFU_02 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    ALM_RFU_02(7, 7),
    /**
     * <code>ALM_RFU_03 = 8;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    ALM_RFU_03(8, 8),
    /**
     * <code>ALM_RFU_04 = 9;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    ALM_RFU_04(9, 9),
    /**
     * <code>ALM_RFU_05 = 10;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    ALM_RFU_05(10, 10),
    ;

    /**
     * <code>ALM_ST_DEACTIVATED = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public static final int ALM_ST_DEACTIVATED_VALUE = 0;
    /**
     * <code>ALM_ST_ACTIVATE_IN_PROCESS = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int ALM_ST_ACTIVATE_IN_PROCESS_VALUE = 1;
    /**
     * <code>ALM_ST_ACTIVATED = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public static final int ALM_ST_ACTIVATED_VALUE = 2;
    /**
     * <code>ALM_ST_ALARM_IN_PROCESS = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int ALM_ST_ALARM_IN_PROCESS_VALUE = 3;
    /**
     * <code>ALM_ST_ALARMED = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public static final int ALM_ST_ALARMED_VALUE = 4;
    /**
     * <code>ALM_ST_PARTIAL_ACTIVATED = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int ALM_ST_PARTIAL_ACTIVATED_VALUE = 5;
    /**
     * <code>ALM_RFU_01 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int ALM_RFU_01_VALUE = 6;
    /**
     * <code>ALM_RFU_02 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int ALM_RFU_02_VALUE = 7;
    /**
     * <code>ALM_RFU_03 = 8;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int ALM_RFU_03_VALUE = 8;
    /**
     * <code>ALM_RFU_04 = 9;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int ALM_RFU_04_VALUE = 9;
    /**
     * <code>ALM_RFU_05 = 10;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int ALM_RFU_05_VALUE = 10;


    public final int getNumber() { return value; }

    public static AlarmState valueOf(int value) {
      switch (value) {
        case 0: return ALM_ST_DEACTIVATED;
        case 1: return ALM_ST_ACTIVATE_IN_PROCESS;
        case 2: return ALM_ST_ACTIVATED;
        case 3: return ALM_ST_ALARM_IN_PROCESS;
        case 4: return ALM_ST_ALARMED;
        case 5: return ALM_ST_PARTIAL_ACTIVATED;
        case 6: return ALM_RFU_01;
        case 7: return ALM_RFU_02;
        case 8: return ALM_RFU_03;
        case 9: return ALM_RFU_04;
        case 10: return ALM_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AlarmState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<AlarmState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AlarmState>() {
            public AlarmState findValueByNumber(int number) {
              return AlarmState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbReport.getDescriptor().getEnumTypes().get(11);
    }

    private static final AlarmState[] VALUES = values();

    public static AlarmState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private AlarmState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.AlarmState)
  }

  /**
   * Protobuf enum {@code maxpb.EmergencyState}
   */
  public enum EmergencyState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EME_ST_DEACTIVATED = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    EME_ST_DEACTIVATED(0, 0),
    /**
     * <code>EME_ST_ACTIVATED = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    EME_ST_ACTIVATED(1, 1),
    /**
     * <code>EME_ST_FORCED = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    EME_ST_FORCED(2, 2),
    /**
     * <code>EME_ST_RFU_01 = 3;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    EME_ST_RFU_01(3, 3),
    /**
     * <code>EME_ST_RFU_02 = 4;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    EME_ST_RFU_02(4, 4),
    /**
     * <code>EME_ST_RFU_03 = 5;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    EME_ST_RFU_03(5, 5),
    /**
     * <code>EME_ST_RFU_04 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    EME_ST_RFU_04(6, 6),
    /**
     * <code>EME_ST_RFU_05 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    EME_ST_RFU_05(7, 7),
    ;

    /**
     * <code>EME_ST_DEACTIVATED = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int EME_ST_DEACTIVATED_VALUE = 0;
    /**
     * <code>EME_ST_ACTIVATED = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int EME_ST_ACTIVATED_VALUE = 1;
    /**
     * <code>EME_ST_FORCED = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40
     * </pre>
     */
    public static final int EME_ST_FORCED_VALUE = 2;
    /**
     * <code>EME_ST_RFU_01 = 3;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int EME_ST_RFU_01_VALUE = 3;
    /**
     * <code>EME_ST_RFU_02 = 4;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int EME_ST_RFU_02_VALUE = 4;
    /**
     * <code>EME_ST_RFU_03 = 5;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int EME_ST_RFU_03_VALUE = 5;
    /**
     * <code>EME_ST_RFU_04 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int EME_ST_RFU_04_VALUE = 6;
    /**
     * <code>EME_ST_RFU_05 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int EME_ST_RFU_05_VALUE = 7;


    public final int getNumber() { return value; }

    public static EmergencyState valueOf(int value) {
      switch (value) {
        case 0: return EME_ST_DEACTIVATED;
        case 1: return EME_ST_ACTIVATED;
        case 2: return EME_ST_FORCED;
        case 3: return EME_ST_RFU_01;
        case 4: return EME_ST_RFU_02;
        case 5: return EME_ST_RFU_03;
        case 6: return EME_ST_RFU_04;
        case 7: return EME_ST_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EmergencyState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EmergencyState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EmergencyState>() {
            public EmergencyState findValueByNumber(int number) {
              return EmergencyState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbReport.getDescriptor().getEnumTypes().get(12);
    }

    private static final EmergencyState[] VALUES = values();

    public static EmergencyState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EmergencyState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.EmergencyState)
  }

  /**
   * Protobuf enum {@code maxpb.LoginType}
   */
  public enum LoginType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LT_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    LT_NONE(0, 0),
    /**
     * <code>LT_ZIGBEE = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    LT_ZIGBEE(1, 1),
    /**
     * <code>LT_RFID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    LT_RFID(2, 2),
    /**
     * <code>LT_IBUTTON = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    LT_IBUTTON(3, 3),
    /**
     * <code>LT_BLUETOOTH = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    LT_BLUETOOTH(4, 4),
    /**
     * <code>LT_DATA_TERMINAL = 5;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    LT_DATA_TERMINAL(5, 5),
    /**
     * <code>LT_RFU_01 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    LT_RFU_01(6, 6),
    /**
     * <code>LT_RFU_02 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    LT_RFU_02(7, 7),
    /**
     * <code>LT_RFU_03 = 8;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    LT_RFU_03(8, 8),
    /**
     * <code>LT_RFU_04 = 9;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    LT_RFU_04(9, 9),
    /**
     * <code>LT_RFU_05 = 10;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    LT_RFU_05(10, 10),
    ;

    /**
     * <code>LT_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public static final int LT_NONE_VALUE = 0;
    /**
     * <code>LT_ZIGBEE = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int LT_ZIGBEE_VALUE = 1;
    /**
     * <code>LT_RFID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public static final int LT_RFID_VALUE = 2;
    /**
     * <code>LT_IBUTTON = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public static final int LT_IBUTTON_VALUE = 3;
    /**
     * <code>LT_BLUETOOTH = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public static final int LT_BLUETOOTH_VALUE = 4;
    /**
     * <code>LT_DATA_TERMINAL = 5;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    public static final int LT_DATA_TERMINAL_VALUE = 5;
    /**
     * <code>LT_RFU_01 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int LT_RFU_01_VALUE = 6;
    /**
     * <code>LT_RFU_02 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int LT_RFU_02_VALUE = 7;
    /**
     * <code>LT_RFU_03 = 8;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int LT_RFU_03_VALUE = 8;
    /**
     * <code>LT_RFU_04 = 9;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int LT_RFU_04_VALUE = 9;
    /**
     * <code>LT_RFU_05 = 10;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int LT_RFU_05_VALUE = 10;


    public final int getNumber() { return value; }

    public static LoginType valueOf(int value) {
      switch (value) {
        case 0: return LT_NONE;
        case 1: return LT_ZIGBEE;
        case 2: return LT_RFID;
        case 3: return LT_IBUTTON;
        case 4: return LT_BLUETOOTH;
        case 5: return LT_DATA_TERMINAL;
        case 6: return LT_RFU_01;
        case 7: return LT_RFU_02;
        case 8: return LT_RFU_03;
        case 9: return LT_RFU_04;
        case 10: return LT_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LoginType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LoginType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LoginType>() {
            public LoginType findValueByNumber(int number) {
              return LoginType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbReport.getDescriptor().getEnumTypes().get(13);
    }

    private static final LoginType[] VALUES = values();

    public static LoginType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private LoginType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.LoginType)
  }

  /**
   * Protobuf enum {@code maxpb.LoginEvent}
   */
  public enum LoginEvent
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LE_LOGIN = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    LE_LOGIN(0, 0),
    /**
     * <code>LE_LOGOFF = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    LE_LOGOFF(1, 1),
    /**
     * <code>LE_LOGOFF_IGNITION = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    LE_LOGOFF_IGNITION(2, 2),
    /**
     * <code>LE_PRESENCE = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    LE_PRESENCE(3, 3),
    /**
     * <code>LE_NOT_FOUND = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    LE_NOT_FOUND(4, 4),
    /**
     * <code>LE_RFU_01 = 5;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    LE_RFU_01(5, 5),
    /**
     * <code>LE_RFU_02 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    LE_RFU_02(6, 6),
    /**
     * <code>LE_RFU_03 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    LE_RFU_03(7, 7),
    /**
     * <code>LE_RFU_04 = 8;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    LE_RFU_04(8, 8),
    /**
     * <code>LE_RFU_05 = 9;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    LE_RFU_05(9, 9),
    ;

    /**
     * <code>LE_LOGIN = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public static final int LE_LOGIN_VALUE = 0;
    /**
     * <code>LE_LOGOFF = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public static final int LE_LOGOFF_VALUE = 1;
    /**
     * <code>LE_LOGOFF_IGNITION = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public static final int LE_LOGOFF_IGNITION_VALUE = 2;
    /**
     * <code>LE_PRESENCE = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public static final int LE_PRESENCE_VALUE = 3;
    /**
     * <code>LE_NOT_FOUND = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public static final int LE_NOT_FOUND_VALUE = 4;
    /**
     * <code>LE_RFU_01 = 5;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int LE_RFU_01_VALUE = 5;
    /**
     * <code>LE_RFU_02 = 6;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int LE_RFU_02_VALUE = 6;
    /**
     * <code>LE_RFU_03 = 7;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int LE_RFU_03_VALUE = 7;
    /**
     * <code>LE_RFU_04 = 8;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int LE_RFU_04_VALUE = 8;
    /**
     * <code>LE_RFU_05 = 9;</code>
     *
     * <pre>
     *&#47;&#64;excluded SupportedBy:
     * </pre>
     */
    public static final int LE_RFU_05_VALUE = 9;


    public final int getNumber() { return value; }

    public static LoginEvent valueOf(int value) {
      switch (value) {
        case 0: return LE_LOGIN;
        case 1: return LE_LOGOFF;
        case 2: return LE_LOGOFF_IGNITION;
        case 3: return LE_PRESENCE;
        case 4: return LE_NOT_FOUND;
        case 5: return LE_RFU_01;
        case 6: return LE_RFU_02;
        case 7: return LE_RFU_03;
        case 8: return LE_RFU_04;
        case 9: return LE_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LoginEvent>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LoginEvent>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LoginEvent>() {
            public LoginEvent findValueByNumber(int number) {
              return LoginEvent.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbReport.getDescriptor().getEnumTypes().get(14);
    }

    private static final LoginEvent[] VALUES = values();

    public static LoginEvent valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private LoginEvent(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.LoginEvent)
  }

  public interface DeviceEventsTransmissionMaskOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.DeviceEventsTransmissionMask)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 configChanged = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasConfigChanged();
    /**
     * <code>optional uint32 configChanged = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getConfigChanged();

    /**
     * <code>optional uint32 gpsFixed = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasGpsFixed();
    /**
     * <code>optional uint32 gpsFixed = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    int getGpsFixed();

    /**
     * <code>optional uint32 ignition = 3;</code>
     *
     * <pre>
     *&#47; On, Off, Calibrated and Mode Changed SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasIgnition();
    /**
     * <code>optional uint32 ignition = 3;</code>
     *
     * <pre>
     *&#47; On, Off, Calibrated and Mode Changed SupportedBy: MXT160, MXT162
     * </pre>
     */
    int getIgnition();

    /**
     * <code>optional uint32 panic = 4;</code>
     *
     * <pre>
     *&#47; Activated and Deactivated SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasPanic();
    /**
     * <code>optional uint32 panic = 4;</code>
     *
     * <pre>
     *&#47; Activated and Deactivated SupportedBy: MXT160, MXT162
     * </pre>
     */
    int getPanic();

    /**
     * <code>optional uint32 externalPower = 5;</code>
     *
     * <pre>
     *&#47; Ok and Fail SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasExternalPower();
    /**
     * <code>optional uint32 externalPower = 5;</code>
     *
     * <pre>
     *&#47; Ok and Fail SupportedBy: MXT160, MXT162
     * </pre>
     */
    int getExternalPower();

    /**
     * <code>optional uint32 gpsAntenna = 6;</code>
     *
     * <pre>
     *&#47; Ok and Fail SupportedBy: 
     * </pre>
     */
    boolean hasGpsAntenna();
    /**
     * <code>optional uint32 gpsAntenna = 6;</code>
     *
     * <pre>
     *&#47; Ok and Fail SupportedBy: 
     * </pre>
     */
    int getGpsAntenna();

    /**
     * <code>optional uint32 battery = 7;</code>
     *
     * <pre>
     *&#47; Ok and Fail SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasBattery();
    /**
     * <code>optional uint32 battery = 7;</code>
     *
     * <pre>
     *&#47; Ok and Fail SupportedBy: MXT160, MXT162
     * </pre>
     */
    int getBattery();

    /**
     * <code>optional uint32 jamming = 8;</code>
     *
     * <pre>
     *&#47; Start and End SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasJamming();
    /**
     * <code>optional uint32 jamming = 8;</code>
     *
     * <pre>
     *&#47; Start and End SupportedBy: MXT160, MXT162
     * </pre>
     */
    int getJamming();

    /**
     * <code>optional uint32 enterDeepSleep = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasEnterDeepSleep();
    /**
     * <code>optional uint32 enterDeepSleep = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    int getEnterDeepSleep();

    /**
     * <code>optional uint32 lbsInfo = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasLbsInfo();
    /**
     * <code>optional uint32 lbsInfo = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    int getLbsInfo();

    /**
     * <code>optional uint32 alarm = 11;</code>
     *
     * <pre>
     *&#47; Activated and Deactivated SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasAlarm();
    /**
     * <code>optional uint32 alarm = 11;</code>
     *
     * <pre>
     *&#47; Activated and Deactivated SupportedBy: MXT160, MXT162
     * </pre>
     */
    int getAlarm();

    /**
     * <code>optional uint32 reconstruction = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasReconstruction();
    /**
     * <code>optional uint32 reconstruction = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getReconstruction();

    /**
     * <code>optional uint32 emergency = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasEmergency();
    /**
     * <code>optional uint32 emergency = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getEmergency();

    /**
     * <code>optional uint32 input1 = 50;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasInput1();
    /**
     * <code>optional uint32 input1 = 50;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    int getInput1();

    /**
     * <code>optional uint32 input2 = 51;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160
     * </pre>
     */
    boolean hasInput2();
    /**
     * <code>optional uint32 input2 = 51;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160
     * </pre>
     */
    int getInput2();

    /**
     * <code>optional uint32 input3 = 52;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160
     * </pre>
     */
    boolean hasInput3();
    /**
     * <code>optional uint32 input3 = 52;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160
     * </pre>
     */
    int getInput3();

    /**
     * <code>optional uint32 input4 = 53;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasInput4();
    /**
     * <code>optional uint32 input4 = 53;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getInput4();

    /**
     * <code>optional uint32 input5 = 54;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasInput5();
    /**
     * <code>optional uint32 input5 = 54;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getInput5();

    /**
     * <code>optional uint32 input6 = 55;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasInput6();
    /**
     * <code>optional uint32 input6 = 55;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getInput6();

    /**
     * <code>optional uint32 input7 = 56;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasInput7();
    /**
     * <code>optional uint32 input7 = 56;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getInput7();

    /**
     * <code>optional uint32 input8 = 57;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasInput8();
    /**
     * <code>optional uint32 input8 = 57;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getInput8();

    /**
     * <code>optional uint32 input9 = 58;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasInput9();
    /**
     * <code>optional uint32 input9 = 58;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getInput9();

    /**
     * <code>optional uint32 input10 = 59;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasInput10();
    /**
     * <code>optional uint32 input10 = 59;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getInput10();

    /**
     * <code>optional uint32 input11 = 60;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasInput11();
    /**
     * <code>optional uint32 input11 = 60;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getInput11();

    /**
     * <code>optional uint32 input12 = 61;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasInput12();
    /**
     * <code>optional uint32 input12 = 61;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getInput12();

    /**
     * <code>optional uint32 input13 = 62;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasInput13();
    /**
     * <code>optional uint32 input13 = 62;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getInput13();

    /**
     * <code>optional uint32 input14 = 63;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasInput14();
    /**
     * <code>optional uint32 input14 = 63;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getInput14();

    /**
     * <code>optional uint32 input15 = 64;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasInput15();
    /**
     * <code>optional uint32 input15 = 64;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getInput15();

    /**
     * <code>optional uint32 input16 = 65;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasInput16();
    /**
     * <code>optional uint32 input16 = 65;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getInput16();

    /**
     * <code>optional uint32 output1 = 100;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasOutput1();
    /**
     * <code>optional uint32 output1 = 100;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    int getOutput1();

    /**
     * <code>optional uint32 output2 = 101;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasOutput2();
    /**
     * <code>optional uint32 output2 = 101;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    int getOutput2();

    /**
     * <code>optional uint32 output3 = 102;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasOutput3();
    /**
     * <code>optional uint32 output3 = 102;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getOutput3();

    /**
     * <code>optional uint32 output4 = 103;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasOutput4();
    /**
     * <code>optional uint32 output4 = 103;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getOutput4();

    /**
     * <code>optional uint32 output5 = 104;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasOutput5();
    /**
     * <code>optional uint32 output5 = 104;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getOutput5();

    /**
     * <code>optional uint32 output6 = 105;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasOutput6();
    /**
     * <code>optional uint32 output6 = 105;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getOutput6();

    /**
     * <code>optional uint32 output7 = 106;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasOutput7();
    /**
     * <code>optional uint32 output7 = 106;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getOutput7();

    /**
     * <code>optional uint32 output8 = 107;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasOutput8();
    /**
     * <code>optional uint32 output8 = 107;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getOutput8();
  }
  /**
   * Protobuf type {@code maxpb.DeviceEventsTransmissionMask}
   *
   * <pre>
   *&#47; The field value uses the ReportEvents enum as bitmask
   * </pre>
   */
  public static final class DeviceEventsTransmissionMask extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.DeviceEventsTransmissionMask)
      DeviceEventsTransmissionMaskOrBuilder {
    // Use DeviceEventsTransmissionMask.newBuilder() to construct.
    private DeviceEventsTransmissionMask(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeviceEventsTransmissionMask(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeviceEventsTransmissionMask defaultInstance;
    public static DeviceEventsTransmissionMask getDefaultInstance() {
      return defaultInstance;
    }

    public DeviceEventsTransmissionMask getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeviceEventsTransmissionMask(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              configChanged_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              gpsFixed_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ignition_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              panic_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              externalPower_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              gpsAntenna_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              battery_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              jamming_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              enterDeepSleep_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              lbsInfo_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              alarm_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              reconstruction_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              emergency_ = input.readUInt32();
              break;
            }
            case 400: {
              bitField0_ |= 0x00002000;
              input1_ = input.readUInt32();
              break;
            }
            case 408: {
              bitField0_ |= 0x00004000;
              input2_ = input.readUInt32();
              break;
            }
            case 416: {
              bitField0_ |= 0x00008000;
              input3_ = input.readUInt32();
              break;
            }
            case 424: {
              bitField0_ |= 0x00010000;
              input4_ = input.readUInt32();
              break;
            }
            case 432: {
              bitField0_ |= 0x00020000;
              input5_ = input.readUInt32();
              break;
            }
            case 440: {
              bitField0_ |= 0x00040000;
              input6_ = input.readUInt32();
              break;
            }
            case 448: {
              bitField0_ |= 0x00080000;
              input7_ = input.readUInt32();
              break;
            }
            case 456: {
              bitField0_ |= 0x00100000;
              input8_ = input.readUInt32();
              break;
            }
            case 464: {
              bitField0_ |= 0x00200000;
              input9_ = input.readUInt32();
              break;
            }
            case 472: {
              bitField0_ |= 0x00400000;
              input10_ = input.readUInt32();
              break;
            }
            case 480: {
              bitField0_ |= 0x00800000;
              input11_ = input.readUInt32();
              break;
            }
            case 488: {
              bitField0_ |= 0x01000000;
              input12_ = input.readUInt32();
              break;
            }
            case 496: {
              bitField0_ |= 0x02000000;
              input13_ = input.readUInt32();
              break;
            }
            case 504: {
              bitField0_ |= 0x04000000;
              input14_ = input.readUInt32();
              break;
            }
            case 512: {
              bitField0_ |= 0x08000000;
              input15_ = input.readUInt32();
              break;
            }
            case 520: {
              bitField0_ |= 0x10000000;
              input16_ = input.readUInt32();
              break;
            }
            case 800: {
              bitField0_ |= 0x20000000;
              output1_ = input.readUInt32();
              break;
            }
            case 808: {
              bitField0_ |= 0x40000000;
              output2_ = input.readUInt32();
              break;
            }
            case 816: {
              bitField0_ |= 0x80000000;
              output3_ = input.readUInt32();
              break;
            }
            case 824: {
              bitField1_ |= 0x00000001;
              output4_ = input.readUInt32();
              break;
            }
            case 832: {
              bitField1_ |= 0x00000002;
              output5_ = input.readUInt32();
              break;
            }
            case 840: {
              bitField1_ |= 0x00000004;
              output6_ = input.readUInt32();
              break;
            }
            case 848: {
              bitField1_ |= 0x00000008;
              output7_ = input.readUInt32();
              break;
            }
            case 856: {
              bitField1_ |= 0x00000010;
              output8_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbReport.internal_static_maxpb_DeviceEventsTransmissionMask_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbReport.internal_static_maxpb_DeviceEventsTransmissionMask_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbReport.DeviceEventsTransmissionMask.class, maxpb.MaxpbReport.DeviceEventsTransmissionMask.Builder.class);
    }

    public static com.google.protobuf.Parser<DeviceEventsTransmissionMask> PARSER =
        new com.google.protobuf.AbstractParser<DeviceEventsTransmissionMask>() {
      public DeviceEventsTransmissionMask parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeviceEventsTransmissionMask(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceEventsTransmissionMask> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    public static final int CONFIGCHANGED_FIELD_NUMBER = 1;
    private int configChanged_;
    /**
     * <code>optional uint32 configChanged = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasConfigChanged() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 configChanged = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getConfigChanged() {
      return configChanged_;
    }

    public static final int GPSFIXED_FIELD_NUMBER = 2;
    private int gpsFixed_;
    /**
     * <code>optional uint32 gpsFixed = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasGpsFixed() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 gpsFixed = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public int getGpsFixed() {
      return gpsFixed_;
    }

    public static final int IGNITION_FIELD_NUMBER = 3;
    private int ignition_;
    /**
     * <code>optional uint32 ignition = 3;</code>
     *
     * <pre>
     *&#47; On, Off, Calibrated and Mode Changed SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasIgnition() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 ignition = 3;</code>
     *
     * <pre>
     *&#47; On, Off, Calibrated and Mode Changed SupportedBy: MXT160, MXT162
     * </pre>
     */
    public int getIgnition() {
      return ignition_;
    }

    public static final int PANIC_FIELD_NUMBER = 4;
    private int panic_;
    /**
     * <code>optional uint32 panic = 4;</code>
     *
     * <pre>
     *&#47; Activated and Deactivated SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasPanic() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 panic = 4;</code>
     *
     * <pre>
     *&#47; Activated and Deactivated SupportedBy: MXT160, MXT162
     * </pre>
     */
    public int getPanic() {
      return panic_;
    }

    public static final int EXTERNALPOWER_FIELD_NUMBER = 5;
    private int externalPower_;
    /**
     * <code>optional uint32 externalPower = 5;</code>
     *
     * <pre>
     *&#47; Ok and Fail SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasExternalPower() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 externalPower = 5;</code>
     *
     * <pre>
     *&#47; Ok and Fail SupportedBy: MXT160, MXT162
     * </pre>
     */
    public int getExternalPower() {
      return externalPower_;
    }

    public static final int GPSANTENNA_FIELD_NUMBER = 6;
    private int gpsAntenna_;
    /**
     * <code>optional uint32 gpsAntenna = 6;</code>
     *
     * <pre>
     *&#47; Ok and Fail SupportedBy: 
     * </pre>
     */
    public boolean hasGpsAntenna() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 gpsAntenna = 6;</code>
     *
     * <pre>
     *&#47; Ok and Fail SupportedBy: 
     * </pre>
     */
    public int getGpsAntenna() {
      return gpsAntenna_;
    }

    public static final int BATTERY_FIELD_NUMBER = 7;
    private int battery_;
    /**
     * <code>optional uint32 battery = 7;</code>
     *
     * <pre>
     *&#47; Ok and Fail SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasBattery() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 battery = 7;</code>
     *
     * <pre>
     *&#47; Ok and Fail SupportedBy: MXT160, MXT162
     * </pre>
     */
    public int getBattery() {
      return battery_;
    }

    public static final int JAMMING_FIELD_NUMBER = 8;
    private int jamming_;
    /**
     * <code>optional uint32 jamming = 8;</code>
     *
     * <pre>
     *&#47; Start and End SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasJamming() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 jamming = 8;</code>
     *
     * <pre>
     *&#47; Start and End SupportedBy: MXT160, MXT162
     * </pre>
     */
    public int getJamming() {
      return jamming_;
    }

    public static final int ENTERDEEPSLEEP_FIELD_NUMBER = 9;
    private int enterDeepSleep_;
    /**
     * <code>optional uint32 enterDeepSleep = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasEnterDeepSleep() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 enterDeepSleep = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public int getEnterDeepSleep() {
      return enterDeepSleep_;
    }

    public static final int LBSINFO_FIELD_NUMBER = 10;
    private int lbsInfo_;
    /**
     * <code>optional uint32 lbsInfo = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasLbsInfo() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 lbsInfo = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public int getLbsInfo() {
      return lbsInfo_;
    }

    public static final int ALARM_FIELD_NUMBER = 11;
    private int alarm_;
    /**
     * <code>optional uint32 alarm = 11;</code>
     *
     * <pre>
     *&#47; Activated and Deactivated SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasAlarm() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 alarm = 11;</code>
     *
     * <pre>
     *&#47; Activated and Deactivated SupportedBy: MXT160, MXT162
     * </pre>
     */
    public int getAlarm() {
      return alarm_;
    }

    public static final int RECONSTRUCTION_FIELD_NUMBER = 12;
    private int reconstruction_;
    /**
     * <code>optional uint32 reconstruction = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasReconstruction() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 reconstruction = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getReconstruction() {
      return reconstruction_;
    }

    public static final int EMERGENCY_FIELD_NUMBER = 13;
    private int emergency_;
    /**
     * <code>optional uint32 emergency = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasEmergency() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 emergency = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getEmergency() {
      return emergency_;
    }

    public static final int INPUT1_FIELD_NUMBER = 50;
    private int input1_;
    /**
     * <code>optional uint32 input1 = 50;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasInput1() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 input1 = 50;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public int getInput1() {
      return input1_;
    }

    public static final int INPUT2_FIELD_NUMBER = 51;
    private int input2_;
    /**
     * <code>optional uint32 input2 = 51;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160
     * </pre>
     */
    public boolean hasInput2() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint32 input2 = 51;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160
     * </pre>
     */
    public int getInput2() {
      return input2_;
    }

    public static final int INPUT3_FIELD_NUMBER = 52;
    private int input3_;
    /**
     * <code>optional uint32 input3 = 52;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160
     * </pre>
     */
    public boolean hasInput3() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint32 input3 = 52;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160
     * </pre>
     */
    public int getInput3() {
      return input3_;
    }

    public static final int INPUT4_FIELD_NUMBER = 53;
    private int input4_;
    /**
     * <code>optional uint32 input4 = 53;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasInput4() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional uint32 input4 = 53;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getInput4() {
      return input4_;
    }

    public static final int INPUT5_FIELD_NUMBER = 54;
    private int input5_;
    /**
     * <code>optional uint32 input5 = 54;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasInput5() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional uint32 input5 = 54;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getInput5() {
      return input5_;
    }

    public static final int INPUT6_FIELD_NUMBER = 55;
    private int input6_;
    /**
     * <code>optional uint32 input6 = 55;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasInput6() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional uint32 input6 = 55;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getInput6() {
      return input6_;
    }

    public static final int INPUT7_FIELD_NUMBER = 56;
    private int input7_;
    /**
     * <code>optional uint32 input7 = 56;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasInput7() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional uint32 input7 = 56;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getInput7() {
      return input7_;
    }

    public static final int INPUT8_FIELD_NUMBER = 57;
    private int input8_;
    /**
     * <code>optional uint32 input8 = 57;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasInput8() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional uint32 input8 = 57;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getInput8() {
      return input8_;
    }

    public static final int INPUT9_FIELD_NUMBER = 58;
    private int input9_;
    /**
     * <code>optional uint32 input9 = 58;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasInput9() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional uint32 input9 = 58;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getInput9() {
      return input9_;
    }

    public static final int INPUT10_FIELD_NUMBER = 59;
    private int input10_;
    /**
     * <code>optional uint32 input10 = 59;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasInput10() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional uint32 input10 = 59;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getInput10() {
      return input10_;
    }

    public static final int INPUT11_FIELD_NUMBER = 60;
    private int input11_;
    /**
     * <code>optional uint32 input11 = 60;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasInput11() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional uint32 input11 = 60;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getInput11() {
      return input11_;
    }

    public static final int INPUT12_FIELD_NUMBER = 61;
    private int input12_;
    /**
     * <code>optional uint32 input12 = 61;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasInput12() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional uint32 input12 = 61;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getInput12() {
      return input12_;
    }

    public static final int INPUT13_FIELD_NUMBER = 62;
    private int input13_;
    /**
     * <code>optional uint32 input13 = 62;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasInput13() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional uint32 input13 = 62;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getInput13() {
      return input13_;
    }

    public static final int INPUT14_FIELD_NUMBER = 63;
    private int input14_;
    /**
     * <code>optional uint32 input14 = 63;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasInput14() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional uint32 input14 = 63;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getInput14() {
      return input14_;
    }

    public static final int INPUT15_FIELD_NUMBER = 64;
    private int input15_;
    /**
     * <code>optional uint32 input15 = 64;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasInput15() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional uint32 input15 = 64;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getInput15() {
      return input15_;
    }

    public static final int INPUT16_FIELD_NUMBER = 65;
    private int input16_;
    /**
     * <code>optional uint32 input16 = 65;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasInput16() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional uint32 input16 = 65;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getInput16() {
      return input16_;
    }

    public static final int OUTPUT1_FIELD_NUMBER = 100;
    private int output1_;
    /**
     * <code>optional uint32 output1 = 100;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasOutput1() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional uint32 output1 = 100;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public int getOutput1() {
      return output1_;
    }

    public static final int OUTPUT2_FIELD_NUMBER = 101;
    private int output2_;
    /**
     * <code>optional uint32 output2 = 101;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasOutput2() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional uint32 output2 = 101;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public int getOutput2() {
      return output2_;
    }

    public static final int OUTPUT3_FIELD_NUMBER = 102;
    private int output3_;
    /**
     * <code>optional uint32 output3 = 102;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasOutput3() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional uint32 output3 = 102;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getOutput3() {
      return output3_;
    }

    public static final int OUTPUT4_FIELD_NUMBER = 103;
    private int output4_;
    /**
     * <code>optional uint32 output4 = 103;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasOutput4() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 output4 = 103;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getOutput4() {
      return output4_;
    }

    public static final int OUTPUT5_FIELD_NUMBER = 104;
    private int output5_;
    /**
     * <code>optional uint32 output5 = 104;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasOutput5() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 output5 = 104;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getOutput5() {
      return output5_;
    }

    public static final int OUTPUT6_FIELD_NUMBER = 105;
    private int output6_;
    /**
     * <code>optional uint32 output6 = 105;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasOutput6() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 output6 = 105;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getOutput6() {
      return output6_;
    }

    public static final int OUTPUT7_FIELD_NUMBER = 106;
    private int output7_;
    /**
     * <code>optional uint32 output7 = 106;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasOutput7() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 output7 = 106;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getOutput7() {
      return output7_;
    }

    public static final int OUTPUT8_FIELD_NUMBER = 107;
    private int output8_;
    /**
     * <code>optional uint32 output8 = 107;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasOutput8() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 output8 = 107;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getOutput8() {
      return output8_;
    }

    private void initFields() {
      configChanged_ = 0;
      gpsFixed_ = 0;
      ignition_ = 0;
      panic_ = 0;
      externalPower_ = 0;
      gpsAntenna_ = 0;
      battery_ = 0;
      jamming_ = 0;
      enterDeepSleep_ = 0;
      lbsInfo_ = 0;
      alarm_ = 0;
      reconstruction_ = 0;
      emergency_ = 0;
      input1_ = 0;
      input2_ = 0;
      input3_ = 0;
      input4_ = 0;
      input5_ = 0;
      input6_ = 0;
      input7_ = 0;
      input8_ = 0;
      input9_ = 0;
      input10_ = 0;
      input11_ = 0;
      input12_ = 0;
      input13_ = 0;
      input14_ = 0;
      input15_ = 0;
      input16_ = 0;
      output1_ = 0;
      output2_ = 0;
      output3_ = 0;
      output4_ = 0;
      output5_ = 0;
      output6_ = 0;
      output7_ = 0;
      output8_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, configChanged_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, gpsFixed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, ignition_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, panic_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, externalPower_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, gpsAntenna_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, battery_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, jamming_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, enterDeepSleep_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, lbsInfo_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, alarm_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(12, reconstruction_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(13, emergency_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(50, input1_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(51, input2_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(52, input3_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeUInt32(53, input4_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeUInt32(54, input5_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeUInt32(55, input6_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeUInt32(56, input7_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeUInt32(57, input8_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeUInt32(58, input9_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeUInt32(59, input10_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeUInt32(60, input11_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeUInt32(61, input12_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeUInt32(62, input13_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeUInt32(63, input14_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeUInt32(64, input15_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeUInt32(65, input16_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeUInt32(100, output1_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeUInt32(101, output2_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeUInt32(102, output3_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(103, output4_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(104, output5_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(105, output6_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(106, output7_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(107, output8_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, configChanged_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, gpsFixed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, ignition_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, panic_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, externalPower_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, gpsAntenna_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, battery_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, jamming_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, enterDeepSleep_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, lbsInfo_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, alarm_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, reconstruction_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, emergency_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(50, input1_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(51, input2_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(52, input3_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(53, input4_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(54, input5_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(55, input6_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(56, input7_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(57, input8_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(58, input9_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(59, input10_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(60, input11_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(61, input12_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(62, input13_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(63, input14_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(64, input15_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(65, input16_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(100, output1_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(101, output2_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(102, output3_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(103, output4_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(104, output5_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(105, output6_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(106, output7_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(107, output8_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbReport.DeviceEventsTransmissionMask parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.DeviceEventsTransmissionMask parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.DeviceEventsTransmissionMask parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.DeviceEventsTransmissionMask parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.DeviceEventsTransmissionMask parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.DeviceEventsTransmissionMask parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.DeviceEventsTransmissionMask parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbReport.DeviceEventsTransmissionMask parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.DeviceEventsTransmissionMask parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.DeviceEventsTransmissionMask parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbReport.DeviceEventsTransmissionMask prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.DeviceEventsTransmissionMask}
     *
     * <pre>
     *&#47; The field value uses the ReportEvents enum as bitmask
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.DeviceEventsTransmissionMask)
        maxpb.MaxpbReport.DeviceEventsTransmissionMaskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbReport.internal_static_maxpb_DeviceEventsTransmissionMask_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbReport.internal_static_maxpb_DeviceEventsTransmissionMask_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbReport.DeviceEventsTransmissionMask.class, maxpb.MaxpbReport.DeviceEventsTransmissionMask.Builder.class);
      }

      // Construct using maxpb.MaxpbReport.DeviceEventsTransmissionMask.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        configChanged_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        gpsFixed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ignition_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        panic_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        externalPower_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        gpsAntenna_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        battery_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        jamming_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        enterDeepSleep_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        lbsInfo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        alarm_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        reconstruction_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        emergency_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        input1_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        input2_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        input3_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        input4_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        input5_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        input6_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        input7_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        input8_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        input9_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        input10_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        input11_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        input12_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        input13_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        input14_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        input15_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        input16_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        output1_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        output2_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        output3_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        output4_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        output5_ = 0;
        bitField1_ = (bitField1_ & ~0x00000002);
        output6_ = 0;
        bitField1_ = (bitField1_ & ~0x00000004);
        output7_ = 0;
        bitField1_ = (bitField1_ & ~0x00000008);
        output8_ = 0;
        bitField1_ = (bitField1_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbReport.internal_static_maxpb_DeviceEventsTransmissionMask_descriptor;
      }

      public maxpb.MaxpbReport.DeviceEventsTransmissionMask getDefaultInstanceForType() {
        return maxpb.MaxpbReport.DeviceEventsTransmissionMask.getDefaultInstance();
      }

      public maxpb.MaxpbReport.DeviceEventsTransmissionMask build() {
        maxpb.MaxpbReport.DeviceEventsTransmissionMask result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbReport.DeviceEventsTransmissionMask buildPartial() {
        maxpb.MaxpbReport.DeviceEventsTransmissionMask result = new maxpb.MaxpbReport.DeviceEventsTransmissionMask(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.configChanged_ = configChanged_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gpsFixed_ = gpsFixed_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ignition_ = ignition_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.panic_ = panic_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.externalPower_ = externalPower_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.gpsAntenna_ = gpsAntenna_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.battery_ = battery_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.jamming_ = jamming_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.enterDeepSleep_ = enterDeepSleep_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.lbsInfo_ = lbsInfo_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.alarm_ = alarm_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.reconstruction_ = reconstruction_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.emergency_ = emergency_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.input1_ = input1_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.input2_ = input2_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.input3_ = input3_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.input4_ = input4_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.input5_ = input5_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.input6_ = input6_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.input7_ = input7_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.input8_ = input8_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.input9_ = input9_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.input10_ = input10_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.input11_ = input11_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.input12_ = input12_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.input13_ = input13_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.input14_ = input14_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.input15_ = input15_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.input16_ = input16_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.output1_ = output1_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.output2_ = output2_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.output3_ = output3_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.output4_ = output4_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.output5_ = output5_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.output6_ = output6_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        result.output7_ = output7_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        result.output8_ = output8_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbReport.DeviceEventsTransmissionMask) {
          return mergeFrom((maxpb.MaxpbReport.DeviceEventsTransmissionMask)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbReport.DeviceEventsTransmissionMask other) {
        if (other == maxpb.MaxpbReport.DeviceEventsTransmissionMask.getDefaultInstance()) return this;
        if (other.hasConfigChanged()) {
          setConfigChanged(other.getConfigChanged());
        }
        if (other.hasGpsFixed()) {
          setGpsFixed(other.getGpsFixed());
        }
        if (other.hasIgnition()) {
          setIgnition(other.getIgnition());
        }
        if (other.hasPanic()) {
          setPanic(other.getPanic());
        }
        if (other.hasExternalPower()) {
          setExternalPower(other.getExternalPower());
        }
        if (other.hasGpsAntenna()) {
          setGpsAntenna(other.getGpsAntenna());
        }
        if (other.hasBattery()) {
          setBattery(other.getBattery());
        }
        if (other.hasJamming()) {
          setJamming(other.getJamming());
        }
        if (other.hasEnterDeepSleep()) {
          setEnterDeepSleep(other.getEnterDeepSleep());
        }
        if (other.hasLbsInfo()) {
          setLbsInfo(other.getLbsInfo());
        }
        if (other.hasAlarm()) {
          setAlarm(other.getAlarm());
        }
        if (other.hasReconstruction()) {
          setReconstruction(other.getReconstruction());
        }
        if (other.hasEmergency()) {
          setEmergency(other.getEmergency());
        }
        if (other.hasInput1()) {
          setInput1(other.getInput1());
        }
        if (other.hasInput2()) {
          setInput2(other.getInput2());
        }
        if (other.hasInput3()) {
          setInput3(other.getInput3());
        }
        if (other.hasInput4()) {
          setInput4(other.getInput4());
        }
        if (other.hasInput5()) {
          setInput5(other.getInput5());
        }
        if (other.hasInput6()) {
          setInput6(other.getInput6());
        }
        if (other.hasInput7()) {
          setInput7(other.getInput7());
        }
        if (other.hasInput8()) {
          setInput8(other.getInput8());
        }
        if (other.hasInput9()) {
          setInput9(other.getInput9());
        }
        if (other.hasInput10()) {
          setInput10(other.getInput10());
        }
        if (other.hasInput11()) {
          setInput11(other.getInput11());
        }
        if (other.hasInput12()) {
          setInput12(other.getInput12());
        }
        if (other.hasInput13()) {
          setInput13(other.getInput13());
        }
        if (other.hasInput14()) {
          setInput14(other.getInput14());
        }
        if (other.hasInput15()) {
          setInput15(other.getInput15());
        }
        if (other.hasInput16()) {
          setInput16(other.getInput16());
        }
        if (other.hasOutput1()) {
          setOutput1(other.getOutput1());
        }
        if (other.hasOutput2()) {
          setOutput2(other.getOutput2());
        }
        if (other.hasOutput3()) {
          setOutput3(other.getOutput3());
        }
        if (other.hasOutput4()) {
          setOutput4(other.getOutput4());
        }
        if (other.hasOutput5()) {
          setOutput5(other.getOutput5());
        }
        if (other.hasOutput6()) {
          setOutput6(other.getOutput6());
        }
        if (other.hasOutput7()) {
          setOutput7(other.getOutput7());
        }
        if (other.hasOutput8()) {
          setOutput8(other.getOutput8());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbReport.DeviceEventsTransmissionMask parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbReport.DeviceEventsTransmissionMask) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private int configChanged_ ;
      /**
       * <code>optional uint32 configChanged = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasConfigChanged() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 configChanged = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getConfigChanged() {
        return configChanged_;
      }
      /**
       * <code>optional uint32 configChanged = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setConfigChanged(int value) {
        bitField0_ |= 0x00000001;
        configChanged_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 configChanged = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearConfigChanged() {
        bitField0_ = (bitField0_ & ~0x00000001);
        configChanged_ = 0;
        onChanged();
        return this;
      }

      private int gpsFixed_ ;
      /**
       * <code>optional uint32 gpsFixed = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasGpsFixed() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 gpsFixed = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public int getGpsFixed() {
        return gpsFixed_;
      }
      /**
       * <code>optional uint32 gpsFixed = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setGpsFixed(int value) {
        bitField0_ |= 0x00000002;
        gpsFixed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gpsFixed = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearGpsFixed() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gpsFixed_ = 0;
        onChanged();
        return this;
      }

      private int ignition_ ;
      /**
       * <code>optional uint32 ignition = 3;</code>
       *
       * <pre>
       *&#47; On, Off, Calibrated and Mode Changed SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasIgnition() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 ignition = 3;</code>
       *
       * <pre>
       *&#47; On, Off, Calibrated and Mode Changed SupportedBy: MXT160, MXT162
       * </pre>
       */
      public int getIgnition() {
        return ignition_;
      }
      /**
       * <code>optional uint32 ignition = 3;</code>
       *
       * <pre>
       *&#47; On, Off, Calibrated and Mode Changed SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setIgnition(int value) {
        bitField0_ |= 0x00000004;
        ignition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ignition = 3;</code>
       *
       * <pre>
       *&#47; On, Off, Calibrated and Mode Changed SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearIgnition() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ignition_ = 0;
        onChanged();
        return this;
      }

      private int panic_ ;
      /**
       * <code>optional uint32 panic = 4;</code>
       *
       * <pre>
       *&#47; Activated and Deactivated SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasPanic() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 panic = 4;</code>
       *
       * <pre>
       *&#47; Activated and Deactivated SupportedBy: MXT160, MXT162
       * </pre>
       */
      public int getPanic() {
        return panic_;
      }
      /**
       * <code>optional uint32 panic = 4;</code>
       *
       * <pre>
       *&#47; Activated and Deactivated SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setPanic(int value) {
        bitField0_ |= 0x00000008;
        panic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 panic = 4;</code>
       *
       * <pre>
       *&#47; Activated and Deactivated SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearPanic() {
        bitField0_ = (bitField0_ & ~0x00000008);
        panic_ = 0;
        onChanged();
        return this;
      }

      private int externalPower_ ;
      /**
       * <code>optional uint32 externalPower = 5;</code>
       *
       * <pre>
       *&#47; Ok and Fail SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasExternalPower() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 externalPower = 5;</code>
       *
       * <pre>
       *&#47; Ok and Fail SupportedBy: MXT160, MXT162
       * </pre>
       */
      public int getExternalPower() {
        return externalPower_;
      }
      /**
       * <code>optional uint32 externalPower = 5;</code>
       *
       * <pre>
       *&#47; Ok and Fail SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setExternalPower(int value) {
        bitField0_ |= 0x00000010;
        externalPower_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 externalPower = 5;</code>
       *
       * <pre>
       *&#47; Ok and Fail SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearExternalPower() {
        bitField0_ = (bitField0_ & ~0x00000010);
        externalPower_ = 0;
        onChanged();
        return this;
      }

      private int gpsAntenna_ ;
      /**
       * <code>optional uint32 gpsAntenna = 6;</code>
       *
       * <pre>
       *&#47; Ok and Fail SupportedBy: 
       * </pre>
       */
      public boolean hasGpsAntenna() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 gpsAntenna = 6;</code>
       *
       * <pre>
       *&#47; Ok and Fail SupportedBy: 
       * </pre>
       */
      public int getGpsAntenna() {
        return gpsAntenna_;
      }
      /**
       * <code>optional uint32 gpsAntenna = 6;</code>
       *
       * <pre>
       *&#47; Ok and Fail SupportedBy: 
       * </pre>
       */
      public Builder setGpsAntenna(int value) {
        bitField0_ |= 0x00000020;
        gpsAntenna_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gpsAntenna = 6;</code>
       *
       * <pre>
       *&#47; Ok and Fail SupportedBy: 
       * </pre>
       */
      public Builder clearGpsAntenna() {
        bitField0_ = (bitField0_ & ~0x00000020);
        gpsAntenna_ = 0;
        onChanged();
        return this;
      }

      private int battery_ ;
      /**
       * <code>optional uint32 battery = 7;</code>
       *
       * <pre>
       *&#47; Ok and Fail SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasBattery() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 battery = 7;</code>
       *
       * <pre>
       *&#47; Ok and Fail SupportedBy: MXT160, MXT162
       * </pre>
       */
      public int getBattery() {
        return battery_;
      }
      /**
       * <code>optional uint32 battery = 7;</code>
       *
       * <pre>
       *&#47; Ok and Fail SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setBattery(int value) {
        bitField0_ |= 0x00000040;
        battery_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 battery = 7;</code>
       *
       * <pre>
       *&#47; Ok and Fail SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearBattery() {
        bitField0_ = (bitField0_ & ~0x00000040);
        battery_ = 0;
        onChanged();
        return this;
      }

      private int jamming_ ;
      /**
       * <code>optional uint32 jamming = 8;</code>
       *
       * <pre>
       *&#47; Start and End SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasJamming() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 jamming = 8;</code>
       *
       * <pre>
       *&#47; Start and End SupportedBy: MXT160, MXT162
       * </pre>
       */
      public int getJamming() {
        return jamming_;
      }
      /**
       * <code>optional uint32 jamming = 8;</code>
       *
       * <pre>
       *&#47; Start and End SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setJamming(int value) {
        bitField0_ |= 0x00000080;
        jamming_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 jamming = 8;</code>
       *
       * <pre>
       *&#47; Start and End SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearJamming() {
        bitField0_ = (bitField0_ & ~0x00000080);
        jamming_ = 0;
        onChanged();
        return this;
      }

      private int enterDeepSleep_ ;
      /**
       * <code>optional uint32 enterDeepSleep = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasEnterDeepSleep() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 enterDeepSleep = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public int getEnterDeepSleep() {
        return enterDeepSleep_;
      }
      /**
       * <code>optional uint32 enterDeepSleep = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setEnterDeepSleep(int value) {
        bitField0_ |= 0x00000100;
        enterDeepSleep_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 enterDeepSleep = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearEnterDeepSleep() {
        bitField0_ = (bitField0_ & ~0x00000100);
        enterDeepSleep_ = 0;
        onChanged();
        return this;
      }

      private int lbsInfo_ ;
      /**
       * <code>optional uint32 lbsInfo = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasLbsInfo() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 lbsInfo = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public int getLbsInfo() {
        return lbsInfo_;
      }
      /**
       * <code>optional uint32 lbsInfo = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setLbsInfo(int value) {
        bitField0_ |= 0x00000200;
        lbsInfo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 lbsInfo = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearLbsInfo() {
        bitField0_ = (bitField0_ & ~0x00000200);
        lbsInfo_ = 0;
        onChanged();
        return this;
      }

      private int alarm_ ;
      /**
       * <code>optional uint32 alarm = 11;</code>
       *
       * <pre>
       *&#47; Activated and Deactivated SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasAlarm() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 alarm = 11;</code>
       *
       * <pre>
       *&#47; Activated and Deactivated SupportedBy: MXT160, MXT162
       * </pre>
       */
      public int getAlarm() {
        return alarm_;
      }
      /**
       * <code>optional uint32 alarm = 11;</code>
       *
       * <pre>
       *&#47; Activated and Deactivated SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setAlarm(int value) {
        bitField0_ |= 0x00000400;
        alarm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 alarm = 11;</code>
       *
       * <pre>
       *&#47; Activated and Deactivated SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearAlarm() {
        bitField0_ = (bitField0_ & ~0x00000400);
        alarm_ = 0;
        onChanged();
        return this;
      }

      private int reconstruction_ ;
      /**
       * <code>optional uint32 reconstruction = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasReconstruction() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 reconstruction = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getReconstruction() {
        return reconstruction_;
      }
      /**
       * <code>optional uint32 reconstruction = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setReconstruction(int value) {
        bitField0_ |= 0x00000800;
        reconstruction_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 reconstruction = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearReconstruction() {
        bitField0_ = (bitField0_ & ~0x00000800);
        reconstruction_ = 0;
        onChanged();
        return this;
      }

      private int emergency_ ;
      /**
       * <code>optional uint32 emergency = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasEmergency() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 emergency = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getEmergency() {
        return emergency_;
      }
      /**
       * <code>optional uint32 emergency = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setEmergency(int value) {
        bitField0_ |= 0x00001000;
        emergency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 emergency = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearEmergency() {
        bitField0_ = (bitField0_ & ~0x00001000);
        emergency_ = 0;
        onChanged();
        return this;
      }

      private int input1_ ;
      /**
       * <code>optional uint32 input1 = 50;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasInput1() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 input1 = 50;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public int getInput1() {
        return input1_;
      }
      /**
       * <code>optional uint32 input1 = 50;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setInput1(int value) {
        bitField0_ |= 0x00002000;
        input1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 input1 = 50;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearInput1() {
        bitField0_ = (bitField0_ & ~0x00002000);
        input1_ = 0;
        onChanged();
        return this;
      }

      private int input2_ ;
      /**
       * <code>optional uint32 input2 = 51;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160
       * </pre>
       */
      public boolean hasInput2() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 input2 = 51;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160
       * </pre>
       */
      public int getInput2() {
        return input2_;
      }
      /**
       * <code>optional uint32 input2 = 51;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160
       * </pre>
       */
      public Builder setInput2(int value) {
        bitField0_ |= 0x00004000;
        input2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 input2 = 51;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160
       * </pre>
       */
      public Builder clearInput2() {
        bitField0_ = (bitField0_ & ~0x00004000);
        input2_ = 0;
        onChanged();
        return this;
      }

      private int input3_ ;
      /**
       * <code>optional uint32 input3 = 52;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160
       * </pre>
       */
      public boolean hasInput3() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint32 input3 = 52;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160
       * </pre>
       */
      public int getInput3() {
        return input3_;
      }
      /**
       * <code>optional uint32 input3 = 52;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160
       * </pre>
       */
      public Builder setInput3(int value) {
        bitField0_ |= 0x00008000;
        input3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 input3 = 52;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160
       * </pre>
       */
      public Builder clearInput3() {
        bitField0_ = (bitField0_ & ~0x00008000);
        input3_ = 0;
        onChanged();
        return this;
      }

      private int input4_ ;
      /**
       * <code>optional uint32 input4 = 53;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasInput4() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 input4 = 53;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getInput4() {
        return input4_;
      }
      /**
       * <code>optional uint32 input4 = 53;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setInput4(int value) {
        bitField0_ |= 0x00010000;
        input4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 input4 = 53;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearInput4() {
        bitField0_ = (bitField0_ & ~0x00010000);
        input4_ = 0;
        onChanged();
        return this;
      }

      private int input5_ ;
      /**
       * <code>optional uint32 input5 = 54;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasInput5() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional uint32 input5 = 54;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getInput5() {
        return input5_;
      }
      /**
       * <code>optional uint32 input5 = 54;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setInput5(int value) {
        bitField0_ |= 0x00020000;
        input5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 input5 = 54;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearInput5() {
        bitField0_ = (bitField0_ & ~0x00020000);
        input5_ = 0;
        onChanged();
        return this;
      }

      private int input6_ ;
      /**
       * <code>optional uint32 input6 = 55;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasInput6() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional uint32 input6 = 55;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getInput6() {
        return input6_;
      }
      /**
       * <code>optional uint32 input6 = 55;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setInput6(int value) {
        bitField0_ |= 0x00040000;
        input6_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 input6 = 55;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearInput6() {
        bitField0_ = (bitField0_ & ~0x00040000);
        input6_ = 0;
        onChanged();
        return this;
      }

      private int input7_ ;
      /**
       * <code>optional uint32 input7 = 56;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasInput7() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional uint32 input7 = 56;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getInput7() {
        return input7_;
      }
      /**
       * <code>optional uint32 input7 = 56;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setInput7(int value) {
        bitField0_ |= 0x00080000;
        input7_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 input7 = 56;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearInput7() {
        bitField0_ = (bitField0_ & ~0x00080000);
        input7_ = 0;
        onChanged();
        return this;
      }

      private int input8_ ;
      /**
       * <code>optional uint32 input8 = 57;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasInput8() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional uint32 input8 = 57;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getInput8() {
        return input8_;
      }
      /**
       * <code>optional uint32 input8 = 57;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setInput8(int value) {
        bitField0_ |= 0x00100000;
        input8_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 input8 = 57;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearInput8() {
        bitField0_ = (bitField0_ & ~0x00100000);
        input8_ = 0;
        onChanged();
        return this;
      }

      private int input9_ ;
      /**
       * <code>optional uint32 input9 = 58;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasInput9() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional uint32 input9 = 58;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getInput9() {
        return input9_;
      }
      /**
       * <code>optional uint32 input9 = 58;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setInput9(int value) {
        bitField0_ |= 0x00200000;
        input9_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 input9 = 58;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearInput9() {
        bitField0_ = (bitField0_ & ~0x00200000);
        input9_ = 0;
        onChanged();
        return this;
      }

      private int input10_ ;
      /**
       * <code>optional uint32 input10 = 59;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasInput10() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional uint32 input10 = 59;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getInput10() {
        return input10_;
      }
      /**
       * <code>optional uint32 input10 = 59;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setInput10(int value) {
        bitField0_ |= 0x00400000;
        input10_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 input10 = 59;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearInput10() {
        bitField0_ = (bitField0_ & ~0x00400000);
        input10_ = 0;
        onChanged();
        return this;
      }

      private int input11_ ;
      /**
       * <code>optional uint32 input11 = 60;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasInput11() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional uint32 input11 = 60;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getInput11() {
        return input11_;
      }
      /**
       * <code>optional uint32 input11 = 60;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setInput11(int value) {
        bitField0_ |= 0x00800000;
        input11_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 input11 = 60;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearInput11() {
        bitField0_ = (bitField0_ & ~0x00800000);
        input11_ = 0;
        onChanged();
        return this;
      }

      private int input12_ ;
      /**
       * <code>optional uint32 input12 = 61;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasInput12() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional uint32 input12 = 61;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getInput12() {
        return input12_;
      }
      /**
       * <code>optional uint32 input12 = 61;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setInput12(int value) {
        bitField0_ |= 0x01000000;
        input12_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 input12 = 61;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearInput12() {
        bitField0_ = (bitField0_ & ~0x01000000);
        input12_ = 0;
        onChanged();
        return this;
      }

      private int input13_ ;
      /**
       * <code>optional uint32 input13 = 62;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasInput13() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional uint32 input13 = 62;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getInput13() {
        return input13_;
      }
      /**
       * <code>optional uint32 input13 = 62;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setInput13(int value) {
        bitField0_ |= 0x02000000;
        input13_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 input13 = 62;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearInput13() {
        bitField0_ = (bitField0_ & ~0x02000000);
        input13_ = 0;
        onChanged();
        return this;
      }

      private int input14_ ;
      /**
       * <code>optional uint32 input14 = 63;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasInput14() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional uint32 input14 = 63;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getInput14() {
        return input14_;
      }
      /**
       * <code>optional uint32 input14 = 63;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setInput14(int value) {
        bitField0_ |= 0x04000000;
        input14_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 input14 = 63;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearInput14() {
        bitField0_ = (bitField0_ & ~0x04000000);
        input14_ = 0;
        onChanged();
        return this;
      }

      private int input15_ ;
      /**
       * <code>optional uint32 input15 = 64;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasInput15() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional uint32 input15 = 64;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getInput15() {
        return input15_;
      }
      /**
       * <code>optional uint32 input15 = 64;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setInput15(int value) {
        bitField0_ |= 0x08000000;
        input15_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 input15 = 64;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearInput15() {
        bitField0_ = (bitField0_ & ~0x08000000);
        input15_ = 0;
        onChanged();
        return this;
      }

      private int input16_ ;
      /**
       * <code>optional uint32 input16 = 65;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasInput16() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional uint32 input16 = 65;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getInput16() {
        return input16_;
      }
      /**
       * <code>optional uint32 input16 = 65;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setInput16(int value) {
        bitField0_ |= 0x10000000;
        input16_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 input16 = 65;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearInput16() {
        bitField0_ = (bitField0_ & ~0x10000000);
        input16_ = 0;
        onChanged();
        return this;
      }

      private int output1_ ;
      /**
       * <code>optional uint32 output1 = 100;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasOutput1() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional uint32 output1 = 100;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public int getOutput1() {
        return output1_;
      }
      /**
       * <code>optional uint32 output1 = 100;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setOutput1(int value) {
        bitField0_ |= 0x20000000;
        output1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 output1 = 100;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearOutput1() {
        bitField0_ = (bitField0_ & ~0x20000000);
        output1_ = 0;
        onChanged();
        return this;
      }

      private int output2_ ;
      /**
       * <code>optional uint32 output2 = 101;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasOutput2() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional uint32 output2 = 101;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public int getOutput2() {
        return output2_;
      }
      /**
       * <code>optional uint32 output2 = 101;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setOutput2(int value) {
        bitField0_ |= 0x40000000;
        output2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 output2 = 101;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearOutput2() {
        bitField0_ = (bitField0_ & ~0x40000000);
        output2_ = 0;
        onChanged();
        return this;
      }

      private int output3_ ;
      /**
       * <code>optional uint32 output3 = 102;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasOutput3() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional uint32 output3 = 102;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getOutput3() {
        return output3_;
      }
      /**
       * <code>optional uint32 output3 = 102;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setOutput3(int value) {
        bitField0_ |= 0x80000000;
        output3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 output3 = 102;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearOutput3() {
        bitField0_ = (bitField0_ & ~0x80000000);
        output3_ = 0;
        onChanged();
        return this;
      }

      private int output4_ ;
      /**
       * <code>optional uint32 output4 = 103;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasOutput4() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 output4 = 103;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getOutput4() {
        return output4_;
      }
      /**
       * <code>optional uint32 output4 = 103;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setOutput4(int value) {
        bitField1_ |= 0x00000001;
        output4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 output4 = 103;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearOutput4() {
        bitField1_ = (bitField1_ & ~0x00000001);
        output4_ = 0;
        onChanged();
        return this;
      }

      private int output5_ ;
      /**
       * <code>optional uint32 output5 = 104;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasOutput5() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 output5 = 104;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getOutput5() {
        return output5_;
      }
      /**
       * <code>optional uint32 output5 = 104;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setOutput5(int value) {
        bitField1_ |= 0x00000002;
        output5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 output5 = 104;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearOutput5() {
        bitField1_ = (bitField1_ & ~0x00000002);
        output5_ = 0;
        onChanged();
        return this;
      }

      private int output6_ ;
      /**
       * <code>optional uint32 output6 = 105;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasOutput6() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 output6 = 105;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getOutput6() {
        return output6_;
      }
      /**
       * <code>optional uint32 output6 = 105;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setOutput6(int value) {
        bitField1_ |= 0x00000004;
        output6_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 output6 = 105;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearOutput6() {
        bitField1_ = (bitField1_ & ~0x00000004);
        output6_ = 0;
        onChanged();
        return this;
      }

      private int output7_ ;
      /**
       * <code>optional uint32 output7 = 106;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasOutput7() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 output7 = 106;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getOutput7() {
        return output7_;
      }
      /**
       * <code>optional uint32 output7 = 106;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setOutput7(int value) {
        bitField1_ |= 0x00000008;
        output7_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 output7 = 106;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearOutput7() {
        bitField1_ = (bitField1_ & ~0x00000008);
        output7_ = 0;
        onChanged();
        return this;
      }

      private int output8_ ;
      /**
       * <code>optional uint32 output8 = 107;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasOutput8() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 output8 = 107;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getOutput8() {
        return output8_;
      }
      /**
       * <code>optional uint32 output8 = 107;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setOutput8(int value) {
        bitField1_ |= 0x00000010;
        output8_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 output8 = 107;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearOutput8() {
        bitField1_ = (bitField1_ & ~0x00000010);
        output8_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.DeviceEventsTransmissionMask)
    }

    static {
      defaultInstance = new DeviceEventsTransmissionMask(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.DeviceEventsTransmissionMask)
  }

  public interface DeviceEventsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.DeviceEvents)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .maxpb.DeviceEvent eventID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasEventID();
    /**
     * <code>required .maxpb.DeviceEvent eventID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.DeviceEvent getEventID();
  }
  /**
   * Protobuf type {@code maxpb.DeviceEvents}
   */
  public static final class DeviceEvents extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.DeviceEvents)
      DeviceEventsOrBuilder {
    // Use DeviceEvents.newBuilder() to construct.
    private DeviceEvents(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeviceEvents(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeviceEvents defaultInstance;
    public static DeviceEvents getDefaultInstance() {
      return defaultInstance;
    }

    public DeviceEvents getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeviceEvents(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              maxpb.MaxpbReport.DeviceEvent value = maxpb.MaxpbReport.DeviceEvent.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                eventID_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbReport.internal_static_maxpb_DeviceEvents_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbReport.internal_static_maxpb_DeviceEvents_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbReport.DeviceEvents.class, maxpb.MaxpbReport.DeviceEvents.Builder.class);
    }

    public static com.google.protobuf.Parser<DeviceEvents> PARSER =
        new com.google.protobuf.AbstractParser<DeviceEvents>() {
      public DeviceEvents parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeviceEvents(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceEvents> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int EVENTID_FIELD_NUMBER = 1;
    private maxpb.MaxpbReport.DeviceEvent eventID_;
    /**
     * <code>required .maxpb.DeviceEvent eventID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasEventID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .maxpb.DeviceEvent eventID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.DeviceEvent getEventID() {
      return eventID_;
    }

    private void initFields() {
      eventID_ = maxpb.MaxpbReport.DeviceEvent.DE_NONE;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasEventID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, eventID_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, eventID_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbReport.DeviceEvents parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.DeviceEvents parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.DeviceEvents parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.DeviceEvents parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.DeviceEvents parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.DeviceEvents parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.DeviceEvents parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbReport.DeviceEvents parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.DeviceEvents parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.DeviceEvents parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbReport.DeviceEvents prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.DeviceEvents}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.DeviceEvents)
        maxpb.MaxpbReport.DeviceEventsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbReport.internal_static_maxpb_DeviceEvents_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbReport.internal_static_maxpb_DeviceEvents_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbReport.DeviceEvents.class, maxpb.MaxpbReport.DeviceEvents.Builder.class);
      }

      // Construct using maxpb.MaxpbReport.DeviceEvents.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        eventID_ = maxpb.MaxpbReport.DeviceEvent.DE_NONE;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbReport.internal_static_maxpb_DeviceEvents_descriptor;
      }

      public maxpb.MaxpbReport.DeviceEvents getDefaultInstanceForType() {
        return maxpb.MaxpbReport.DeviceEvents.getDefaultInstance();
      }

      public maxpb.MaxpbReport.DeviceEvents build() {
        maxpb.MaxpbReport.DeviceEvents result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbReport.DeviceEvents buildPartial() {
        maxpb.MaxpbReport.DeviceEvents result = new maxpb.MaxpbReport.DeviceEvents(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eventID_ = eventID_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbReport.DeviceEvents) {
          return mergeFrom((maxpb.MaxpbReport.DeviceEvents)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbReport.DeviceEvents other) {
        if (other == maxpb.MaxpbReport.DeviceEvents.getDefaultInstance()) return this;
        if (other.hasEventID()) {
          setEventID(other.getEventID());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasEventID()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbReport.DeviceEvents parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbReport.DeviceEvents) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private maxpb.MaxpbReport.DeviceEvent eventID_ = maxpb.MaxpbReport.DeviceEvent.DE_NONE;
      /**
       * <code>required .maxpb.DeviceEvent eventID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasEventID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .maxpb.DeviceEvent eventID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.DeviceEvent getEventID() {
        return eventID_;
      }
      /**
       * <code>required .maxpb.DeviceEvent eventID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setEventID(maxpb.MaxpbReport.DeviceEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        eventID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .maxpb.DeviceEvent eventID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearEventID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eventID_ = maxpb.MaxpbReport.DeviceEvent.DE_NONE;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.DeviceEvents)
    }

    static {
      defaultInstance = new DeviceEvents(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.DeviceEvents)
  }

  public interface EmbeddedActionEventsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.EmbeddedActionEvents)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 eventID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasEventID();
    /**
     * <code>required uint32 eventID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    int getEventID();

    /**
     * <code>optional uint32 duration = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasDuration();
    /**
     * <code>optional uint32 duration = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    int getDuration();
  }
  /**
   * Protobuf type {@code maxpb.EmbeddedActionEvents}
   */
  public static final class EmbeddedActionEvents extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.EmbeddedActionEvents)
      EmbeddedActionEventsOrBuilder {
    // Use EmbeddedActionEvents.newBuilder() to construct.
    private EmbeddedActionEvents(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EmbeddedActionEvents(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EmbeddedActionEvents defaultInstance;
    public static EmbeddedActionEvents getDefaultInstance() {
      return defaultInstance;
    }

    public EmbeddedActionEvents getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EmbeddedActionEvents(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              eventID_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              duration_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbReport.internal_static_maxpb_EmbeddedActionEvents_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbReport.internal_static_maxpb_EmbeddedActionEvents_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbReport.EmbeddedActionEvents.class, maxpb.MaxpbReport.EmbeddedActionEvents.Builder.class);
    }

    public static com.google.protobuf.Parser<EmbeddedActionEvents> PARSER =
        new com.google.protobuf.AbstractParser<EmbeddedActionEvents>() {
      public EmbeddedActionEvents parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EmbeddedActionEvents(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EmbeddedActionEvents> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int EVENTID_FIELD_NUMBER = 1;
    private int eventID_;
    /**
     * <code>required uint32 eventID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasEventID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 eventID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public int getEventID() {
      return eventID_;
    }

    public static final int DURATION_FIELD_NUMBER = 2;
    private int duration_;
    /**
     * <code>optional uint32 duration = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 duration = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public int getDuration() {
      return duration_;
    }

    private void initFields() {
      eventID_ = 0;
      duration_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasEventID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, eventID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, duration_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, eventID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, duration_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbReport.EmbeddedActionEvents parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.EmbeddedActionEvents parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.EmbeddedActionEvents parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.EmbeddedActionEvents parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.EmbeddedActionEvents parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.EmbeddedActionEvents parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.EmbeddedActionEvents parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbReport.EmbeddedActionEvents parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.EmbeddedActionEvents parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.EmbeddedActionEvents parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbReport.EmbeddedActionEvents prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.EmbeddedActionEvents}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.EmbeddedActionEvents)
        maxpb.MaxpbReport.EmbeddedActionEventsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbReport.internal_static_maxpb_EmbeddedActionEvents_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbReport.internal_static_maxpb_EmbeddedActionEvents_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbReport.EmbeddedActionEvents.class, maxpb.MaxpbReport.EmbeddedActionEvents.Builder.class);
      }

      // Construct using maxpb.MaxpbReport.EmbeddedActionEvents.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        eventID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        duration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbReport.internal_static_maxpb_EmbeddedActionEvents_descriptor;
      }

      public maxpb.MaxpbReport.EmbeddedActionEvents getDefaultInstanceForType() {
        return maxpb.MaxpbReport.EmbeddedActionEvents.getDefaultInstance();
      }

      public maxpb.MaxpbReport.EmbeddedActionEvents build() {
        maxpb.MaxpbReport.EmbeddedActionEvents result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbReport.EmbeddedActionEvents buildPartial() {
        maxpb.MaxpbReport.EmbeddedActionEvents result = new maxpb.MaxpbReport.EmbeddedActionEvents(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eventID_ = eventID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.duration_ = duration_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbReport.EmbeddedActionEvents) {
          return mergeFrom((maxpb.MaxpbReport.EmbeddedActionEvents)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbReport.EmbeddedActionEvents other) {
        if (other == maxpb.MaxpbReport.EmbeddedActionEvents.getDefaultInstance()) return this;
        if (other.hasEventID()) {
          setEventID(other.getEventID());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasEventID()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbReport.EmbeddedActionEvents parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbReport.EmbeddedActionEvents) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int eventID_ ;
      /**
       * <code>required uint32 eventID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasEventID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 eventID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public int getEventID() {
        return eventID_;
      }
      /**
       * <code>required uint32 eventID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setEventID(int value) {
        bitField0_ |= 0x00000001;
        eventID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 eventID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearEventID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eventID_ = 0;
        onChanged();
        return this;
      }

      private int duration_ ;
      /**
       * <code>optional uint32 duration = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 duration = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public int getDuration() {
        return duration_;
      }
      /**
       * <code>optional uint32 duration = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setDuration(int value) {
        bitField0_ |= 0x00000002;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 duration = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000002);
        duration_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.EmbeddedActionEvents)
    }

    static {
      defaultInstance = new EmbeddedActionEvents(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.EmbeddedActionEvents)
  }

  public interface DriverEventsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.DriverEvents)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .maxpb.LoginEvent eventID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    boolean hasEventID();
    /**
     * <code>required .maxpb.LoginEvent eventID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    maxpb.MaxpbReport.LoginEvent getEventID();

    /**
     * <code>required uint64 driverID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    boolean hasDriverID();
    /**
     * <code>required uint64 driverID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    long getDriverID();

    /**
     * <code>optional .maxpb.LoginType loginType = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    boolean hasLoginType();
    /**
     * <code>optional .maxpb.LoginType loginType = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    maxpb.MaxpbReport.LoginType getLoginType();

    /**
     * <code>optional uint32 duration = 4;</code>
     *
     * <pre>
     *&#47; minutes SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    boolean hasDuration();
    /**
     * <code>optional uint32 duration = 4;</code>
     *
     * <pre>
     *&#47; minutes SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    int getDuration();
  }
  /**
   * Protobuf type {@code maxpb.DriverEvents}
   */
  public static final class DriverEvents extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.DriverEvents)
      DriverEventsOrBuilder {
    // Use DriverEvents.newBuilder() to construct.
    private DriverEvents(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DriverEvents(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DriverEvents defaultInstance;
    public static DriverEvents getDefaultInstance() {
      return defaultInstance;
    }

    public DriverEvents getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DriverEvents(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              maxpb.MaxpbReport.LoginEvent value = maxpb.MaxpbReport.LoginEvent.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                eventID_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              driverID_ = input.readUInt64();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              maxpb.MaxpbReport.LoginType value = maxpb.MaxpbReport.LoginType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                loginType_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              duration_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbReport.internal_static_maxpb_DriverEvents_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbReport.internal_static_maxpb_DriverEvents_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbReport.DriverEvents.class, maxpb.MaxpbReport.DriverEvents.Builder.class);
    }

    public static com.google.protobuf.Parser<DriverEvents> PARSER =
        new com.google.protobuf.AbstractParser<DriverEvents>() {
      public DriverEvents parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DriverEvents(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DriverEvents> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int EVENTID_FIELD_NUMBER = 1;
    private maxpb.MaxpbReport.LoginEvent eventID_;
    /**
     * <code>required .maxpb.LoginEvent eventID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public boolean hasEventID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .maxpb.LoginEvent eventID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public maxpb.MaxpbReport.LoginEvent getEventID() {
      return eventID_;
    }

    public static final int DRIVERID_FIELD_NUMBER = 2;
    private long driverID_;
    /**
     * <code>required uint64 driverID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public boolean hasDriverID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 driverID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public long getDriverID() {
      return driverID_;
    }

    public static final int LOGINTYPE_FIELD_NUMBER = 3;
    private maxpb.MaxpbReport.LoginType loginType_;
    /**
     * <code>optional .maxpb.LoginType loginType = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public boolean hasLoginType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .maxpb.LoginType loginType = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public maxpb.MaxpbReport.LoginType getLoginType() {
      return loginType_;
    }

    public static final int DURATION_FIELD_NUMBER = 4;
    private int duration_;
    /**
     * <code>optional uint32 duration = 4;</code>
     *
     * <pre>
     *&#47; minutes SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 duration = 4;</code>
     *
     * <pre>
     *&#47; minutes SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public int getDuration() {
      return duration_;
    }

    private void initFields() {
      eventID_ = maxpb.MaxpbReport.LoginEvent.LE_LOGIN;
      driverID_ = 0L;
      loginType_ = maxpb.MaxpbReport.LoginType.LT_NONE;
      duration_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasEventID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDriverID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, eventID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, driverID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, loginType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, duration_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, eventID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, driverID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, loginType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, duration_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbReport.DriverEvents parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.DriverEvents parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.DriverEvents parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.DriverEvents parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.DriverEvents parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.DriverEvents parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.DriverEvents parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbReport.DriverEvents parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.DriverEvents parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.DriverEvents parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbReport.DriverEvents prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.DriverEvents}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.DriverEvents)
        maxpb.MaxpbReport.DriverEventsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbReport.internal_static_maxpb_DriverEvents_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbReport.internal_static_maxpb_DriverEvents_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbReport.DriverEvents.class, maxpb.MaxpbReport.DriverEvents.Builder.class);
      }

      // Construct using maxpb.MaxpbReport.DriverEvents.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        eventID_ = maxpb.MaxpbReport.LoginEvent.LE_LOGIN;
        bitField0_ = (bitField0_ & ~0x00000001);
        driverID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        loginType_ = maxpb.MaxpbReport.LoginType.LT_NONE;
        bitField0_ = (bitField0_ & ~0x00000004);
        duration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbReport.internal_static_maxpb_DriverEvents_descriptor;
      }

      public maxpb.MaxpbReport.DriverEvents getDefaultInstanceForType() {
        return maxpb.MaxpbReport.DriverEvents.getDefaultInstance();
      }

      public maxpb.MaxpbReport.DriverEvents build() {
        maxpb.MaxpbReport.DriverEvents result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbReport.DriverEvents buildPartial() {
        maxpb.MaxpbReport.DriverEvents result = new maxpb.MaxpbReport.DriverEvents(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eventID_ = eventID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.driverID_ = driverID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.loginType_ = loginType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.duration_ = duration_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbReport.DriverEvents) {
          return mergeFrom((maxpb.MaxpbReport.DriverEvents)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbReport.DriverEvents other) {
        if (other == maxpb.MaxpbReport.DriverEvents.getDefaultInstance()) return this;
        if (other.hasEventID()) {
          setEventID(other.getEventID());
        }
        if (other.hasDriverID()) {
          setDriverID(other.getDriverID());
        }
        if (other.hasLoginType()) {
          setLoginType(other.getLoginType());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasEventID()) {
          
          return false;
        }
        if (!hasDriverID()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbReport.DriverEvents parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbReport.DriverEvents) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private maxpb.MaxpbReport.LoginEvent eventID_ = maxpb.MaxpbReport.LoginEvent.LE_LOGIN;
      /**
       * <code>required .maxpb.LoginEvent eventID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public boolean hasEventID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .maxpb.LoginEvent eventID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public maxpb.MaxpbReport.LoginEvent getEventID() {
        return eventID_;
      }
      /**
       * <code>required .maxpb.LoginEvent eventID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public Builder setEventID(maxpb.MaxpbReport.LoginEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        eventID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .maxpb.LoginEvent eventID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public Builder clearEventID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eventID_ = maxpb.MaxpbReport.LoginEvent.LE_LOGIN;
        onChanged();
        return this;
      }

      private long driverID_ ;
      /**
       * <code>required uint64 driverID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public boolean hasDriverID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 driverID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public long getDriverID() {
        return driverID_;
      }
      /**
       * <code>required uint64 driverID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public Builder setDriverID(long value) {
        bitField0_ |= 0x00000002;
        driverID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 driverID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public Builder clearDriverID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        driverID_ = 0L;
        onChanged();
        return this;
      }

      private maxpb.MaxpbReport.LoginType loginType_ = maxpb.MaxpbReport.LoginType.LT_NONE;
      /**
       * <code>optional .maxpb.LoginType loginType = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public boolean hasLoginType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .maxpb.LoginType loginType = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public maxpb.MaxpbReport.LoginType getLoginType() {
        return loginType_;
      }
      /**
       * <code>optional .maxpb.LoginType loginType = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public Builder setLoginType(maxpb.MaxpbReport.LoginType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        loginType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.LoginType loginType = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public Builder clearLoginType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        loginType_ = maxpb.MaxpbReport.LoginType.LT_NONE;
        onChanged();
        return this;
      }

      private int duration_ ;
      /**
       * <code>optional uint32 duration = 4;</code>
       *
       * <pre>
       *&#47; minutes SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 duration = 4;</code>
       *
       * <pre>
       *&#47; minutes SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public int getDuration() {
        return duration_;
      }
      /**
       * <code>optional uint32 duration = 4;</code>
       *
       * <pre>
       *&#47; minutes SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public Builder setDuration(int value) {
        bitField0_ |= 0x00000008;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 duration = 4;</code>
       *
       * <pre>
       *&#47; minutes SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000008);
        duration_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.DriverEvents)
    }

    static {
      defaultInstance = new DriverEvents(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.DriverEvents)
  }

  public interface EventsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.Events)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .maxpb.DeviceEvents device = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<maxpb.MaxpbReport.DeviceEvents> 
        getDeviceList();
    /**
     * <code>repeated .maxpb.DeviceEvents device = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.DeviceEvents getDevice(int index);
    /**
     * <code>repeated .maxpb.DeviceEvents device = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    int getDeviceCount();
    /**
     * <code>repeated .maxpb.DeviceEvents device = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbReport.DeviceEventsOrBuilder> 
        getDeviceOrBuilderList();
    /**
     * <code>repeated .maxpb.DeviceEvents device = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.DeviceEventsOrBuilder getDeviceOrBuilder(
        int index);

    /**
     * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<maxpb.MaxpbTelemetry.TelemetryEvents> 
        getTelemetryList();
    /**
     * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbTelemetry.TelemetryEvents getTelemetry(int index);
    /**
     * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    int getTelemetryCount();
    /**
     * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbTelemetry.TelemetryEventsOrBuilder> 
        getTelemetryOrBuilderList();
    /**
     * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbTelemetry.TelemetryEventsOrBuilder getTelemetryOrBuilder(
        int index);

    /**
     * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<maxpb.MaxpbGeographic.GeographicEvents> 
        getGeographicList();
    /**
     * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbGeographic.GeographicEvents getGeographic(int index);
    /**
     * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    int getGeographicCount();
    /**
     * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbGeographic.GeographicEventsOrBuilder> 
        getGeographicOrBuilderList();
    /**
     * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbGeographic.GeographicEventsOrBuilder getGeographicOrBuilder(
        int index);

    /**
     * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<maxpb.MaxpbReport.EmbeddedActionEvents> 
        getActionsList();
    /**
     * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.EmbeddedActionEvents getActions(int index);
    /**
     * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getActionsCount();
    /**
     * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbReport.EmbeddedActionEventsOrBuilder> 
        getActionsOrBuilderList();
    /**
     * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.EmbeddedActionEventsOrBuilder getActionsOrBuilder(
        int index);

    /**
     * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<maxpb.MaxpbReport.DriverEvents> 
        getDriversList();
    /**
     * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.DriverEvents getDrivers(int index);
    /**
     * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getDriversCount();
    /**
     * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbReport.DriverEventsOrBuilder> 
        getDriversOrBuilderList();
    /**
     * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.DriverEventsOrBuilder getDriversOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code maxpb.Events}
   */
  public static final class Events extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.Events)
      EventsOrBuilder {
    // Use Events.newBuilder() to construct.
    private Events(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Events(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Events defaultInstance;
    public static Events getDefaultInstance() {
      return defaultInstance;
    }

    public Events getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Events(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                device_ = new java.util.ArrayList<maxpb.MaxpbReport.DeviceEvents>();
                mutable_bitField0_ |= 0x00000001;
              }
              device_.add(input.readMessage(maxpb.MaxpbReport.DeviceEvents.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                telemetry_ = new java.util.ArrayList<maxpb.MaxpbTelemetry.TelemetryEvents>();
                mutable_bitField0_ |= 0x00000002;
              }
              telemetry_.add(input.readMessage(maxpb.MaxpbTelemetry.TelemetryEvents.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                geographic_ = new java.util.ArrayList<maxpb.MaxpbGeographic.GeographicEvents>();
                mutable_bitField0_ |= 0x00000004;
              }
              geographic_.add(input.readMessage(maxpb.MaxpbGeographic.GeographicEvents.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                actions_ = new java.util.ArrayList<maxpb.MaxpbReport.EmbeddedActionEvents>();
                mutable_bitField0_ |= 0x00000008;
              }
              actions_.add(input.readMessage(maxpb.MaxpbReport.EmbeddedActionEvents.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                drivers_ = new java.util.ArrayList<maxpb.MaxpbReport.DriverEvents>();
                mutable_bitField0_ |= 0x00000010;
              }
              drivers_.add(input.readMessage(maxpb.MaxpbReport.DriverEvents.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          device_ = java.util.Collections.unmodifiableList(device_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          telemetry_ = java.util.Collections.unmodifiableList(telemetry_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          geographic_ = java.util.Collections.unmodifiableList(geographic_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          actions_ = java.util.Collections.unmodifiableList(actions_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          drivers_ = java.util.Collections.unmodifiableList(drivers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbReport.internal_static_maxpb_Events_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbReport.internal_static_maxpb_Events_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbReport.Events.class, maxpb.MaxpbReport.Events.Builder.class);
    }

    public static com.google.protobuf.Parser<Events> PARSER =
        new com.google.protobuf.AbstractParser<Events>() {
      public Events parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Events(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Events> getParserForType() {
      return PARSER;
    }

    public static final int DEVICE_FIELD_NUMBER = 1;
    private java.util.List<maxpb.MaxpbReport.DeviceEvents> device_;
    /**
     * <code>repeated .maxpb.DeviceEvents device = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<maxpb.MaxpbReport.DeviceEvents> getDeviceList() {
      return device_;
    }
    /**
     * <code>repeated .maxpb.DeviceEvents device = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbReport.DeviceEventsOrBuilder> 
        getDeviceOrBuilderList() {
      return device_;
    }
    /**
     * <code>repeated .maxpb.DeviceEvents device = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public int getDeviceCount() {
      return device_.size();
    }
    /**
     * <code>repeated .maxpb.DeviceEvents device = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.DeviceEvents getDevice(int index) {
      return device_.get(index);
    }
    /**
     * <code>repeated .maxpb.DeviceEvents device = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.DeviceEventsOrBuilder getDeviceOrBuilder(
        int index) {
      return device_.get(index);
    }

    public static final int TELEMETRY_FIELD_NUMBER = 2;
    private java.util.List<maxpb.MaxpbTelemetry.TelemetryEvents> telemetry_;
    /**
     * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<maxpb.MaxpbTelemetry.TelemetryEvents> getTelemetryList() {
      return telemetry_;
    }
    /**
     * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbTelemetry.TelemetryEventsOrBuilder> 
        getTelemetryOrBuilderList() {
      return telemetry_;
    }
    /**
     * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public int getTelemetryCount() {
      return telemetry_.size();
    }
    /**
     * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbTelemetry.TelemetryEvents getTelemetry(int index) {
      return telemetry_.get(index);
    }
    /**
     * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbTelemetry.TelemetryEventsOrBuilder getTelemetryOrBuilder(
        int index) {
      return telemetry_.get(index);
    }

    public static final int GEOGRAPHIC_FIELD_NUMBER = 3;
    private java.util.List<maxpb.MaxpbGeographic.GeographicEvents> geographic_;
    /**
     * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<maxpb.MaxpbGeographic.GeographicEvents> getGeographicList() {
      return geographic_;
    }
    /**
     * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbGeographic.GeographicEventsOrBuilder> 
        getGeographicOrBuilderList() {
      return geographic_;
    }
    /**
     * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public int getGeographicCount() {
      return geographic_.size();
    }
    /**
     * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbGeographic.GeographicEvents getGeographic(int index) {
      return geographic_.get(index);
    }
    /**
     * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbGeographic.GeographicEventsOrBuilder getGeographicOrBuilder(
        int index) {
      return geographic_.get(index);
    }

    public static final int ACTIONS_FIELD_NUMBER = 4;
    private java.util.List<maxpb.MaxpbReport.EmbeddedActionEvents> actions_;
    /**
     * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<maxpb.MaxpbReport.EmbeddedActionEvents> getActionsList() {
      return actions_;
    }
    /**
     * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbReport.EmbeddedActionEventsOrBuilder> 
        getActionsOrBuilderList() {
      return actions_;
    }
    /**
     * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getActionsCount() {
      return actions_.size();
    }
    /**
     * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.EmbeddedActionEvents getActions(int index) {
      return actions_.get(index);
    }
    /**
     * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.EmbeddedActionEventsOrBuilder getActionsOrBuilder(
        int index) {
      return actions_.get(index);
    }

    public static final int DRIVERS_FIELD_NUMBER = 5;
    private java.util.List<maxpb.MaxpbReport.DriverEvents> drivers_;
    /**
     * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<maxpb.MaxpbReport.DriverEvents> getDriversList() {
      return drivers_;
    }
    /**
     * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbReport.DriverEventsOrBuilder> 
        getDriversOrBuilderList() {
      return drivers_;
    }
    /**
     * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getDriversCount() {
      return drivers_.size();
    }
    /**
     * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.DriverEvents getDrivers(int index) {
      return drivers_.get(index);
    }
    /**
     * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.DriverEventsOrBuilder getDriversOrBuilder(
        int index) {
      return drivers_.get(index);
    }

    private void initFields() {
      device_ = java.util.Collections.emptyList();
      telemetry_ = java.util.Collections.emptyList();
      geographic_ = java.util.Collections.emptyList();
      actions_ = java.util.Collections.emptyList();
      drivers_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getDeviceCount(); i++) {
        if (!getDevice(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getTelemetryCount(); i++) {
        if (!getTelemetry(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getGeographicCount(); i++) {
        if (!getGeographic(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getActionsCount(); i++) {
        if (!getActions(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getDriversCount(); i++) {
        if (!getDrivers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < device_.size(); i++) {
        output.writeMessage(1, device_.get(i));
      }
      for (int i = 0; i < telemetry_.size(); i++) {
        output.writeMessage(2, telemetry_.get(i));
      }
      for (int i = 0; i < geographic_.size(); i++) {
        output.writeMessage(3, geographic_.get(i));
      }
      for (int i = 0; i < actions_.size(); i++) {
        output.writeMessage(4, actions_.get(i));
      }
      for (int i = 0; i < drivers_.size(); i++) {
        output.writeMessage(5, drivers_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < device_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, device_.get(i));
      }
      for (int i = 0; i < telemetry_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, telemetry_.get(i));
      }
      for (int i = 0; i < geographic_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, geographic_.get(i));
      }
      for (int i = 0; i < actions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, actions_.get(i));
      }
      for (int i = 0; i < drivers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, drivers_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbReport.Events parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.Events parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.Events parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.Events parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.Events parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.Events parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.Events parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbReport.Events parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.Events parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.Events parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbReport.Events prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.Events}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.Events)
        maxpb.MaxpbReport.EventsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbReport.internal_static_maxpb_Events_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbReport.internal_static_maxpb_Events_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbReport.Events.class, maxpb.MaxpbReport.Events.Builder.class);
      }

      // Construct using maxpb.MaxpbReport.Events.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDeviceFieldBuilder();
          getTelemetryFieldBuilder();
          getGeographicFieldBuilder();
          getActionsFieldBuilder();
          getDriversFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (deviceBuilder_ == null) {
          device_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          deviceBuilder_.clear();
        }
        if (telemetryBuilder_ == null) {
          telemetry_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          telemetryBuilder_.clear();
        }
        if (geographicBuilder_ == null) {
          geographic_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          geographicBuilder_.clear();
        }
        if (actionsBuilder_ == null) {
          actions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          actionsBuilder_.clear();
        }
        if (driversBuilder_ == null) {
          drivers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          driversBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbReport.internal_static_maxpb_Events_descriptor;
      }

      public maxpb.MaxpbReport.Events getDefaultInstanceForType() {
        return maxpb.MaxpbReport.Events.getDefaultInstance();
      }

      public maxpb.MaxpbReport.Events build() {
        maxpb.MaxpbReport.Events result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbReport.Events buildPartial() {
        maxpb.MaxpbReport.Events result = new maxpb.MaxpbReport.Events(this);
        int from_bitField0_ = bitField0_;
        if (deviceBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            device_ = java.util.Collections.unmodifiableList(device_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.device_ = device_;
        } else {
          result.device_ = deviceBuilder_.build();
        }
        if (telemetryBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            telemetry_ = java.util.Collections.unmodifiableList(telemetry_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.telemetry_ = telemetry_;
        } else {
          result.telemetry_ = telemetryBuilder_.build();
        }
        if (geographicBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            geographic_ = java.util.Collections.unmodifiableList(geographic_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.geographic_ = geographic_;
        } else {
          result.geographic_ = geographicBuilder_.build();
        }
        if (actionsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            actions_ = java.util.Collections.unmodifiableList(actions_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.actions_ = actions_;
        } else {
          result.actions_ = actionsBuilder_.build();
        }
        if (driversBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            drivers_ = java.util.Collections.unmodifiableList(drivers_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.drivers_ = drivers_;
        } else {
          result.drivers_ = driversBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbReport.Events) {
          return mergeFrom((maxpb.MaxpbReport.Events)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbReport.Events other) {
        if (other == maxpb.MaxpbReport.Events.getDefaultInstance()) return this;
        if (deviceBuilder_ == null) {
          if (!other.device_.isEmpty()) {
            if (device_.isEmpty()) {
              device_ = other.device_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDeviceIsMutable();
              device_.addAll(other.device_);
            }
            onChanged();
          }
        } else {
          if (!other.device_.isEmpty()) {
            if (deviceBuilder_.isEmpty()) {
              deviceBuilder_.dispose();
              deviceBuilder_ = null;
              device_ = other.device_;
              bitField0_ = (bitField0_ & ~0x00000001);
              deviceBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDeviceFieldBuilder() : null;
            } else {
              deviceBuilder_.addAllMessages(other.device_);
            }
          }
        }
        if (telemetryBuilder_ == null) {
          if (!other.telemetry_.isEmpty()) {
            if (telemetry_.isEmpty()) {
              telemetry_ = other.telemetry_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTelemetryIsMutable();
              telemetry_.addAll(other.telemetry_);
            }
            onChanged();
          }
        } else {
          if (!other.telemetry_.isEmpty()) {
            if (telemetryBuilder_.isEmpty()) {
              telemetryBuilder_.dispose();
              telemetryBuilder_ = null;
              telemetry_ = other.telemetry_;
              bitField0_ = (bitField0_ & ~0x00000002);
              telemetryBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTelemetryFieldBuilder() : null;
            } else {
              telemetryBuilder_.addAllMessages(other.telemetry_);
            }
          }
        }
        if (geographicBuilder_ == null) {
          if (!other.geographic_.isEmpty()) {
            if (geographic_.isEmpty()) {
              geographic_ = other.geographic_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureGeographicIsMutable();
              geographic_.addAll(other.geographic_);
            }
            onChanged();
          }
        } else {
          if (!other.geographic_.isEmpty()) {
            if (geographicBuilder_.isEmpty()) {
              geographicBuilder_.dispose();
              geographicBuilder_ = null;
              geographic_ = other.geographic_;
              bitField0_ = (bitField0_ & ~0x00000004);
              geographicBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGeographicFieldBuilder() : null;
            } else {
              geographicBuilder_.addAllMessages(other.geographic_);
            }
          }
        }
        if (actionsBuilder_ == null) {
          if (!other.actions_.isEmpty()) {
            if (actions_.isEmpty()) {
              actions_ = other.actions_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureActionsIsMutable();
              actions_.addAll(other.actions_);
            }
            onChanged();
          }
        } else {
          if (!other.actions_.isEmpty()) {
            if (actionsBuilder_.isEmpty()) {
              actionsBuilder_.dispose();
              actionsBuilder_ = null;
              actions_ = other.actions_;
              bitField0_ = (bitField0_ & ~0x00000008);
              actionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getActionsFieldBuilder() : null;
            } else {
              actionsBuilder_.addAllMessages(other.actions_);
            }
          }
        }
        if (driversBuilder_ == null) {
          if (!other.drivers_.isEmpty()) {
            if (drivers_.isEmpty()) {
              drivers_ = other.drivers_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureDriversIsMutable();
              drivers_.addAll(other.drivers_);
            }
            onChanged();
          }
        } else {
          if (!other.drivers_.isEmpty()) {
            if (driversBuilder_.isEmpty()) {
              driversBuilder_.dispose();
              driversBuilder_ = null;
              drivers_ = other.drivers_;
              bitField0_ = (bitField0_ & ~0x00000010);
              driversBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDriversFieldBuilder() : null;
            } else {
              driversBuilder_.addAllMessages(other.drivers_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getDeviceCount(); i++) {
          if (!getDevice(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getTelemetryCount(); i++) {
          if (!getTelemetry(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getGeographicCount(); i++) {
          if (!getGeographic(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getActionsCount(); i++) {
          if (!getActions(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getDriversCount(); i++) {
          if (!getDrivers(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbReport.Events parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbReport.Events) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<maxpb.MaxpbReport.DeviceEvents> device_ =
        java.util.Collections.emptyList();
      private void ensureDeviceIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          device_ = new java.util.ArrayList<maxpb.MaxpbReport.DeviceEvents>(device_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.DeviceEvents, maxpb.MaxpbReport.DeviceEvents.Builder, maxpb.MaxpbReport.DeviceEventsOrBuilder> deviceBuilder_;

      /**
       * <code>repeated .maxpb.DeviceEvents device = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.DeviceEvents> getDeviceList() {
        if (deviceBuilder_ == null) {
          return java.util.Collections.unmodifiableList(device_);
        } else {
          return deviceBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.DeviceEvents device = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public int getDeviceCount() {
        if (deviceBuilder_ == null) {
          return device_.size();
        } else {
          return deviceBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.DeviceEvents device = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.DeviceEvents getDevice(int index) {
        if (deviceBuilder_ == null) {
          return device_.get(index);
        } else {
          return deviceBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.DeviceEvents device = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setDevice(
          int index, maxpb.MaxpbReport.DeviceEvents value) {
        if (deviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeviceIsMutable();
          device_.set(index, value);
          onChanged();
        } else {
          deviceBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceEvents device = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setDevice(
          int index, maxpb.MaxpbReport.DeviceEvents.Builder builderForValue) {
        if (deviceBuilder_ == null) {
          ensureDeviceIsMutable();
          device_.set(index, builderForValue.build());
          onChanged();
        } else {
          deviceBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceEvents device = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addDevice(maxpb.MaxpbReport.DeviceEvents value) {
        if (deviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeviceIsMutable();
          device_.add(value);
          onChanged();
        } else {
          deviceBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceEvents device = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addDevice(
          int index, maxpb.MaxpbReport.DeviceEvents value) {
        if (deviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeviceIsMutable();
          device_.add(index, value);
          onChanged();
        } else {
          deviceBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceEvents device = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addDevice(
          maxpb.MaxpbReport.DeviceEvents.Builder builderForValue) {
        if (deviceBuilder_ == null) {
          ensureDeviceIsMutable();
          device_.add(builderForValue.build());
          onChanged();
        } else {
          deviceBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceEvents device = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addDevice(
          int index, maxpb.MaxpbReport.DeviceEvents.Builder builderForValue) {
        if (deviceBuilder_ == null) {
          ensureDeviceIsMutable();
          device_.add(index, builderForValue.build());
          onChanged();
        } else {
          deviceBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceEvents device = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addAllDevice(
          java.lang.Iterable<? extends maxpb.MaxpbReport.DeviceEvents> values) {
        if (deviceBuilder_ == null) {
          ensureDeviceIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, device_);
          onChanged();
        } else {
          deviceBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceEvents device = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearDevice() {
        if (deviceBuilder_ == null) {
          device_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          deviceBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceEvents device = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder removeDevice(int index) {
        if (deviceBuilder_ == null) {
          ensureDeviceIsMutable();
          device_.remove(index);
          onChanged();
        } else {
          deviceBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DeviceEvents device = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.DeviceEvents.Builder getDeviceBuilder(
          int index) {
        return getDeviceFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.DeviceEvents device = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.DeviceEventsOrBuilder getDeviceOrBuilder(
          int index) {
        if (deviceBuilder_ == null) {
          return device_.get(index);  } else {
          return deviceBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.DeviceEvents device = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbReport.DeviceEventsOrBuilder> 
           getDeviceOrBuilderList() {
        if (deviceBuilder_ != null) {
          return deviceBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(device_);
        }
      }
      /**
       * <code>repeated .maxpb.DeviceEvents device = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.DeviceEvents.Builder addDeviceBuilder() {
        return getDeviceFieldBuilder().addBuilder(
            maxpb.MaxpbReport.DeviceEvents.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.DeviceEvents device = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.DeviceEvents.Builder addDeviceBuilder(
          int index) {
        return getDeviceFieldBuilder().addBuilder(
            index, maxpb.MaxpbReport.DeviceEvents.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.DeviceEvents device = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.DeviceEvents.Builder> 
           getDeviceBuilderList() {
        return getDeviceFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.DeviceEvents, maxpb.MaxpbReport.DeviceEvents.Builder, maxpb.MaxpbReport.DeviceEventsOrBuilder> 
          getDeviceFieldBuilder() {
        if (deviceBuilder_ == null) {
          deviceBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbReport.DeviceEvents, maxpb.MaxpbReport.DeviceEvents.Builder, maxpb.MaxpbReport.DeviceEventsOrBuilder>(
                  device_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          device_ = null;
        }
        return deviceBuilder_;
      }

      private java.util.List<maxpb.MaxpbTelemetry.TelemetryEvents> telemetry_ =
        java.util.Collections.emptyList();
      private void ensureTelemetryIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          telemetry_ = new java.util.ArrayList<maxpb.MaxpbTelemetry.TelemetryEvents>(telemetry_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbTelemetry.TelemetryEvents, maxpb.MaxpbTelemetry.TelemetryEvents.Builder, maxpb.MaxpbTelemetry.TelemetryEventsOrBuilder> telemetryBuilder_;

      /**
       * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbTelemetry.TelemetryEvents> getTelemetryList() {
        if (telemetryBuilder_ == null) {
          return java.util.Collections.unmodifiableList(telemetry_);
        } else {
          return telemetryBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public int getTelemetryCount() {
        if (telemetryBuilder_ == null) {
          return telemetry_.size();
        } else {
          return telemetryBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbTelemetry.TelemetryEvents getTelemetry(int index) {
        if (telemetryBuilder_ == null) {
          return telemetry_.get(index);
        } else {
          return telemetryBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setTelemetry(
          int index, maxpb.MaxpbTelemetry.TelemetryEvents value) {
        if (telemetryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTelemetryIsMutable();
          telemetry_.set(index, value);
          onChanged();
        } else {
          telemetryBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setTelemetry(
          int index, maxpb.MaxpbTelemetry.TelemetryEvents.Builder builderForValue) {
        if (telemetryBuilder_ == null) {
          ensureTelemetryIsMutable();
          telemetry_.set(index, builderForValue.build());
          onChanged();
        } else {
          telemetryBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addTelemetry(maxpb.MaxpbTelemetry.TelemetryEvents value) {
        if (telemetryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTelemetryIsMutable();
          telemetry_.add(value);
          onChanged();
        } else {
          telemetryBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addTelemetry(
          int index, maxpb.MaxpbTelemetry.TelemetryEvents value) {
        if (telemetryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTelemetryIsMutable();
          telemetry_.add(index, value);
          onChanged();
        } else {
          telemetryBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addTelemetry(
          maxpb.MaxpbTelemetry.TelemetryEvents.Builder builderForValue) {
        if (telemetryBuilder_ == null) {
          ensureTelemetryIsMutable();
          telemetry_.add(builderForValue.build());
          onChanged();
        } else {
          telemetryBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addTelemetry(
          int index, maxpb.MaxpbTelemetry.TelemetryEvents.Builder builderForValue) {
        if (telemetryBuilder_ == null) {
          ensureTelemetryIsMutable();
          telemetry_.add(index, builderForValue.build());
          onChanged();
        } else {
          telemetryBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addAllTelemetry(
          java.lang.Iterable<? extends maxpb.MaxpbTelemetry.TelemetryEvents> values) {
        if (telemetryBuilder_ == null) {
          ensureTelemetryIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, telemetry_);
          onChanged();
        } else {
          telemetryBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearTelemetry() {
        if (telemetryBuilder_ == null) {
          telemetry_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          telemetryBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder removeTelemetry(int index) {
        if (telemetryBuilder_ == null) {
          ensureTelemetryIsMutable();
          telemetry_.remove(index);
          onChanged();
        } else {
          telemetryBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbTelemetry.TelemetryEvents.Builder getTelemetryBuilder(
          int index) {
        return getTelemetryFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbTelemetry.TelemetryEventsOrBuilder getTelemetryOrBuilder(
          int index) {
        if (telemetryBuilder_ == null) {
          return telemetry_.get(index);  } else {
          return telemetryBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbTelemetry.TelemetryEventsOrBuilder> 
           getTelemetryOrBuilderList() {
        if (telemetryBuilder_ != null) {
          return telemetryBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(telemetry_);
        }
      }
      /**
       * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbTelemetry.TelemetryEvents.Builder addTelemetryBuilder() {
        return getTelemetryFieldBuilder().addBuilder(
            maxpb.MaxpbTelemetry.TelemetryEvents.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbTelemetry.TelemetryEvents.Builder addTelemetryBuilder(
          int index) {
        return getTelemetryFieldBuilder().addBuilder(
            index, maxpb.MaxpbTelemetry.TelemetryEvents.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.TelemetryEvents telemetry = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbTelemetry.TelemetryEvents.Builder> 
           getTelemetryBuilderList() {
        return getTelemetryFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbTelemetry.TelemetryEvents, maxpb.MaxpbTelemetry.TelemetryEvents.Builder, maxpb.MaxpbTelemetry.TelemetryEventsOrBuilder> 
          getTelemetryFieldBuilder() {
        if (telemetryBuilder_ == null) {
          telemetryBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbTelemetry.TelemetryEvents, maxpb.MaxpbTelemetry.TelemetryEvents.Builder, maxpb.MaxpbTelemetry.TelemetryEventsOrBuilder>(
                  telemetry_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          telemetry_ = null;
        }
        return telemetryBuilder_;
      }

      private java.util.List<maxpb.MaxpbGeographic.GeographicEvents> geographic_ =
        java.util.Collections.emptyList();
      private void ensureGeographicIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          geographic_ = new java.util.ArrayList<maxpb.MaxpbGeographic.GeographicEvents>(geographic_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbGeographic.GeographicEvents, maxpb.MaxpbGeographic.GeographicEvents.Builder, maxpb.MaxpbGeographic.GeographicEventsOrBuilder> geographicBuilder_;

      /**
       * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbGeographic.GeographicEvents> getGeographicList() {
        if (geographicBuilder_ == null) {
          return java.util.Collections.unmodifiableList(geographic_);
        } else {
          return geographicBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public int getGeographicCount() {
        if (geographicBuilder_ == null) {
          return geographic_.size();
        } else {
          return geographicBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGeographic.GeographicEvents getGeographic(int index) {
        if (geographicBuilder_ == null) {
          return geographic_.get(index);
        } else {
          return geographicBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setGeographic(
          int index, maxpb.MaxpbGeographic.GeographicEvents value) {
        if (geographicBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeographicIsMutable();
          geographic_.set(index, value);
          onChanged();
        } else {
          geographicBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setGeographic(
          int index, maxpb.MaxpbGeographic.GeographicEvents.Builder builderForValue) {
        if (geographicBuilder_ == null) {
          ensureGeographicIsMutable();
          geographic_.set(index, builderForValue.build());
          onChanged();
        } else {
          geographicBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addGeographic(maxpb.MaxpbGeographic.GeographicEvents value) {
        if (geographicBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeographicIsMutable();
          geographic_.add(value);
          onChanged();
        } else {
          geographicBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addGeographic(
          int index, maxpb.MaxpbGeographic.GeographicEvents value) {
        if (geographicBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeographicIsMutable();
          geographic_.add(index, value);
          onChanged();
        } else {
          geographicBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addGeographic(
          maxpb.MaxpbGeographic.GeographicEvents.Builder builderForValue) {
        if (geographicBuilder_ == null) {
          ensureGeographicIsMutable();
          geographic_.add(builderForValue.build());
          onChanged();
        } else {
          geographicBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addGeographic(
          int index, maxpb.MaxpbGeographic.GeographicEvents.Builder builderForValue) {
        if (geographicBuilder_ == null) {
          ensureGeographicIsMutable();
          geographic_.add(index, builderForValue.build());
          onChanged();
        } else {
          geographicBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addAllGeographic(
          java.lang.Iterable<? extends maxpb.MaxpbGeographic.GeographicEvents> values) {
        if (geographicBuilder_ == null) {
          ensureGeographicIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, geographic_);
          onChanged();
        } else {
          geographicBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearGeographic() {
        if (geographicBuilder_ == null) {
          geographic_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          geographicBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder removeGeographic(int index) {
        if (geographicBuilder_ == null) {
          ensureGeographicIsMutable();
          geographic_.remove(index);
          onChanged();
        } else {
          geographicBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGeographic.GeographicEvents.Builder getGeographicBuilder(
          int index) {
        return getGeographicFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGeographic.GeographicEventsOrBuilder getGeographicOrBuilder(
          int index) {
        if (geographicBuilder_ == null) {
          return geographic_.get(index);  } else {
          return geographicBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbGeographic.GeographicEventsOrBuilder> 
           getGeographicOrBuilderList() {
        if (geographicBuilder_ != null) {
          return geographicBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(geographic_);
        }
      }
      /**
       * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGeographic.GeographicEvents.Builder addGeographicBuilder() {
        return getGeographicFieldBuilder().addBuilder(
            maxpb.MaxpbGeographic.GeographicEvents.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGeographic.GeographicEvents.Builder addGeographicBuilder(
          int index) {
        return getGeographicFieldBuilder().addBuilder(
            index, maxpb.MaxpbGeographic.GeographicEvents.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.GeographicEvents geographic = 3;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbGeographic.GeographicEvents.Builder> 
           getGeographicBuilderList() {
        return getGeographicFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbGeographic.GeographicEvents, maxpb.MaxpbGeographic.GeographicEvents.Builder, maxpb.MaxpbGeographic.GeographicEventsOrBuilder> 
          getGeographicFieldBuilder() {
        if (geographicBuilder_ == null) {
          geographicBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbGeographic.GeographicEvents, maxpb.MaxpbGeographic.GeographicEvents.Builder, maxpb.MaxpbGeographic.GeographicEventsOrBuilder>(
                  geographic_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          geographic_ = null;
        }
        return geographicBuilder_;
      }

      private java.util.List<maxpb.MaxpbReport.EmbeddedActionEvents> actions_ =
        java.util.Collections.emptyList();
      private void ensureActionsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          actions_ = new java.util.ArrayList<maxpb.MaxpbReport.EmbeddedActionEvents>(actions_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.EmbeddedActionEvents, maxpb.MaxpbReport.EmbeddedActionEvents.Builder, maxpb.MaxpbReport.EmbeddedActionEventsOrBuilder> actionsBuilder_;

      /**
       * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.EmbeddedActionEvents> getActionsList() {
        if (actionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(actions_);
        } else {
          return actionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getActionsCount() {
        if (actionsBuilder_ == null) {
          return actions_.size();
        } else {
          return actionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.EmbeddedActionEvents getActions(int index) {
        if (actionsBuilder_ == null) {
          return actions_.get(index);
        } else {
          return actionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setActions(
          int index, maxpb.MaxpbReport.EmbeddedActionEvents value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.set(index, value);
          onChanged();
        } else {
          actionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setActions(
          int index, maxpb.MaxpbReport.EmbeddedActionEvents.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.set(index, builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addActions(maxpb.MaxpbReport.EmbeddedActionEvents value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.add(value);
          onChanged();
        } else {
          actionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addActions(
          int index, maxpb.MaxpbReport.EmbeddedActionEvents value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.add(index, value);
          onChanged();
        } else {
          actionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addActions(
          maxpb.MaxpbReport.EmbeddedActionEvents.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.add(builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addActions(
          int index, maxpb.MaxpbReport.EmbeddedActionEvents.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.add(index, builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addAllActions(
          java.lang.Iterable<? extends maxpb.MaxpbReport.EmbeddedActionEvents> values) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, actions_);
          onChanged();
        } else {
          actionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearActions() {
        if (actionsBuilder_ == null) {
          actions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          actionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder removeActions(int index) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.remove(index);
          onChanged();
        } else {
          actionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.EmbeddedActionEvents.Builder getActionsBuilder(
          int index) {
        return getActionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.EmbeddedActionEventsOrBuilder getActionsOrBuilder(
          int index) {
        if (actionsBuilder_ == null) {
          return actions_.get(index);  } else {
          return actionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbReport.EmbeddedActionEventsOrBuilder> 
           getActionsOrBuilderList() {
        if (actionsBuilder_ != null) {
          return actionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(actions_);
        }
      }
      /**
       * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.EmbeddedActionEvents.Builder addActionsBuilder() {
        return getActionsFieldBuilder().addBuilder(
            maxpb.MaxpbReport.EmbeddedActionEvents.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.EmbeddedActionEvents.Builder addActionsBuilder(
          int index) {
        return getActionsFieldBuilder().addBuilder(
            index, maxpb.MaxpbReport.EmbeddedActionEvents.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.EmbeddedActionEvents actions = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.EmbeddedActionEvents.Builder> 
           getActionsBuilderList() {
        return getActionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.EmbeddedActionEvents, maxpb.MaxpbReport.EmbeddedActionEvents.Builder, maxpb.MaxpbReport.EmbeddedActionEventsOrBuilder> 
          getActionsFieldBuilder() {
        if (actionsBuilder_ == null) {
          actionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbReport.EmbeddedActionEvents, maxpb.MaxpbReport.EmbeddedActionEvents.Builder, maxpb.MaxpbReport.EmbeddedActionEventsOrBuilder>(
                  actions_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          actions_ = null;
        }
        return actionsBuilder_;
      }

      private java.util.List<maxpb.MaxpbReport.DriverEvents> drivers_ =
        java.util.Collections.emptyList();
      private void ensureDriversIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          drivers_ = new java.util.ArrayList<maxpb.MaxpbReport.DriverEvents>(drivers_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.DriverEvents, maxpb.MaxpbReport.DriverEvents.Builder, maxpb.MaxpbReport.DriverEventsOrBuilder> driversBuilder_;

      /**
       * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.DriverEvents> getDriversList() {
        if (driversBuilder_ == null) {
          return java.util.Collections.unmodifiableList(drivers_);
        } else {
          return driversBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getDriversCount() {
        if (driversBuilder_ == null) {
          return drivers_.size();
        } else {
          return driversBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.DriverEvents getDrivers(int index) {
        if (driversBuilder_ == null) {
          return drivers_.get(index);
        } else {
          return driversBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setDrivers(
          int index, maxpb.MaxpbReport.DriverEvents value) {
        if (driversBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDriversIsMutable();
          drivers_.set(index, value);
          onChanged();
        } else {
          driversBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setDrivers(
          int index, maxpb.MaxpbReport.DriverEvents.Builder builderForValue) {
        if (driversBuilder_ == null) {
          ensureDriversIsMutable();
          drivers_.set(index, builderForValue.build());
          onChanged();
        } else {
          driversBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addDrivers(maxpb.MaxpbReport.DriverEvents value) {
        if (driversBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDriversIsMutable();
          drivers_.add(value);
          onChanged();
        } else {
          driversBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addDrivers(
          int index, maxpb.MaxpbReport.DriverEvents value) {
        if (driversBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDriversIsMutable();
          drivers_.add(index, value);
          onChanged();
        } else {
          driversBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addDrivers(
          maxpb.MaxpbReport.DriverEvents.Builder builderForValue) {
        if (driversBuilder_ == null) {
          ensureDriversIsMutable();
          drivers_.add(builderForValue.build());
          onChanged();
        } else {
          driversBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addDrivers(
          int index, maxpb.MaxpbReport.DriverEvents.Builder builderForValue) {
        if (driversBuilder_ == null) {
          ensureDriversIsMutable();
          drivers_.add(index, builderForValue.build());
          onChanged();
        } else {
          driversBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addAllDrivers(
          java.lang.Iterable<? extends maxpb.MaxpbReport.DriverEvents> values) {
        if (driversBuilder_ == null) {
          ensureDriversIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, drivers_);
          onChanged();
        } else {
          driversBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearDrivers() {
        if (driversBuilder_ == null) {
          drivers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          driversBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder removeDrivers(int index) {
        if (driversBuilder_ == null) {
          ensureDriversIsMutable();
          drivers_.remove(index);
          onChanged();
        } else {
          driversBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.DriverEvents.Builder getDriversBuilder(
          int index) {
        return getDriversFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.DriverEventsOrBuilder getDriversOrBuilder(
          int index) {
        if (driversBuilder_ == null) {
          return drivers_.get(index);  } else {
          return driversBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbReport.DriverEventsOrBuilder> 
           getDriversOrBuilderList() {
        if (driversBuilder_ != null) {
          return driversBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(drivers_);
        }
      }
      /**
       * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.DriverEvents.Builder addDriversBuilder() {
        return getDriversFieldBuilder().addBuilder(
            maxpb.MaxpbReport.DriverEvents.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.DriverEvents.Builder addDriversBuilder(
          int index) {
        return getDriversFieldBuilder().addBuilder(
            index, maxpb.MaxpbReport.DriverEvents.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.DriverEvents drivers = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.DriverEvents.Builder> 
           getDriversBuilderList() {
        return getDriversFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.DriverEvents, maxpb.MaxpbReport.DriverEvents.Builder, maxpb.MaxpbReport.DriverEventsOrBuilder> 
          getDriversFieldBuilder() {
        if (driversBuilder_ == null) {
          driversBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbReport.DriverEvents, maxpb.MaxpbReport.DriverEvents.Builder, maxpb.MaxpbReport.DriverEventsOrBuilder>(
                  drivers_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          drivers_ = null;
        }
        return driversBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.Events)
    }

    static {
      defaultInstance = new Events(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.Events)
  }

  public interface PositionInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.PositionInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .maxpb.PositionSource positionSource = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasPositionSource();
    /**
     * <code>required .maxpb.PositionSource positionSource = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.PositionSource getPositionSource();

    /**
     * <code>required .maxpb.PositionFormat positionFormat = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasPositionFormat();
    /**
     * <code>required .maxpb.PositionFormat positionFormat = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.PositionFormat getPositionFormat();

    /**
     * <code>required sfixed32 latitude = 3;</code>
     *
     * <pre>
     *&#47; Degrees.decimalsOfDegrees * 10,000,000 SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasLatitude();
    /**
     * <code>required sfixed32 latitude = 3;</code>
     *
     * <pre>
     *&#47; Degrees.decimalsOfDegrees * 10,000,000 SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    int getLatitude();

    /**
     * <code>required sfixed32 longitude = 4;</code>
     *
     * <pre>
     *&#47; Degrees.decimalsOfDegrees * 10,000,000 SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasLongitude();
    /**
     * <code>required sfixed32 longitude = 4;</code>
     *
     * <pre>
     *&#47; Degrees.decimalsOfDegrees * 10,000,000 SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    int getLongitude();

    /**
     * <code>optional int32 altitude = 5;</code>
     *
     * <pre>
     *&#47; Meters SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasAltitude();
    /**
     * <code>optional int32 altitude = 5;</code>
     *
     * <pre>
     *&#47; Meters SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getAltitude();

    /**
     * <code>optional int32 estimatedPositionError = 6;</code>
     *
     * <pre>
     *&#47; 2DRMS EPE error (Meters) SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasEstimatedPositionError();
    /**
     * <code>optional int32 estimatedPositionError = 6;</code>
     *
     * <pre>
     *&#47; 2DRMS EPE error (Meters) SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getEstimatedPositionError();

    /**
     * <code>optional int32 directionDegrees = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasDirectionDegrees();
    /**
     * <code>optional int32 directionDegrees = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getDirectionDegrees();

    /**
     * <code>optional .maxpb.Heading directionHeading = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, GATEWAY
     * </pre>
     */
    boolean hasDirectionHeading();
    /**
     * <code>optional .maxpb.Heading directionHeading = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, GATEWAY
     * </pre>
     */
    maxpb.MaxpbGps.Heading getDirectionHeading();
  }
  /**
   * Protobuf type {@code maxpb.PositionInfo}
   */
  public static final class PositionInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.PositionInfo)
      PositionInfoOrBuilder {
    // Use PositionInfo.newBuilder() to construct.
    private PositionInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PositionInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PositionInfo defaultInstance;
    public static PositionInfo getDefaultInstance() {
      return defaultInstance;
    }

    public PositionInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PositionInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              maxpb.MaxpbReport.PositionSource value = maxpb.MaxpbReport.PositionSource.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                positionSource_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              maxpb.MaxpbReport.PositionFormat value = maxpb.MaxpbReport.PositionFormat.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                positionFormat_ = value;
              }
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              latitude_ = input.readSFixed32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              longitude_ = input.readSFixed32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              altitude_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              estimatedPositionError_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              directionDegrees_ = input.readInt32();
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              maxpb.MaxpbGps.Heading value = maxpb.MaxpbGps.Heading.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                directionHeading_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbReport.internal_static_maxpb_PositionInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbReport.internal_static_maxpb_PositionInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbReport.PositionInfo.class, maxpb.MaxpbReport.PositionInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<PositionInfo> PARSER =
        new com.google.protobuf.AbstractParser<PositionInfo>() {
      public PositionInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PositionInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PositionInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int POSITIONSOURCE_FIELD_NUMBER = 1;
    private maxpb.MaxpbReport.PositionSource positionSource_;
    /**
     * <code>required .maxpb.PositionSource positionSource = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasPositionSource() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .maxpb.PositionSource positionSource = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.PositionSource getPositionSource() {
      return positionSource_;
    }

    public static final int POSITIONFORMAT_FIELD_NUMBER = 2;
    private maxpb.MaxpbReport.PositionFormat positionFormat_;
    /**
     * <code>required .maxpb.PositionFormat positionFormat = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasPositionFormat() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .maxpb.PositionFormat positionFormat = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.PositionFormat getPositionFormat() {
      return positionFormat_;
    }

    public static final int LATITUDE_FIELD_NUMBER = 3;
    private int latitude_;
    /**
     * <code>required sfixed32 latitude = 3;</code>
     *
     * <pre>
     *&#47; Degrees.decimalsOfDegrees * 10,000,000 SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required sfixed32 latitude = 3;</code>
     *
     * <pre>
     *&#47; Degrees.decimalsOfDegrees * 10,000,000 SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public int getLatitude() {
      return latitude_;
    }

    public static final int LONGITUDE_FIELD_NUMBER = 4;
    private int longitude_;
    /**
     * <code>required sfixed32 longitude = 4;</code>
     *
     * <pre>
     *&#47; Degrees.decimalsOfDegrees * 10,000,000 SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required sfixed32 longitude = 4;</code>
     *
     * <pre>
     *&#47; Degrees.decimalsOfDegrees * 10,000,000 SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public int getLongitude() {
      return longitude_;
    }

    public static final int ALTITUDE_FIELD_NUMBER = 5;
    private int altitude_;
    /**
     * <code>optional int32 altitude = 5;</code>
     *
     * <pre>
     *&#47; Meters SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasAltitude() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 altitude = 5;</code>
     *
     * <pre>
     *&#47; Meters SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getAltitude() {
      return altitude_;
    }

    public static final int ESTIMATEDPOSITIONERROR_FIELD_NUMBER = 6;
    private int estimatedPositionError_;
    /**
     * <code>optional int32 estimatedPositionError = 6;</code>
     *
     * <pre>
     *&#47; 2DRMS EPE error (Meters) SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasEstimatedPositionError() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 estimatedPositionError = 6;</code>
     *
     * <pre>
     *&#47; 2DRMS EPE error (Meters) SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getEstimatedPositionError() {
      return estimatedPositionError_;
    }

    public static final int DIRECTIONDEGREES_FIELD_NUMBER = 7;
    private int directionDegrees_;
    /**
     * <code>optional int32 directionDegrees = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasDirectionDegrees() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 directionDegrees = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getDirectionDegrees() {
      return directionDegrees_;
    }

    public static final int DIRECTIONHEADING_FIELD_NUMBER = 8;
    private maxpb.MaxpbGps.Heading directionHeading_;
    /**
     * <code>optional .maxpb.Heading directionHeading = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, GATEWAY
     * </pre>
     */
    public boolean hasDirectionHeading() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .maxpb.Heading directionHeading = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, GATEWAY
     * </pre>
     */
    public maxpb.MaxpbGps.Heading getDirectionHeading() {
      return directionHeading_;
    }

    private void initFields() {
      positionSource_ = maxpb.MaxpbReport.PositionSource.PS_GPS;
      positionFormat_ = maxpb.MaxpbReport.PositionFormat.PF_SOURCE_DEFAULT;
      latitude_ = 0;
      longitude_ = 0;
      altitude_ = 0;
      estimatedPositionError_ = 0;
      directionDegrees_ = 0;
      directionHeading_ = maxpb.MaxpbGps.Heading.H_NORTH;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPositionSource()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPositionFormat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLatitude()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLongitude()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, positionSource_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, positionFormat_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSFixed32(3, latitude_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSFixed32(4, longitude_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, altitude_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, estimatedPositionError_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, directionDegrees_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(8, directionHeading_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, positionSource_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, positionFormat_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(3, latitude_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(4, longitude_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, altitude_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, estimatedPositionError_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, directionDegrees_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, directionHeading_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbReport.PositionInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.PositionInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.PositionInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.PositionInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.PositionInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.PositionInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.PositionInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbReport.PositionInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.PositionInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.PositionInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbReport.PositionInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.PositionInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.PositionInfo)
        maxpb.MaxpbReport.PositionInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbReport.internal_static_maxpb_PositionInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbReport.internal_static_maxpb_PositionInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbReport.PositionInfo.class, maxpb.MaxpbReport.PositionInfo.Builder.class);
      }

      // Construct using maxpb.MaxpbReport.PositionInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        positionSource_ = maxpb.MaxpbReport.PositionSource.PS_GPS;
        bitField0_ = (bitField0_ & ~0x00000001);
        positionFormat_ = maxpb.MaxpbReport.PositionFormat.PF_SOURCE_DEFAULT;
        bitField0_ = (bitField0_ & ~0x00000002);
        latitude_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        longitude_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        altitude_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        estimatedPositionError_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        directionDegrees_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        directionHeading_ = maxpb.MaxpbGps.Heading.H_NORTH;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbReport.internal_static_maxpb_PositionInfo_descriptor;
      }

      public maxpb.MaxpbReport.PositionInfo getDefaultInstanceForType() {
        return maxpb.MaxpbReport.PositionInfo.getDefaultInstance();
      }

      public maxpb.MaxpbReport.PositionInfo build() {
        maxpb.MaxpbReport.PositionInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbReport.PositionInfo buildPartial() {
        maxpb.MaxpbReport.PositionInfo result = new maxpb.MaxpbReport.PositionInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.positionSource_ = positionSource_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.positionFormat_ = positionFormat_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.latitude_ = latitude_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.longitude_ = longitude_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.altitude_ = altitude_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.estimatedPositionError_ = estimatedPositionError_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.directionDegrees_ = directionDegrees_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.directionHeading_ = directionHeading_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbReport.PositionInfo) {
          return mergeFrom((maxpb.MaxpbReport.PositionInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbReport.PositionInfo other) {
        if (other == maxpb.MaxpbReport.PositionInfo.getDefaultInstance()) return this;
        if (other.hasPositionSource()) {
          setPositionSource(other.getPositionSource());
        }
        if (other.hasPositionFormat()) {
          setPositionFormat(other.getPositionFormat());
        }
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        if (other.hasAltitude()) {
          setAltitude(other.getAltitude());
        }
        if (other.hasEstimatedPositionError()) {
          setEstimatedPositionError(other.getEstimatedPositionError());
        }
        if (other.hasDirectionDegrees()) {
          setDirectionDegrees(other.getDirectionDegrees());
        }
        if (other.hasDirectionHeading()) {
          setDirectionHeading(other.getDirectionHeading());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPositionSource()) {
          
          return false;
        }
        if (!hasPositionFormat()) {
          
          return false;
        }
        if (!hasLatitude()) {
          
          return false;
        }
        if (!hasLongitude()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbReport.PositionInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbReport.PositionInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private maxpb.MaxpbReport.PositionSource positionSource_ = maxpb.MaxpbReport.PositionSource.PS_GPS;
      /**
       * <code>required .maxpb.PositionSource positionSource = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasPositionSource() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .maxpb.PositionSource positionSource = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.PositionSource getPositionSource() {
        return positionSource_;
      }
      /**
       * <code>required .maxpb.PositionSource positionSource = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setPositionSource(maxpb.MaxpbReport.PositionSource value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        positionSource_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .maxpb.PositionSource positionSource = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearPositionSource() {
        bitField0_ = (bitField0_ & ~0x00000001);
        positionSource_ = maxpb.MaxpbReport.PositionSource.PS_GPS;
        onChanged();
        return this;
      }

      private maxpb.MaxpbReport.PositionFormat positionFormat_ = maxpb.MaxpbReport.PositionFormat.PF_SOURCE_DEFAULT;
      /**
       * <code>required .maxpb.PositionFormat positionFormat = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasPositionFormat() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .maxpb.PositionFormat positionFormat = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.PositionFormat getPositionFormat() {
        return positionFormat_;
      }
      /**
       * <code>required .maxpb.PositionFormat positionFormat = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setPositionFormat(maxpb.MaxpbReport.PositionFormat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        positionFormat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .maxpb.PositionFormat positionFormat = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearPositionFormat() {
        bitField0_ = (bitField0_ & ~0x00000002);
        positionFormat_ = maxpb.MaxpbReport.PositionFormat.PF_SOURCE_DEFAULT;
        onChanged();
        return this;
      }

      private int latitude_ ;
      /**
       * <code>required sfixed32 latitude = 3;</code>
       *
       * <pre>
       *&#47; Degrees.decimalsOfDegrees * 10,000,000 SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required sfixed32 latitude = 3;</code>
       *
       * <pre>
       *&#47; Degrees.decimalsOfDegrees * 10,000,000 SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public int getLatitude() {
        return latitude_;
      }
      /**
       * <code>required sfixed32 latitude = 3;</code>
       *
       * <pre>
       *&#47; Degrees.decimalsOfDegrees * 10,000,000 SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setLatitude(int value) {
        bitField0_ |= 0x00000004;
        latitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sfixed32 latitude = 3;</code>
       *
       * <pre>
       *&#47; Degrees.decimalsOfDegrees * 10,000,000 SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearLatitude() {
        bitField0_ = (bitField0_ & ~0x00000004);
        latitude_ = 0;
        onChanged();
        return this;
      }

      private int longitude_ ;
      /**
       * <code>required sfixed32 longitude = 4;</code>
       *
       * <pre>
       *&#47; Degrees.decimalsOfDegrees * 10,000,000 SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required sfixed32 longitude = 4;</code>
       *
       * <pre>
       *&#47; Degrees.decimalsOfDegrees * 10,000,000 SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public int getLongitude() {
        return longitude_;
      }
      /**
       * <code>required sfixed32 longitude = 4;</code>
       *
       * <pre>
       *&#47; Degrees.decimalsOfDegrees * 10,000,000 SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setLongitude(int value) {
        bitField0_ |= 0x00000008;
        longitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sfixed32 longitude = 4;</code>
       *
       * <pre>
       *&#47; Degrees.decimalsOfDegrees * 10,000,000 SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearLongitude() {
        bitField0_ = (bitField0_ & ~0x00000008);
        longitude_ = 0;
        onChanged();
        return this;
      }

      private int altitude_ ;
      /**
       * <code>optional int32 altitude = 5;</code>
       *
       * <pre>
       *&#47; Meters SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasAltitude() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 altitude = 5;</code>
       *
       * <pre>
       *&#47; Meters SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getAltitude() {
        return altitude_;
      }
      /**
       * <code>optional int32 altitude = 5;</code>
       *
       * <pre>
       *&#47; Meters SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setAltitude(int value) {
        bitField0_ |= 0x00000010;
        altitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 altitude = 5;</code>
       *
       * <pre>
       *&#47; Meters SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearAltitude() {
        bitField0_ = (bitField0_ & ~0x00000010);
        altitude_ = 0;
        onChanged();
        return this;
      }

      private int estimatedPositionError_ ;
      /**
       * <code>optional int32 estimatedPositionError = 6;</code>
       *
       * <pre>
       *&#47; 2DRMS EPE error (Meters) SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasEstimatedPositionError() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 estimatedPositionError = 6;</code>
       *
       * <pre>
       *&#47; 2DRMS EPE error (Meters) SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getEstimatedPositionError() {
        return estimatedPositionError_;
      }
      /**
       * <code>optional int32 estimatedPositionError = 6;</code>
       *
       * <pre>
       *&#47; 2DRMS EPE error (Meters) SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setEstimatedPositionError(int value) {
        bitField0_ |= 0x00000020;
        estimatedPositionError_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 estimatedPositionError = 6;</code>
       *
       * <pre>
       *&#47; 2DRMS EPE error (Meters) SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearEstimatedPositionError() {
        bitField0_ = (bitField0_ & ~0x00000020);
        estimatedPositionError_ = 0;
        onChanged();
        return this;
      }

      private int directionDegrees_ ;
      /**
       * <code>optional int32 directionDegrees = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasDirectionDegrees() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 directionDegrees = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getDirectionDegrees() {
        return directionDegrees_;
      }
      /**
       * <code>optional int32 directionDegrees = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setDirectionDegrees(int value) {
        bitField0_ |= 0x00000040;
        directionDegrees_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 directionDegrees = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearDirectionDegrees() {
        bitField0_ = (bitField0_ & ~0x00000040);
        directionDegrees_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbGps.Heading directionHeading_ = maxpb.MaxpbGps.Heading.H_NORTH;
      /**
       * <code>optional .maxpb.Heading directionHeading = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, GATEWAY
       * </pre>
       */
      public boolean hasDirectionHeading() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .maxpb.Heading directionHeading = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, GATEWAY
       * </pre>
       */
      public maxpb.MaxpbGps.Heading getDirectionHeading() {
        return directionHeading_;
      }
      /**
       * <code>optional .maxpb.Heading directionHeading = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, GATEWAY
       * </pre>
       */
      public Builder setDirectionHeading(maxpb.MaxpbGps.Heading value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        directionHeading_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.Heading directionHeading = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, GATEWAY
       * </pre>
       */
      public Builder clearDirectionHeading() {
        bitField0_ = (bitField0_ & ~0x00000080);
        directionHeading_ = maxpb.MaxpbGps.Heading.H_NORTH;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.PositionInfo)
    }

    static {
      defaultInstance = new PositionInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.PositionInfo)
  }

  public interface CellInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.CellInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 mcc = 1;</code>
     *
     * <pre>
     *&#47; Mobile Country Code SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasMcc();
    /**
     * <code>optional uint32 mcc = 1;</code>
     *
     * <pre>
     *&#47; Mobile Country Code SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    int getMcc();

    /**
     * <code>optional uint32 mnc = 2;</code>
     *
     * <pre>
     *&#47; Mobile Network Code SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasMnc();
    /**
     * <code>optional uint32 mnc = 2;</code>
     *
     * <pre>
     *&#47; Mobile Network Code SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    int getMnc();

    /**
     * <code>optional uint32 lac = 3;</code>
     *
     * <pre>
     *&#47; Location Area Code SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasLac();
    /**
     * <code>optional uint32 lac = 3;</code>
     *
     * <pre>
     *&#47; Location Area Code SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    int getLac();

    /**
     * <code>optional uint32 cellID = 4;</code>
     *
     * <pre>
     *&#47; GSM Cell ID SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasCellID();
    /**
     * <code>optional uint32 cellID = 4;</code>
     *
     * <pre>
     *&#47; GSM Cell ID SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    int getCellID();

    /**
     * <code>optional uint32 age = 5;</code>
     *
     * <pre>
     *&#47; Time in current cell (seconds) SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasAge();
    /**
     * <code>optional uint32 age = 5;</code>
     *
     * <pre>
     *&#47; Time in current cell (seconds) SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getAge();

    /**
     * <code>optional uint32 rxLevel = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasRxLevel();
    /**
     * <code>optional uint32 rxLevel = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getRxLevel();

    /**
     * <code>optional uint32 timingAdvance = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasTimingAdvance();
    /**
     * <code>optional uint32 timingAdvance = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getTimingAdvance();
  }
  /**
   * Protobuf type {@code maxpb.CellInfo}
   */
  public static final class CellInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.CellInfo)
      CellInfoOrBuilder {
    // Use CellInfo.newBuilder() to construct.
    private CellInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CellInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CellInfo defaultInstance;
    public static CellInfo getDefaultInstance() {
      return defaultInstance;
    }

    public CellInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CellInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mcc_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              mnc_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lac_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              cellID_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              age_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              rxLevel_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              timingAdvance_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbReport.internal_static_maxpb_CellInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbReport.internal_static_maxpb_CellInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbReport.CellInfo.class, maxpb.MaxpbReport.CellInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<CellInfo> PARSER =
        new com.google.protobuf.AbstractParser<CellInfo>() {
      public CellInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CellInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CellInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MCC_FIELD_NUMBER = 1;
    private int mcc_;
    /**
     * <code>optional uint32 mcc = 1;</code>
     *
     * <pre>
     *&#47; Mobile Country Code SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasMcc() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 mcc = 1;</code>
     *
     * <pre>
     *&#47; Mobile Country Code SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public int getMcc() {
      return mcc_;
    }

    public static final int MNC_FIELD_NUMBER = 2;
    private int mnc_;
    /**
     * <code>optional uint32 mnc = 2;</code>
     *
     * <pre>
     *&#47; Mobile Network Code SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasMnc() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 mnc = 2;</code>
     *
     * <pre>
     *&#47; Mobile Network Code SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public int getMnc() {
      return mnc_;
    }

    public static final int LAC_FIELD_NUMBER = 3;
    private int lac_;
    /**
     * <code>optional uint32 lac = 3;</code>
     *
     * <pre>
     *&#47; Location Area Code SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasLac() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 lac = 3;</code>
     *
     * <pre>
     *&#47; Location Area Code SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public int getLac() {
      return lac_;
    }

    public static final int CELLID_FIELD_NUMBER = 4;
    private int cellID_;
    /**
     * <code>optional uint32 cellID = 4;</code>
     *
     * <pre>
     *&#47; GSM Cell ID SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasCellID() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 cellID = 4;</code>
     *
     * <pre>
     *&#47; GSM Cell ID SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public int getCellID() {
      return cellID_;
    }

    public static final int AGE_FIELD_NUMBER = 5;
    private int age_;
    /**
     * <code>optional uint32 age = 5;</code>
     *
     * <pre>
     *&#47; Time in current cell (seconds) SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasAge() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 age = 5;</code>
     *
     * <pre>
     *&#47; Time in current cell (seconds) SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getAge() {
      return age_;
    }

    public static final int RXLEVEL_FIELD_NUMBER = 6;
    private int rxLevel_;
    /**
     * <code>optional uint32 rxLevel = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasRxLevel() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 rxLevel = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getRxLevel() {
      return rxLevel_;
    }

    public static final int TIMINGADVANCE_FIELD_NUMBER = 7;
    private int timingAdvance_;
    /**
     * <code>optional uint32 timingAdvance = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasTimingAdvance() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 timingAdvance = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getTimingAdvance() {
      return timingAdvance_;
    }

    private void initFields() {
      mcc_ = 0;
      mnc_ = 0;
      lac_ = 0;
      cellID_ = 0;
      age_ = 0;
      rxLevel_ = 0;
      timingAdvance_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, mcc_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, mnc_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, lac_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, cellID_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, age_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, rxLevel_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, timingAdvance_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, mcc_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, mnc_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, lac_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, cellID_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, age_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, rxLevel_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, timingAdvance_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbReport.CellInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.CellInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.CellInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.CellInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.CellInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.CellInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.CellInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbReport.CellInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.CellInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.CellInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbReport.CellInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.CellInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.CellInfo)
        maxpb.MaxpbReport.CellInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbReport.internal_static_maxpb_CellInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbReport.internal_static_maxpb_CellInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbReport.CellInfo.class, maxpb.MaxpbReport.CellInfo.Builder.class);
      }

      // Construct using maxpb.MaxpbReport.CellInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mcc_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        mnc_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        lac_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cellID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        age_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        rxLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        timingAdvance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbReport.internal_static_maxpb_CellInfo_descriptor;
      }

      public maxpb.MaxpbReport.CellInfo getDefaultInstanceForType() {
        return maxpb.MaxpbReport.CellInfo.getDefaultInstance();
      }

      public maxpb.MaxpbReport.CellInfo build() {
        maxpb.MaxpbReport.CellInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbReport.CellInfo buildPartial() {
        maxpb.MaxpbReport.CellInfo result = new maxpb.MaxpbReport.CellInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mcc_ = mcc_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mnc_ = mnc_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lac_ = lac_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cellID_ = cellID_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.age_ = age_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.rxLevel_ = rxLevel_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.timingAdvance_ = timingAdvance_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbReport.CellInfo) {
          return mergeFrom((maxpb.MaxpbReport.CellInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbReport.CellInfo other) {
        if (other == maxpb.MaxpbReport.CellInfo.getDefaultInstance()) return this;
        if (other.hasMcc()) {
          setMcc(other.getMcc());
        }
        if (other.hasMnc()) {
          setMnc(other.getMnc());
        }
        if (other.hasLac()) {
          setLac(other.getLac());
        }
        if (other.hasCellID()) {
          setCellID(other.getCellID());
        }
        if (other.hasAge()) {
          setAge(other.getAge());
        }
        if (other.hasRxLevel()) {
          setRxLevel(other.getRxLevel());
        }
        if (other.hasTimingAdvance()) {
          setTimingAdvance(other.getTimingAdvance());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbReport.CellInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbReport.CellInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int mcc_ ;
      /**
       * <code>optional uint32 mcc = 1;</code>
       *
       * <pre>
       *&#47; Mobile Country Code SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasMcc() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 mcc = 1;</code>
       *
       * <pre>
       *&#47; Mobile Country Code SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public int getMcc() {
        return mcc_;
      }
      /**
       * <code>optional uint32 mcc = 1;</code>
       *
       * <pre>
       *&#47; Mobile Country Code SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setMcc(int value) {
        bitField0_ |= 0x00000001;
        mcc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mcc = 1;</code>
       *
       * <pre>
       *&#47; Mobile Country Code SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearMcc() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mcc_ = 0;
        onChanged();
        return this;
      }

      private int mnc_ ;
      /**
       * <code>optional uint32 mnc = 2;</code>
       *
       * <pre>
       *&#47; Mobile Network Code SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasMnc() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 mnc = 2;</code>
       *
       * <pre>
       *&#47; Mobile Network Code SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public int getMnc() {
        return mnc_;
      }
      /**
       * <code>optional uint32 mnc = 2;</code>
       *
       * <pre>
       *&#47; Mobile Network Code SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setMnc(int value) {
        bitField0_ |= 0x00000002;
        mnc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mnc = 2;</code>
       *
       * <pre>
       *&#47; Mobile Network Code SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearMnc() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mnc_ = 0;
        onChanged();
        return this;
      }

      private int lac_ ;
      /**
       * <code>optional uint32 lac = 3;</code>
       *
       * <pre>
       *&#47; Location Area Code SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasLac() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 lac = 3;</code>
       *
       * <pre>
       *&#47; Location Area Code SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public int getLac() {
        return lac_;
      }
      /**
       * <code>optional uint32 lac = 3;</code>
       *
       * <pre>
       *&#47; Location Area Code SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setLac(int value) {
        bitField0_ |= 0x00000004;
        lac_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 lac = 3;</code>
       *
       * <pre>
       *&#47; Location Area Code SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearLac() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lac_ = 0;
        onChanged();
        return this;
      }

      private int cellID_ ;
      /**
       * <code>optional uint32 cellID = 4;</code>
       *
       * <pre>
       *&#47; GSM Cell ID SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasCellID() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 cellID = 4;</code>
       *
       * <pre>
       *&#47; GSM Cell ID SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public int getCellID() {
        return cellID_;
      }
      /**
       * <code>optional uint32 cellID = 4;</code>
       *
       * <pre>
       *&#47; GSM Cell ID SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setCellID(int value) {
        bitField0_ |= 0x00000008;
        cellID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 cellID = 4;</code>
       *
       * <pre>
       *&#47; GSM Cell ID SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearCellID() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cellID_ = 0;
        onChanged();
        return this;
      }

      private int age_ ;
      /**
       * <code>optional uint32 age = 5;</code>
       *
       * <pre>
       *&#47; Time in current cell (seconds) SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasAge() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 age = 5;</code>
       *
       * <pre>
       *&#47; Time in current cell (seconds) SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getAge() {
        return age_;
      }
      /**
       * <code>optional uint32 age = 5;</code>
       *
       * <pre>
       *&#47; Time in current cell (seconds) SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setAge(int value) {
        bitField0_ |= 0x00000010;
        age_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 age = 5;</code>
       *
       * <pre>
       *&#47; Time in current cell (seconds) SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearAge() {
        bitField0_ = (bitField0_ & ~0x00000010);
        age_ = 0;
        onChanged();
        return this;
      }

      private int rxLevel_ ;
      /**
       * <code>optional uint32 rxLevel = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasRxLevel() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 rxLevel = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getRxLevel() {
        return rxLevel_;
      }
      /**
       * <code>optional uint32 rxLevel = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setRxLevel(int value) {
        bitField0_ |= 0x00000020;
        rxLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 rxLevel = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearRxLevel() {
        bitField0_ = (bitField0_ & ~0x00000020);
        rxLevel_ = 0;
        onChanged();
        return this;
      }

      private int timingAdvance_ ;
      /**
       * <code>optional uint32 timingAdvance = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasTimingAdvance() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 timingAdvance = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getTimingAdvance() {
        return timingAdvance_;
      }
      /**
       * <code>optional uint32 timingAdvance = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setTimingAdvance(int value) {
        bitField0_ |= 0x00000040;
        timingAdvance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 timingAdvance = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearTimingAdvance() {
        bitField0_ = (bitField0_ & ~0x00000040);
        timingAdvance_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.CellInfo)
    }

    static {
      defaultInstance = new CellInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.CellInfo)
  }

  public interface ConnectionInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.ConnectionInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .maxpb.ConnectionType connectionType = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasConnectionType();
    /**
     * <code>optional .maxpb.ConnectionType connectionType = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.ConnectionType getConnectionType();

    /**
     * <code>optional bool jamming = 2;</code>
     *
     * <pre>
     *&#47; 0 - Not Jamming, 1 - Jamming SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasJamming();
    /**
     * <code>optional bool jamming = 2;</code>
     *
     * <pre>
     *&#47; 0 - Not Jamming, 1 - Jamming SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean getJamming();

    /**
     * <code>optional .maxpb.SimCard simCardInUse = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasSimCardInUse();
    /**
     * <code>optional .maxpb.SimCard simCardInUse = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    maxpb.MaxpbReport.SimCard getSimCardInUse();

    /**
     * <code>optional uint32 csq = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasCsq();
    /**
     * <code>optional uint32 csq = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    int getCsq();

    /**
     * <code>optional uint32 csqLevel = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasCsqLevel();
    /**
     * <code>optional uint32 csqLevel = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getCsqLevel();

    /**
     * <code>optional .maxpb.Registration currentRegistration = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasCurrentRegistration();
    /**
     * <code>optional .maxpb.Registration currentRegistration = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    maxpb.MaxpbReport.Registration getCurrentRegistration();

    /**
     * <code>optional .maxpb.CellInfo currentCell = 7;</code>
     *
     * <pre>
     *&#47; GSM Cell Information SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasCurrentCell();
    /**
     * <code>optional .maxpb.CellInfo currentCell = 7;</code>
     *
     * <pre>
     *&#47; GSM Cell Information SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.CellInfo getCurrentCell();
    /**
     * <code>optional .maxpb.CellInfo currentCell = 7;</code>
     *
     * <pre>
     *&#47; GSM Cell Information SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.CellInfoOrBuilder getCurrentCellOrBuilder();

    /**
     * <code>repeated .maxpb.CellInfo lbs = 8;</code>
     *
     * <pre>
     *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
     * </pre>
     */
    java.util.List<maxpb.MaxpbReport.CellInfo> 
        getLbsList();
    /**
     * <code>repeated .maxpb.CellInfo lbs = 8;</code>
     *
     * <pre>
     *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
     * </pre>
     */
    maxpb.MaxpbReport.CellInfo getLbs(int index);
    /**
     * <code>repeated .maxpb.CellInfo lbs = 8;</code>
     *
     * <pre>
     *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
     * </pre>
     */
    int getLbsCount();
    /**
     * <code>repeated .maxpb.CellInfo lbs = 8;</code>
     *
     * <pre>
     *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbReport.CellInfoOrBuilder> 
        getLbsOrBuilderList();
    /**
     * <code>repeated .maxpb.CellInfo lbs = 8;</code>
     *
     * <pre>
     *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
     * </pre>
     */
    maxpb.MaxpbReport.CellInfoOrBuilder getLbsOrBuilder(
        int index);

    /**
     * <code>optional .maxpb.ConnectionState connectionState = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasConnectionState();
    /**
     * <code>optional .maxpb.ConnectionState connectionState = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    maxpb.MaxpbReport.ConnectionState getConnectionState();
  }
  /**
   * Protobuf type {@code maxpb.ConnectionInfo}
   */
  public static final class ConnectionInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.ConnectionInfo)
      ConnectionInfoOrBuilder {
    // Use ConnectionInfo.newBuilder() to construct.
    private ConnectionInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ConnectionInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ConnectionInfo defaultInstance;
    public static ConnectionInfo getDefaultInstance() {
      return defaultInstance;
    }

    public ConnectionInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ConnectionInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              maxpb.MaxpbReport.ConnectionType value = maxpb.MaxpbReport.ConnectionType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                connectionType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              jamming_ = input.readBool();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              maxpb.MaxpbReport.SimCard value = maxpb.MaxpbReport.SimCard.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                simCardInUse_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              csq_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              csqLevel_ = input.readUInt32();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              maxpb.MaxpbReport.Registration value = maxpb.MaxpbReport.Registration.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                currentRegistration_ = value;
              }
              break;
            }
            case 58: {
              maxpb.MaxpbReport.CellInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = currentCell_.toBuilder();
              }
              currentCell_ = input.readMessage(maxpb.MaxpbReport.CellInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(currentCell_);
                currentCell_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                lbs_ = new java.util.ArrayList<maxpb.MaxpbReport.CellInfo>();
                mutable_bitField0_ |= 0x00000080;
              }
              lbs_.add(input.readMessage(maxpb.MaxpbReport.CellInfo.PARSER, extensionRegistry));
              break;
            }
            case 72: {
              int rawValue = input.readEnum();
              maxpb.MaxpbReport.ConnectionState value = maxpb.MaxpbReport.ConnectionState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(9, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                connectionState_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          lbs_ = java.util.Collections.unmodifiableList(lbs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbReport.internal_static_maxpb_ConnectionInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbReport.internal_static_maxpb_ConnectionInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbReport.ConnectionInfo.class, maxpb.MaxpbReport.ConnectionInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<ConnectionInfo> PARSER =
        new com.google.protobuf.AbstractParser<ConnectionInfo>() {
      public ConnectionInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConnectionInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ConnectionInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CONNECTIONTYPE_FIELD_NUMBER = 1;
    private maxpb.MaxpbReport.ConnectionType connectionType_;
    /**
     * <code>optional .maxpb.ConnectionType connectionType = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasConnectionType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .maxpb.ConnectionType connectionType = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.ConnectionType getConnectionType() {
      return connectionType_;
    }

    public static final int JAMMING_FIELD_NUMBER = 2;
    private boolean jamming_;
    /**
     * <code>optional bool jamming = 2;</code>
     *
     * <pre>
     *&#47; 0 - Not Jamming, 1 - Jamming SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasJamming() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool jamming = 2;</code>
     *
     * <pre>
     *&#47; 0 - Not Jamming, 1 - Jamming SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean getJamming() {
      return jamming_;
    }

    public static final int SIMCARDINUSE_FIELD_NUMBER = 3;
    private maxpb.MaxpbReport.SimCard simCardInUse_;
    /**
     * <code>optional .maxpb.SimCard simCardInUse = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasSimCardInUse() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .maxpb.SimCard simCardInUse = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public maxpb.MaxpbReport.SimCard getSimCardInUse() {
      return simCardInUse_;
    }

    public static final int CSQ_FIELD_NUMBER = 4;
    private int csq_;
    /**
     * <code>optional uint32 csq = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasCsq() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 csq = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public int getCsq() {
      return csq_;
    }

    public static final int CSQLEVEL_FIELD_NUMBER = 5;
    private int csqLevel_;
    /**
     * <code>optional uint32 csqLevel = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasCsqLevel() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 csqLevel = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getCsqLevel() {
      return csqLevel_;
    }

    public static final int CURRENTREGISTRATION_FIELD_NUMBER = 6;
    private maxpb.MaxpbReport.Registration currentRegistration_;
    /**
     * <code>optional .maxpb.Registration currentRegistration = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasCurrentRegistration() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .maxpb.Registration currentRegistration = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public maxpb.MaxpbReport.Registration getCurrentRegistration() {
      return currentRegistration_;
    }

    public static final int CURRENTCELL_FIELD_NUMBER = 7;
    private maxpb.MaxpbReport.CellInfo currentCell_;
    /**
     * <code>optional .maxpb.CellInfo currentCell = 7;</code>
     *
     * <pre>
     *&#47; GSM Cell Information SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasCurrentCell() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .maxpb.CellInfo currentCell = 7;</code>
     *
     * <pre>
     *&#47; GSM Cell Information SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.CellInfo getCurrentCell() {
      return currentCell_;
    }
    /**
     * <code>optional .maxpb.CellInfo currentCell = 7;</code>
     *
     * <pre>
     *&#47; GSM Cell Information SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.CellInfoOrBuilder getCurrentCellOrBuilder() {
      return currentCell_;
    }

    public static final int LBS_FIELD_NUMBER = 8;
    private java.util.List<maxpb.MaxpbReport.CellInfo> lbs_;
    /**
     * <code>repeated .maxpb.CellInfo lbs = 8;</code>
     *
     * <pre>
     *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
     * </pre>
     */
    public java.util.List<maxpb.MaxpbReport.CellInfo> getLbsList() {
      return lbs_;
    }
    /**
     * <code>repeated .maxpb.CellInfo lbs = 8;</code>
     *
     * <pre>
     *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbReport.CellInfoOrBuilder> 
        getLbsOrBuilderList() {
      return lbs_;
    }
    /**
     * <code>repeated .maxpb.CellInfo lbs = 8;</code>
     *
     * <pre>
     *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
     * </pre>
     */
    public int getLbsCount() {
      return lbs_.size();
    }
    /**
     * <code>repeated .maxpb.CellInfo lbs = 8;</code>
     *
     * <pre>
     *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
     * </pre>
     */
    public maxpb.MaxpbReport.CellInfo getLbs(int index) {
      return lbs_.get(index);
    }
    /**
     * <code>repeated .maxpb.CellInfo lbs = 8;</code>
     *
     * <pre>
     *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
     * </pre>
     */
    public maxpb.MaxpbReport.CellInfoOrBuilder getLbsOrBuilder(
        int index) {
      return lbs_.get(index);
    }

    public static final int CONNECTIONSTATE_FIELD_NUMBER = 9;
    private maxpb.MaxpbReport.ConnectionState connectionState_;
    /**
     * <code>optional .maxpb.ConnectionState connectionState = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasConnectionState() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .maxpb.ConnectionState connectionState = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public maxpb.MaxpbReport.ConnectionState getConnectionState() {
      return connectionState_;
    }

    private void initFields() {
      connectionType_ = maxpb.MaxpbReport.ConnectionType.CONN_NONE;
      jamming_ = false;
      simCardInUse_ = maxpb.MaxpbReport.SimCard.SC_NONE;
      csq_ = 0;
      csqLevel_ = 0;
      currentRegistration_ = maxpb.MaxpbReport.Registration.REG_NOT_REGISTERED;
      currentCell_ = maxpb.MaxpbReport.CellInfo.getDefaultInstance();
      lbs_ = java.util.Collections.emptyList();
      connectionState_ = maxpb.MaxpbReport.ConnectionState.CT_DISCONNECTED;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, connectionType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, jamming_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, simCardInUse_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, csq_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, csqLevel_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, currentRegistration_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, currentCell_);
      }
      for (int i = 0; i < lbs_.size(); i++) {
        output.writeMessage(8, lbs_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(9, connectionState_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, connectionType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, jamming_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, simCardInUse_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, csq_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, csqLevel_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, currentRegistration_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, currentCell_);
      }
      for (int i = 0; i < lbs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, lbs_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, connectionState_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbReport.ConnectionInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.ConnectionInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.ConnectionInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.ConnectionInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.ConnectionInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.ConnectionInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.ConnectionInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbReport.ConnectionInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.ConnectionInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.ConnectionInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbReport.ConnectionInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.ConnectionInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.ConnectionInfo)
        maxpb.MaxpbReport.ConnectionInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbReport.internal_static_maxpb_ConnectionInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbReport.internal_static_maxpb_ConnectionInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbReport.ConnectionInfo.class, maxpb.MaxpbReport.ConnectionInfo.Builder.class);
      }

      // Construct using maxpb.MaxpbReport.ConnectionInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCurrentCellFieldBuilder();
          getLbsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        connectionType_ = maxpb.MaxpbReport.ConnectionType.CONN_NONE;
        bitField0_ = (bitField0_ & ~0x00000001);
        jamming_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        simCardInUse_ = maxpb.MaxpbReport.SimCard.SC_NONE;
        bitField0_ = (bitField0_ & ~0x00000004);
        csq_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        csqLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        currentRegistration_ = maxpb.MaxpbReport.Registration.REG_NOT_REGISTERED;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (currentCellBuilder_ == null) {
          currentCell_ = maxpb.MaxpbReport.CellInfo.getDefaultInstance();
        } else {
          currentCellBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (lbsBuilder_ == null) {
          lbs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          lbsBuilder_.clear();
        }
        connectionState_ = maxpb.MaxpbReport.ConnectionState.CT_DISCONNECTED;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbReport.internal_static_maxpb_ConnectionInfo_descriptor;
      }

      public maxpb.MaxpbReport.ConnectionInfo getDefaultInstanceForType() {
        return maxpb.MaxpbReport.ConnectionInfo.getDefaultInstance();
      }

      public maxpb.MaxpbReport.ConnectionInfo build() {
        maxpb.MaxpbReport.ConnectionInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbReport.ConnectionInfo buildPartial() {
        maxpb.MaxpbReport.ConnectionInfo result = new maxpb.MaxpbReport.ConnectionInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.connectionType_ = connectionType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.jamming_ = jamming_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.simCardInUse_ = simCardInUse_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.csq_ = csq_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.csqLevel_ = csqLevel_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.currentRegistration_ = currentRegistration_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (currentCellBuilder_ == null) {
          result.currentCell_ = currentCell_;
        } else {
          result.currentCell_ = currentCellBuilder_.build();
        }
        if (lbsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            lbs_ = java.util.Collections.unmodifiableList(lbs_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.lbs_ = lbs_;
        } else {
          result.lbs_ = lbsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.connectionState_ = connectionState_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbReport.ConnectionInfo) {
          return mergeFrom((maxpb.MaxpbReport.ConnectionInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbReport.ConnectionInfo other) {
        if (other == maxpb.MaxpbReport.ConnectionInfo.getDefaultInstance()) return this;
        if (other.hasConnectionType()) {
          setConnectionType(other.getConnectionType());
        }
        if (other.hasJamming()) {
          setJamming(other.getJamming());
        }
        if (other.hasSimCardInUse()) {
          setSimCardInUse(other.getSimCardInUse());
        }
        if (other.hasCsq()) {
          setCsq(other.getCsq());
        }
        if (other.hasCsqLevel()) {
          setCsqLevel(other.getCsqLevel());
        }
        if (other.hasCurrentRegistration()) {
          setCurrentRegistration(other.getCurrentRegistration());
        }
        if (other.hasCurrentCell()) {
          mergeCurrentCell(other.getCurrentCell());
        }
        if (lbsBuilder_ == null) {
          if (!other.lbs_.isEmpty()) {
            if (lbs_.isEmpty()) {
              lbs_ = other.lbs_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureLbsIsMutable();
              lbs_.addAll(other.lbs_);
            }
            onChanged();
          }
        } else {
          if (!other.lbs_.isEmpty()) {
            if (lbsBuilder_.isEmpty()) {
              lbsBuilder_.dispose();
              lbsBuilder_ = null;
              lbs_ = other.lbs_;
              bitField0_ = (bitField0_ & ~0x00000080);
              lbsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLbsFieldBuilder() : null;
            } else {
              lbsBuilder_.addAllMessages(other.lbs_);
            }
          }
        }
        if (other.hasConnectionState()) {
          setConnectionState(other.getConnectionState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbReport.ConnectionInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbReport.ConnectionInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private maxpb.MaxpbReport.ConnectionType connectionType_ = maxpb.MaxpbReport.ConnectionType.CONN_NONE;
      /**
       * <code>optional .maxpb.ConnectionType connectionType = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasConnectionType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .maxpb.ConnectionType connectionType = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.ConnectionType getConnectionType() {
        return connectionType_;
      }
      /**
       * <code>optional .maxpb.ConnectionType connectionType = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setConnectionType(maxpb.MaxpbReport.ConnectionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        connectionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.ConnectionType connectionType = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearConnectionType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        connectionType_ = maxpb.MaxpbReport.ConnectionType.CONN_NONE;
        onChanged();
        return this;
      }

      private boolean jamming_ ;
      /**
       * <code>optional bool jamming = 2;</code>
       *
       * <pre>
       *&#47; 0 - Not Jamming, 1 - Jamming SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasJamming() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool jamming = 2;</code>
       *
       * <pre>
       *&#47; 0 - Not Jamming, 1 - Jamming SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean getJamming() {
        return jamming_;
      }
      /**
       * <code>optional bool jamming = 2;</code>
       *
       * <pre>
       *&#47; 0 - Not Jamming, 1 - Jamming SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setJamming(boolean value) {
        bitField0_ |= 0x00000002;
        jamming_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool jamming = 2;</code>
       *
       * <pre>
       *&#47; 0 - Not Jamming, 1 - Jamming SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearJamming() {
        bitField0_ = (bitField0_ & ~0x00000002);
        jamming_ = false;
        onChanged();
        return this;
      }

      private maxpb.MaxpbReport.SimCard simCardInUse_ = maxpb.MaxpbReport.SimCard.SC_NONE;
      /**
       * <code>optional .maxpb.SimCard simCardInUse = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasSimCardInUse() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .maxpb.SimCard simCardInUse = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbReport.SimCard getSimCardInUse() {
        return simCardInUse_;
      }
      /**
       * <code>optional .maxpb.SimCard simCardInUse = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setSimCardInUse(maxpb.MaxpbReport.SimCard value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        simCardInUse_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.SimCard simCardInUse = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearSimCardInUse() {
        bitField0_ = (bitField0_ & ~0x00000004);
        simCardInUse_ = maxpb.MaxpbReport.SimCard.SC_NONE;
        onChanged();
        return this;
      }

      private int csq_ ;
      /**
       * <code>optional uint32 csq = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasCsq() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 csq = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public int getCsq() {
        return csq_;
      }
      /**
       * <code>optional uint32 csq = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setCsq(int value) {
        bitField0_ |= 0x00000008;
        csq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 csq = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearCsq() {
        bitField0_ = (bitField0_ & ~0x00000008);
        csq_ = 0;
        onChanged();
        return this;
      }

      private int csqLevel_ ;
      /**
       * <code>optional uint32 csqLevel = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasCsqLevel() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 csqLevel = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getCsqLevel() {
        return csqLevel_;
      }
      /**
       * <code>optional uint32 csqLevel = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setCsqLevel(int value) {
        bitField0_ |= 0x00000010;
        csqLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 csqLevel = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearCsqLevel() {
        bitField0_ = (bitField0_ & ~0x00000010);
        csqLevel_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbReport.Registration currentRegistration_ = maxpb.MaxpbReport.Registration.REG_NOT_REGISTERED;
      /**
       * <code>optional .maxpb.Registration currentRegistration = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasCurrentRegistration() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .maxpb.Registration currentRegistration = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public maxpb.MaxpbReport.Registration getCurrentRegistration() {
        return currentRegistration_;
      }
      /**
       * <code>optional .maxpb.Registration currentRegistration = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setCurrentRegistration(maxpb.MaxpbReport.Registration value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        currentRegistration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.Registration currentRegistration = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearCurrentRegistration() {
        bitField0_ = (bitField0_ & ~0x00000020);
        currentRegistration_ = maxpb.MaxpbReport.Registration.REG_NOT_REGISTERED;
        onChanged();
        return this;
      }

      private maxpb.MaxpbReport.CellInfo currentCell_ = maxpb.MaxpbReport.CellInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.CellInfo, maxpb.MaxpbReport.CellInfo.Builder, maxpb.MaxpbReport.CellInfoOrBuilder> currentCellBuilder_;
      /**
       * <code>optional .maxpb.CellInfo currentCell = 7;</code>
       *
       * <pre>
       *&#47; GSM Cell Information SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasCurrentCell() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .maxpb.CellInfo currentCell = 7;</code>
       *
       * <pre>
       *&#47; GSM Cell Information SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.CellInfo getCurrentCell() {
        if (currentCellBuilder_ == null) {
          return currentCell_;
        } else {
          return currentCellBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.CellInfo currentCell = 7;</code>
       *
       * <pre>
       *&#47; GSM Cell Information SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setCurrentCell(maxpb.MaxpbReport.CellInfo value) {
        if (currentCellBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          currentCell_ = value;
          onChanged();
        } else {
          currentCellBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .maxpb.CellInfo currentCell = 7;</code>
       *
       * <pre>
       *&#47; GSM Cell Information SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setCurrentCell(
          maxpb.MaxpbReport.CellInfo.Builder builderForValue) {
        if (currentCellBuilder_ == null) {
          currentCell_ = builderForValue.build();
          onChanged();
        } else {
          currentCellBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .maxpb.CellInfo currentCell = 7;</code>
       *
       * <pre>
       *&#47; GSM Cell Information SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder mergeCurrentCell(maxpb.MaxpbReport.CellInfo value) {
        if (currentCellBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              currentCell_ != maxpb.MaxpbReport.CellInfo.getDefaultInstance()) {
            currentCell_ =
              maxpb.MaxpbReport.CellInfo.newBuilder(currentCell_).mergeFrom(value).buildPartial();
          } else {
            currentCell_ = value;
          }
          onChanged();
        } else {
          currentCellBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .maxpb.CellInfo currentCell = 7;</code>
       *
       * <pre>
       *&#47; GSM Cell Information SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearCurrentCell() {
        if (currentCellBuilder_ == null) {
          currentCell_ = maxpb.MaxpbReport.CellInfo.getDefaultInstance();
          onChanged();
        } else {
          currentCellBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .maxpb.CellInfo currentCell = 7;</code>
       *
       * <pre>
       *&#47; GSM Cell Information SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.CellInfo.Builder getCurrentCellBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getCurrentCellFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.CellInfo currentCell = 7;</code>
       *
       * <pre>
       *&#47; GSM Cell Information SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.CellInfoOrBuilder getCurrentCellOrBuilder() {
        if (currentCellBuilder_ != null) {
          return currentCellBuilder_.getMessageOrBuilder();
        } else {
          return currentCell_;
        }
      }
      /**
       * <code>optional .maxpb.CellInfo currentCell = 7;</code>
       *
       * <pre>
       *&#47; GSM Cell Information SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.CellInfo, maxpb.MaxpbReport.CellInfo.Builder, maxpb.MaxpbReport.CellInfoOrBuilder> 
          getCurrentCellFieldBuilder() {
        if (currentCellBuilder_ == null) {
          currentCellBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbReport.CellInfo, maxpb.MaxpbReport.CellInfo.Builder, maxpb.MaxpbReport.CellInfoOrBuilder>(
                  getCurrentCell(),
                  getParentForChildren(),
                  isClean());
          currentCell_ = null;
        }
        return currentCellBuilder_;
      }

      private java.util.List<maxpb.MaxpbReport.CellInfo> lbs_ =
        java.util.Collections.emptyList();
      private void ensureLbsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          lbs_ = new java.util.ArrayList<maxpb.MaxpbReport.CellInfo>(lbs_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.CellInfo, maxpb.MaxpbReport.CellInfo.Builder, maxpb.MaxpbReport.CellInfoOrBuilder> lbsBuilder_;

      /**
       * <code>repeated .maxpb.CellInfo lbs = 8;</code>
       *
       * <pre>
       *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.CellInfo> getLbsList() {
        if (lbsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(lbs_);
        } else {
          return lbsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.CellInfo lbs = 8;</code>
       *
       * <pre>
       *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
       * </pre>
       */
      public int getLbsCount() {
        if (lbsBuilder_ == null) {
          return lbs_.size();
        } else {
          return lbsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.CellInfo lbs = 8;</code>
       *
       * <pre>
       *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
       * </pre>
       */
      public maxpb.MaxpbReport.CellInfo getLbs(int index) {
        if (lbsBuilder_ == null) {
          return lbs_.get(index);
        } else {
          return lbsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.CellInfo lbs = 8;</code>
       *
       * <pre>
       *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setLbs(
          int index, maxpb.MaxpbReport.CellInfo value) {
        if (lbsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLbsIsMutable();
          lbs_.set(index, value);
          onChanged();
        } else {
          lbsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.CellInfo lbs = 8;</code>
       *
       * <pre>
       *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setLbs(
          int index, maxpb.MaxpbReport.CellInfo.Builder builderForValue) {
        if (lbsBuilder_ == null) {
          ensureLbsIsMutable();
          lbs_.set(index, builderForValue.build());
          onChanged();
        } else {
          lbsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.CellInfo lbs = 8;</code>
       *
       * <pre>
       *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder addLbs(maxpb.MaxpbReport.CellInfo value) {
        if (lbsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLbsIsMutable();
          lbs_.add(value);
          onChanged();
        } else {
          lbsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.CellInfo lbs = 8;</code>
       *
       * <pre>
       *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder addLbs(
          int index, maxpb.MaxpbReport.CellInfo value) {
        if (lbsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLbsIsMutable();
          lbs_.add(index, value);
          onChanged();
        } else {
          lbsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.CellInfo lbs = 8;</code>
       *
       * <pre>
       *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder addLbs(
          maxpb.MaxpbReport.CellInfo.Builder builderForValue) {
        if (lbsBuilder_ == null) {
          ensureLbsIsMutable();
          lbs_.add(builderForValue.build());
          onChanged();
        } else {
          lbsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.CellInfo lbs = 8;</code>
       *
       * <pre>
       *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder addLbs(
          int index, maxpb.MaxpbReport.CellInfo.Builder builderForValue) {
        if (lbsBuilder_ == null) {
          ensureLbsIsMutable();
          lbs_.add(index, builderForValue.build());
          onChanged();
        } else {
          lbsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.CellInfo lbs = 8;</code>
       *
       * <pre>
       *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder addAllLbs(
          java.lang.Iterable<? extends maxpb.MaxpbReport.CellInfo> values) {
        if (lbsBuilder_ == null) {
          ensureLbsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, lbs_);
          onChanged();
        } else {
          lbsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.CellInfo lbs = 8;</code>
       *
       * <pre>
       *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearLbs() {
        if (lbsBuilder_ == null) {
          lbs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          lbsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.CellInfo lbs = 8;</code>
       *
       * <pre>
       *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder removeLbs(int index) {
        if (lbsBuilder_ == null) {
          ensureLbsIsMutable();
          lbs_.remove(index);
          onChanged();
        } else {
          lbsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.CellInfo lbs = 8;</code>
       *
       * <pre>
       *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
       * </pre>
       */
      public maxpb.MaxpbReport.CellInfo.Builder getLbsBuilder(
          int index) {
        return getLbsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.CellInfo lbs = 8;</code>
       *
       * <pre>
       *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
       * </pre>
       */
      public maxpb.MaxpbReport.CellInfoOrBuilder getLbsOrBuilder(
          int index) {
        if (lbsBuilder_ == null) {
          return lbs_.get(index);  } else {
          return lbsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.CellInfo lbs = 8;</code>
       *
       * <pre>
       *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbReport.CellInfoOrBuilder> 
           getLbsOrBuilderList() {
        if (lbsBuilder_ != null) {
          return lbsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(lbs_);
        }
      }
      /**
       * <code>repeated .maxpb.CellInfo lbs = 8;</code>
       *
       * <pre>
       *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
       * </pre>
       */
      public maxpb.MaxpbReport.CellInfo.Builder addLbsBuilder() {
        return getLbsFieldBuilder().addBuilder(
            maxpb.MaxpbReport.CellInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.CellInfo lbs = 8;</code>
       *
       * <pre>
       *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
       * </pre>
       */
      public maxpb.MaxpbReport.CellInfo.Builder addLbsBuilder(
          int index) {
        return getLbsFieldBuilder().addBuilder(
            index, maxpb.MaxpbReport.CellInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.CellInfo lbs = 8;</code>
       *
       * <pre>
       *&#47; LBS Information, neighbors cells SupportedBy: MXT160, MXT162
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.CellInfo.Builder> 
           getLbsBuilderList() {
        return getLbsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.CellInfo, maxpb.MaxpbReport.CellInfo.Builder, maxpb.MaxpbReport.CellInfoOrBuilder> 
          getLbsFieldBuilder() {
        if (lbsBuilder_ == null) {
          lbsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbReport.CellInfo, maxpb.MaxpbReport.CellInfo.Builder, maxpb.MaxpbReport.CellInfoOrBuilder>(
                  lbs_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          lbs_ = null;
        }
        return lbsBuilder_;
      }

      private maxpb.MaxpbReport.ConnectionState connectionState_ = maxpb.MaxpbReport.ConnectionState.CT_DISCONNECTED;
      /**
       * <code>optional .maxpb.ConnectionState connectionState = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasConnectionState() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .maxpb.ConnectionState connectionState = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public maxpb.MaxpbReport.ConnectionState getConnectionState() {
        return connectionState_;
      }
      /**
       * <code>optional .maxpb.ConnectionState connectionState = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setConnectionState(maxpb.MaxpbReport.ConnectionState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        connectionState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.ConnectionState connectionState = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearConnectionState() {
        bitField0_ = (bitField0_ & ~0x00000100);
        connectionState_ = maxpb.MaxpbReport.ConnectionState.CT_DISCONNECTED;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.ConnectionInfo)
    }

    static {
      defaultInstance = new ConnectionInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.ConnectionInfo)
  }

  public interface DeviceInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.DeviceInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bool extPowerState = 1;</code>
     *
     * <pre>
     *&#47; 0 - Not connected, 1 - Connected SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasExtPowerState();
    /**
     * <code>optional bool extPowerState = 1;</code>
     *
     * <pre>
     *&#47; 0 - Not connected, 1 - Connected SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean getExtPowerState();

    /**
     * <code>optional uint32 extPowerValue = 2;</code>
     *
     * <pre>
     *&#47; Milivolts SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    boolean hasExtPowerValue();
    /**
     * <code>optional uint32 extPowerValue = 2;</code>
     *
     * <pre>
     *&#47; Milivolts SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    int getExtPowerValue();

    /**
     * <code>optional .maxpb.BatteryState battState = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasBattState();
    /**
     * <code>optional .maxpb.BatteryState battState = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.BatteryState getBattState();

    /**
     * <code>optional uint32 battPercent = 4;</code>
     *
     * <pre>
     *&#47; Percent SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasBattPercent();
    /**
     * <code>optional uint32 battPercent = 4;</code>
     *
     * <pre>
     *&#47; Percent SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getBattPercent();

    /**
     * <code>optional uint32 battValue = 5;</code>
     *
     * <pre>
     *&#47; Milivolts SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasBattValue();
    /**
     * <code>optional uint32 battValue = 5;</code>
     *
     * <pre>
     *&#47; Milivolts SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    int getBattValue();

    /**
     * <code>optional .maxpb.PowerState powerState = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    boolean hasPowerState();
    /**
     * <code>optional .maxpb.PowerState powerState = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    maxpb.MaxpbReport.PowerState getPowerState();

    /**
     * <code>optional bool primarySimCard = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasPrimarySimCard();
    /**
     * <code>optional bool primarySimCard = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean getPrimarySimCard();

    /**
     * <code>optional bool secondarySimCard = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasSecondarySimCard();
    /**
     * <code>optional bool secondarySimCard = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean getSecondarySimCard();

    /**
     * <code>optional int32 temperature = 9;</code>
     *
     * <pre>
     *&#47; Device Temperature in C SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    boolean hasTemperature();
    /**
     * <code>optional int32 temperature = 9;</code>
     *
     * <pre>
     *&#47; Device Temperature in C SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    int getTemperature();

    /**
     * <code>optional uint32 uptime = 10;</code>
     *
     * <pre>
     *&#47; Seconds SupportedBy: MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    boolean hasUptime();
    /**
     * <code>optional uint32 uptime = 10;</code>
     *
     * <pre>
     *&#47; Seconds SupportedBy: MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    int getUptime();

    /**
     * <code>optional uint32 lifeTime = 11;</code>
     *
     * <pre>
     *&#47; Minutes SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    boolean hasLifeTime();
    /**
     * <code>optional uint32 lifeTime = 11;</code>
     *
     * <pre>
     *&#47; Minutes SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    int getLifeTime();

    /**
     * <code>optional uint32 battInUse = 12;</code>
     *
     * <pre>
     *&#47; Seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasBattInUse();
    /**
     * <code>optional uint32 battInUse = 12;</code>
     *
     * <pre>
     *&#47; Seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getBattInUse();

    /**
     * <code>optional .maxpb.ResetReason lastResetReason = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    boolean hasLastResetReason();
    /**
     * <code>optional .maxpb.ResetReason lastResetReason = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    maxpb.MaxpbDebug.ResetReason getLastResetReason();
  }
  /**
   * Protobuf type {@code maxpb.DeviceInfo}
   *
   * <pre>
   *&#47;Information that can be changed by itself
   * </pre>
   */
  public static final class DeviceInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.DeviceInfo)
      DeviceInfoOrBuilder {
    // Use DeviceInfo.newBuilder() to construct.
    private DeviceInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeviceInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeviceInfo defaultInstance;
    public static DeviceInfo getDefaultInstance() {
      return defaultInstance;
    }

    public DeviceInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeviceInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              extPowerState_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              extPowerValue_ = input.readUInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              maxpb.MaxpbReport.BatteryState value = maxpb.MaxpbReport.BatteryState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                battState_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              battPercent_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              battValue_ = input.readUInt32();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              maxpb.MaxpbReport.PowerState value = maxpb.MaxpbReport.PowerState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                powerState_ = value;
              }
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              primarySimCard_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              secondarySimCard_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              temperature_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              uptime_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              lifeTime_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              battInUse_ = input.readUInt32();
              break;
            }
            case 104: {
              int rawValue = input.readEnum();
              maxpb.MaxpbDebug.ResetReason value = maxpb.MaxpbDebug.ResetReason.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(13, rawValue);
              } else {
                bitField0_ |= 0x00001000;
                lastResetReason_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbReport.internal_static_maxpb_DeviceInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbReport.internal_static_maxpb_DeviceInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbReport.DeviceInfo.class, maxpb.MaxpbReport.DeviceInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<DeviceInfo> PARSER =
        new com.google.protobuf.AbstractParser<DeviceInfo>() {
      public DeviceInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeviceInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int EXTPOWERSTATE_FIELD_NUMBER = 1;
    private boolean extPowerState_;
    /**
     * <code>optional bool extPowerState = 1;</code>
     *
     * <pre>
     *&#47; 0 - Not connected, 1 - Connected SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasExtPowerState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool extPowerState = 1;</code>
     *
     * <pre>
     *&#47; 0 - Not connected, 1 - Connected SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean getExtPowerState() {
      return extPowerState_;
    }

    public static final int EXTPOWERVALUE_FIELD_NUMBER = 2;
    private int extPowerValue_;
    /**
     * <code>optional uint32 extPowerValue = 2;</code>
     *
     * <pre>
     *&#47; Milivolts SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public boolean hasExtPowerValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 extPowerValue = 2;</code>
     *
     * <pre>
     *&#47; Milivolts SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public int getExtPowerValue() {
      return extPowerValue_;
    }

    public static final int BATTSTATE_FIELD_NUMBER = 3;
    private maxpb.MaxpbReport.BatteryState battState_;
    /**
     * <code>optional .maxpb.BatteryState battState = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasBattState() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .maxpb.BatteryState battState = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.BatteryState getBattState() {
      return battState_;
    }

    public static final int BATTPERCENT_FIELD_NUMBER = 4;
    private int battPercent_;
    /**
     * <code>optional uint32 battPercent = 4;</code>
     *
     * <pre>
     *&#47; Percent SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasBattPercent() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 battPercent = 4;</code>
     *
     * <pre>
     *&#47; Percent SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getBattPercent() {
      return battPercent_;
    }

    public static final int BATTVALUE_FIELD_NUMBER = 5;
    private int battValue_;
    /**
     * <code>optional uint32 battValue = 5;</code>
     *
     * <pre>
     *&#47; Milivolts SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasBattValue() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 battValue = 5;</code>
     *
     * <pre>
     *&#47; Milivolts SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public int getBattValue() {
      return battValue_;
    }

    public static final int POWERSTATE_FIELD_NUMBER = 6;
    private maxpb.MaxpbReport.PowerState powerState_;
    /**
     * <code>optional .maxpb.PowerState powerState = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public boolean hasPowerState() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .maxpb.PowerState powerState = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public maxpb.MaxpbReport.PowerState getPowerState() {
      return powerState_;
    }

    public static final int PRIMARYSIMCARD_FIELD_NUMBER = 7;
    private boolean primarySimCard_;
    /**
     * <code>optional bool primarySimCard = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasPrimarySimCard() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool primarySimCard = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean getPrimarySimCard() {
      return primarySimCard_;
    }

    public static final int SECONDARYSIMCARD_FIELD_NUMBER = 8;
    private boolean secondarySimCard_;
    /**
     * <code>optional bool secondarySimCard = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasSecondarySimCard() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool secondarySimCard = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean getSecondarySimCard() {
      return secondarySimCard_;
    }

    public static final int TEMPERATURE_FIELD_NUMBER = 9;
    private int temperature_;
    /**
     * <code>optional int32 temperature = 9;</code>
     *
     * <pre>
     *&#47; Device Temperature in C SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public boolean hasTemperature() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 temperature = 9;</code>
     *
     * <pre>
     *&#47; Device Temperature in C SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public int getTemperature() {
      return temperature_;
    }

    public static final int UPTIME_FIELD_NUMBER = 10;
    private int uptime_;
    /**
     * <code>optional uint32 uptime = 10;</code>
     *
     * <pre>
     *&#47; Seconds SupportedBy: MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public boolean hasUptime() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 uptime = 10;</code>
     *
     * <pre>
     *&#47; Seconds SupportedBy: MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public int getUptime() {
      return uptime_;
    }

    public static final int LIFETIME_FIELD_NUMBER = 11;
    private int lifeTime_;
    /**
     * <code>optional uint32 lifeTime = 11;</code>
     *
     * <pre>
     *&#47; Minutes SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public boolean hasLifeTime() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 lifeTime = 11;</code>
     *
     * <pre>
     *&#47; Minutes SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public int getLifeTime() {
      return lifeTime_;
    }

    public static final int BATTINUSE_FIELD_NUMBER = 12;
    private int battInUse_;
    /**
     * <code>optional uint32 battInUse = 12;</code>
     *
     * <pre>
     *&#47; Seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasBattInUse() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 battInUse = 12;</code>
     *
     * <pre>
     *&#47; Seconds SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getBattInUse() {
      return battInUse_;
    }

    public static final int LASTRESETREASON_FIELD_NUMBER = 13;
    private maxpb.MaxpbDebug.ResetReason lastResetReason_;
    /**
     * <code>optional .maxpb.ResetReason lastResetReason = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public boolean hasLastResetReason() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .maxpb.ResetReason lastResetReason = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public maxpb.MaxpbDebug.ResetReason getLastResetReason() {
      return lastResetReason_;
    }

    private void initFields() {
      extPowerState_ = false;
      extPowerValue_ = 0;
      battState_ = maxpb.MaxpbReport.BatteryState.BATT_CHARGING;
      battPercent_ = 0;
      battValue_ = 0;
      powerState_ = maxpb.MaxpbReport.PowerState.PS_NORMAL;
      primarySimCard_ = false;
      secondarySimCard_ = false;
      temperature_ = 0;
      uptime_ = 0;
      lifeTime_ = 0;
      battInUse_ = 0;
      lastResetReason_ = maxpb.MaxpbDebug.ResetReason.RSTR_POWER_ON;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, extPowerState_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, extPowerValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, battState_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, battPercent_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, battValue_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, powerState_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, primarySimCard_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, secondarySimCard_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, temperature_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, uptime_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, lifeTime_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(12, battInUse_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeEnum(13, lastResetReason_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, extPowerState_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, extPowerValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, battState_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, battPercent_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, battValue_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, powerState_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, primarySimCard_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, secondarySimCard_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, temperature_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, uptime_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, lifeTime_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, battInUse_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(13, lastResetReason_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbReport.DeviceInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.DeviceInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.DeviceInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.DeviceInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.DeviceInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.DeviceInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.DeviceInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbReport.DeviceInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.DeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.DeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbReport.DeviceInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.DeviceInfo}
     *
     * <pre>
     *&#47;Information that can be changed by itself
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.DeviceInfo)
        maxpb.MaxpbReport.DeviceInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbReport.internal_static_maxpb_DeviceInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbReport.internal_static_maxpb_DeviceInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbReport.DeviceInfo.class, maxpb.MaxpbReport.DeviceInfo.Builder.class);
      }

      // Construct using maxpb.MaxpbReport.DeviceInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        extPowerState_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        extPowerValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        battState_ = maxpb.MaxpbReport.BatteryState.BATT_CHARGING;
        bitField0_ = (bitField0_ & ~0x00000004);
        battPercent_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        battValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        powerState_ = maxpb.MaxpbReport.PowerState.PS_NORMAL;
        bitField0_ = (bitField0_ & ~0x00000020);
        primarySimCard_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        secondarySimCard_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        temperature_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        uptime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        lifeTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        battInUse_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        lastResetReason_ = maxpb.MaxpbDebug.ResetReason.RSTR_POWER_ON;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbReport.internal_static_maxpb_DeviceInfo_descriptor;
      }

      public maxpb.MaxpbReport.DeviceInfo getDefaultInstanceForType() {
        return maxpb.MaxpbReport.DeviceInfo.getDefaultInstance();
      }

      public maxpb.MaxpbReport.DeviceInfo build() {
        maxpb.MaxpbReport.DeviceInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbReport.DeviceInfo buildPartial() {
        maxpb.MaxpbReport.DeviceInfo result = new maxpb.MaxpbReport.DeviceInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.extPowerState_ = extPowerState_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.extPowerValue_ = extPowerValue_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.battState_ = battState_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.battPercent_ = battPercent_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.battValue_ = battValue_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.powerState_ = powerState_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.primarySimCard_ = primarySimCard_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.secondarySimCard_ = secondarySimCard_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.temperature_ = temperature_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.uptime_ = uptime_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.lifeTime_ = lifeTime_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.battInUse_ = battInUse_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.lastResetReason_ = lastResetReason_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbReport.DeviceInfo) {
          return mergeFrom((maxpb.MaxpbReport.DeviceInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbReport.DeviceInfo other) {
        if (other == maxpb.MaxpbReport.DeviceInfo.getDefaultInstance()) return this;
        if (other.hasExtPowerState()) {
          setExtPowerState(other.getExtPowerState());
        }
        if (other.hasExtPowerValue()) {
          setExtPowerValue(other.getExtPowerValue());
        }
        if (other.hasBattState()) {
          setBattState(other.getBattState());
        }
        if (other.hasBattPercent()) {
          setBattPercent(other.getBattPercent());
        }
        if (other.hasBattValue()) {
          setBattValue(other.getBattValue());
        }
        if (other.hasPowerState()) {
          setPowerState(other.getPowerState());
        }
        if (other.hasPrimarySimCard()) {
          setPrimarySimCard(other.getPrimarySimCard());
        }
        if (other.hasSecondarySimCard()) {
          setSecondarySimCard(other.getSecondarySimCard());
        }
        if (other.hasTemperature()) {
          setTemperature(other.getTemperature());
        }
        if (other.hasUptime()) {
          setUptime(other.getUptime());
        }
        if (other.hasLifeTime()) {
          setLifeTime(other.getLifeTime());
        }
        if (other.hasBattInUse()) {
          setBattInUse(other.getBattInUse());
        }
        if (other.hasLastResetReason()) {
          setLastResetReason(other.getLastResetReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbReport.DeviceInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbReport.DeviceInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean extPowerState_ ;
      /**
       * <code>optional bool extPowerState = 1;</code>
       *
       * <pre>
       *&#47; 0 - Not connected, 1 - Connected SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasExtPowerState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool extPowerState = 1;</code>
       *
       * <pre>
       *&#47; 0 - Not connected, 1 - Connected SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean getExtPowerState() {
        return extPowerState_;
      }
      /**
       * <code>optional bool extPowerState = 1;</code>
       *
       * <pre>
       *&#47; 0 - Not connected, 1 - Connected SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setExtPowerState(boolean value) {
        bitField0_ |= 0x00000001;
        extPowerState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool extPowerState = 1;</code>
       *
       * <pre>
       *&#47; 0 - Not connected, 1 - Connected SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearExtPowerState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        extPowerState_ = false;
        onChanged();
        return this;
      }

      private int extPowerValue_ ;
      /**
       * <code>optional uint32 extPowerValue = 2;</code>
       *
       * <pre>
       *&#47; Milivolts SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public boolean hasExtPowerValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 extPowerValue = 2;</code>
       *
       * <pre>
       *&#47; Milivolts SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public int getExtPowerValue() {
        return extPowerValue_;
      }
      /**
       * <code>optional uint32 extPowerValue = 2;</code>
       *
       * <pre>
       *&#47; Milivolts SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setExtPowerValue(int value) {
        bitField0_ |= 0x00000002;
        extPowerValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 extPowerValue = 2;</code>
       *
       * <pre>
       *&#47; Milivolts SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder clearExtPowerValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        extPowerValue_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbReport.BatteryState battState_ = maxpb.MaxpbReport.BatteryState.BATT_CHARGING;
      /**
       * <code>optional .maxpb.BatteryState battState = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasBattState() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .maxpb.BatteryState battState = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.BatteryState getBattState() {
        return battState_;
      }
      /**
       * <code>optional .maxpb.BatteryState battState = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setBattState(maxpb.MaxpbReport.BatteryState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        battState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.BatteryState battState = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearBattState() {
        bitField0_ = (bitField0_ & ~0x00000004);
        battState_ = maxpb.MaxpbReport.BatteryState.BATT_CHARGING;
        onChanged();
        return this;
      }

      private int battPercent_ ;
      /**
       * <code>optional uint32 battPercent = 4;</code>
       *
       * <pre>
       *&#47; Percent SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasBattPercent() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 battPercent = 4;</code>
       *
       * <pre>
       *&#47; Percent SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getBattPercent() {
        return battPercent_;
      }
      /**
       * <code>optional uint32 battPercent = 4;</code>
       *
       * <pre>
       *&#47; Percent SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setBattPercent(int value) {
        bitField0_ |= 0x00000008;
        battPercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 battPercent = 4;</code>
       *
       * <pre>
       *&#47; Percent SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearBattPercent() {
        bitField0_ = (bitField0_ & ~0x00000008);
        battPercent_ = 0;
        onChanged();
        return this;
      }

      private int battValue_ ;
      /**
       * <code>optional uint32 battValue = 5;</code>
       *
       * <pre>
       *&#47; Milivolts SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasBattValue() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 battValue = 5;</code>
       *
       * <pre>
       *&#47; Milivolts SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public int getBattValue() {
        return battValue_;
      }
      /**
       * <code>optional uint32 battValue = 5;</code>
       *
       * <pre>
       *&#47; Milivolts SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setBattValue(int value) {
        bitField0_ |= 0x00000010;
        battValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 battValue = 5;</code>
       *
       * <pre>
       *&#47; Milivolts SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearBattValue() {
        bitField0_ = (bitField0_ & ~0x00000010);
        battValue_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbReport.PowerState powerState_ = maxpb.MaxpbReport.PowerState.PS_NORMAL;
      /**
       * <code>optional .maxpb.PowerState powerState = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public boolean hasPowerState() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .maxpb.PowerState powerState = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public maxpb.MaxpbReport.PowerState getPowerState() {
        return powerState_;
      }
      /**
       * <code>optional .maxpb.PowerState powerState = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setPowerState(maxpb.MaxpbReport.PowerState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        powerState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.PowerState powerState = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder clearPowerState() {
        bitField0_ = (bitField0_ & ~0x00000020);
        powerState_ = maxpb.MaxpbReport.PowerState.PS_NORMAL;
        onChanged();
        return this;
      }

      private boolean primarySimCard_ ;
      /**
       * <code>optional bool primarySimCard = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasPrimarySimCard() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool primarySimCard = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean getPrimarySimCard() {
        return primarySimCard_;
      }
      /**
       * <code>optional bool primarySimCard = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setPrimarySimCard(boolean value) {
        bitField0_ |= 0x00000040;
        primarySimCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool primarySimCard = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearPrimarySimCard() {
        bitField0_ = (bitField0_ & ~0x00000040);
        primarySimCard_ = false;
        onChanged();
        return this;
      }

      private boolean secondarySimCard_ ;
      /**
       * <code>optional bool secondarySimCard = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasSecondarySimCard() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool secondarySimCard = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean getSecondarySimCard() {
        return secondarySimCard_;
      }
      /**
       * <code>optional bool secondarySimCard = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setSecondarySimCard(boolean value) {
        bitField0_ |= 0x00000080;
        secondarySimCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool secondarySimCard = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearSecondarySimCard() {
        bitField0_ = (bitField0_ & ~0x00000080);
        secondarySimCard_ = false;
        onChanged();
        return this;
      }

      private int temperature_ ;
      /**
       * <code>optional int32 temperature = 9;</code>
       *
       * <pre>
       *&#47; Device Temperature in C SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public boolean hasTemperature() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 temperature = 9;</code>
       *
       * <pre>
       *&#47; Device Temperature in C SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public int getTemperature() {
        return temperature_;
      }
      /**
       * <code>optional int32 temperature = 9;</code>
       *
       * <pre>
       *&#47; Device Temperature in C SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setTemperature(int value) {
        bitField0_ |= 0x00000100;
        temperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 temperature = 9;</code>
       *
       * <pre>
       *&#47; Device Temperature in C SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder clearTemperature() {
        bitField0_ = (bitField0_ & ~0x00000100);
        temperature_ = 0;
        onChanged();
        return this;
      }

      private int uptime_ ;
      /**
       * <code>optional uint32 uptime = 10;</code>
       *
       * <pre>
       *&#47; Seconds SupportedBy: MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public boolean hasUptime() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 uptime = 10;</code>
       *
       * <pre>
       *&#47; Seconds SupportedBy: MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public int getUptime() {
        return uptime_;
      }
      /**
       * <code>optional uint32 uptime = 10;</code>
       *
       * <pre>
       *&#47; Seconds SupportedBy: MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setUptime(int value) {
        bitField0_ |= 0x00000200;
        uptime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 uptime = 10;</code>
       *
       * <pre>
       *&#47; Seconds SupportedBy: MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder clearUptime() {
        bitField0_ = (bitField0_ & ~0x00000200);
        uptime_ = 0;
        onChanged();
        return this;
      }

      private int lifeTime_ ;
      /**
       * <code>optional uint32 lifeTime = 11;</code>
       *
       * <pre>
       *&#47; Minutes SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public boolean hasLifeTime() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 lifeTime = 11;</code>
       *
       * <pre>
       *&#47; Minutes SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public int getLifeTime() {
        return lifeTime_;
      }
      /**
       * <code>optional uint32 lifeTime = 11;</code>
       *
       * <pre>
       *&#47; Minutes SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setLifeTime(int value) {
        bitField0_ |= 0x00000400;
        lifeTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 lifeTime = 11;</code>
       *
       * <pre>
       *&#47; Minutes SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder clearLifeTime() {
        bitField0_ = (bitField0_ & ~0x00000400);
        lifeTime_ = 0;
        onChanged();
        return this;
      }

      private int battInUse_ ;
      /**
       * <code>optional uint32 battInUse = 12;</code>
       *
       * <pre>
       *&#47; Seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasBattInUse() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 battInUse = 12;</code>
       *
       * <pre>
       *&#47; Seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getBattInUse() {
        return battInUse_;
      }
      /**
       * <code>optional uint32 battInUse = 12;</code>
       *
       * <pre>
       *&#47; Seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setBattInUse(int value) {
        bitField0_ |= 0x00000800;
        battInUse_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 battInUse = 12;</code>
       *
       * <pre>
       *&#47; Seconds SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearBattInUse() {
        bitField0_ = (bitField0_ & ~0x00000800);
        battInUse_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbDebug.ResetReason lastResetReason_ = maxpb.MaxpbDebug.ResetReason.RSTR_POWER_ON;
      /**
       * <code>optional .maxpb.ResetReason lastResetReason = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public boolean hasLastResetReason() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .maxpb.ResetReason lastResetReason = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public maxpb.MaxpbDebug.ResetReason getLastResetReason() {
        return lastResetReason_;
      }
      /**
       * <code>optional .maxpb.ResetReason lastResetReason = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setLastResetReason(maxpb.MaxpbDebug.ResetReason value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        lastResetReason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.ResetReason lastResetReason = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder clearLastResetReason() {
        bitField0_ = (bitField0_ & ~0x00001000);
        lastResetReason_ = maxpb.MaxpbDebug.ResetReason.RSTR_POWER_ON;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.DeviceInfo)
    }

    static {
      defaultInstance = new DeviceInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.DeviceInfo)
  }

  public interface OperationalInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.OperationalInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bool panic = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    boolean hasPanic();
    /**
     * <code>optional bool panic = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    boolean getPanic();

    /**
     * <code>optional .maxpb.AlarmState alarm = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasAlarm();
    /**
     * <code>optional .maxpb.AlarmState alarm = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    maxpb.MaxpbReport.AlarmState getAlarm();

    /**
     * <code>optional .maxpb.EmergencyState emergency = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasEmergency();
    /**
     * <code>optional .maxpb.EmergencyState emergency = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.EmergencyState getEmergency();
  }
  /**
   * Protobuf type {@code maxpb.OperationalInfo}
   */
  public static final class OperationalInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.OperationalInfo)
      OperationalInfoOrBuilder {
    // Use OperationalInfo.newBuilder() to construct.
    private OperationalInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OperationalInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OperationalInfo defaultInstance;
    public static OperationalInfo getDefaultInstance() {
      return defaultInstance;
    }

    public OperationalInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OperationalInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              panic_ = input.readBool();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              maxpb.MaxpbReport.AlarmState value = maxpb.MaxpbReport.AlarmState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                alarm_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              maxpb.MaxpbReport.EmergencyState value = maxpb.MaxpbReport.EmergencyState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                emergency_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbReport.internal_static_maxpb_OperationalInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbReport.internal_static_maxpb_OperationalInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbReport.OperationalInfo.class, maxpb.MaxpbReport.OperationalInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<OperationalInfo> PARSER =
        new com.google.protobuf.AbstractParser<OperationalInfo>() {
      public OperationalInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OperationalInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OperationalInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PANIC_FIELD_NUMBER = 1;
    private boolean panic_;
    /**
     * <code>optional bool panic = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public boolean hasPanic() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool panic = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162
     * </pre>
     */
    public boolean getPanic() {
      return panic_;
    }

    public static final int ALARM_FIELD_NUMBER = 2;
    private maxpb.MaxpbReport.AlarmState alarm_;
    /**
     * <code>optional .maxpb.AlarmState alarm = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasAlarm() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .maxpb.AlarmState alarm = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public maxpb.MaxpbReport.AlarmState getAlarm() {
      return alarm_;
    }

    public static final int EMERGENCY_FIELD_NUMBER = 3;
    private maxpb.MaxpbReport.EmergencyState emergency_;
    /**
     * <code>optional .maxpb.EmergencyState emergency = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasEmergency() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .maxpb.EmergencyState emergency = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.EmergencyState getEmergency() {
      return emergency_;
    }

    private void initFields() {
      panic_ = false;
      alarm_ = maxpb.MaxpbReport.AlarmState.ALM_ST_DEACTIVATED;
      emergency_ = maxpb.MaxpbReport.EmergencyState.EME_ST_DEACTIVATED;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, panic_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, alarm_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, emergency_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, panic_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, alarm_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, emergency_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbReport.OperationalInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.OperationalInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.OperationalInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.OperationalInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.OperationalInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.OperationalInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.OperationalInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbReport.OperationalInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.OperationalInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.OperationalInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbReport.OperationalInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.OperationalInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.OperationalInfo)
        maxpb.MaxpbReport.OperationalInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbReport.internal_static_maxpb_OperationalInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbReport.internal_static_maxpb_OperationalInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbReport.OperationalInfo.class, maxpb.MaxpbReport.OperationalInfo.Builder.class);
      }

      // Construct using maxpb.MaxpbReport.OperationalInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        panic_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        alarm_ = maxpb.MaxpbReport.AlarmState.ALM_ST_DEACTIVATED;
        bitField0_ = (bitField0_ & ~0x00000002);
        emergency_ = maxpb.MaxpbReport.EmergencyState.EME_ST_DEACTIVATED;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbReport.internal_static_maxpb_OperationalInfo_descriptor;
      }

      public maxpb.MaxpbReport.OperationalInfo getDefaultInstanceForType() {
        return maxpb.MaxpbReport.OperationalInfo.getDefaultInstance();
      }

      public maxpb.MaxpbReport.OperationalInfo build() {
        maxpb.MaxpbReport.OperationalInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbReport.OperationalInfo buildPartial() {
        maxpb.MaxpbReport.OperationalInfo result = new maxpb.MaxpbReport.OperationalInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.panic_ = panic_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.alarm_ = alarm_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.emergency_ = emergency_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbReport.OperationalInfo) {
          return mergeFrom((maxpb.MaxpbReport.OperationalInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbReport.OperationalInfo other) {
        if (other == maxpb.MaxpbReport.OperationalInfo.getDefaultInstance()) return this;
        if (other.hasPanic()) {
          setPanic(other.getPanic());
        }
        if (other.hasAlarm()) {
          setAlarm(other.getAlarm());
        }
        if (other.hasEmergency()) {
          setEmergency(other.getEmergency());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbReport.OperationalInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbReport.OperationalInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean panic_ ;
      /**
       * <code>optional bool panic = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public boolean hasPanic() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool panic = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public boolean getPanic() {
        return panic_;
      }
      /**
       * <code>optional bool panic = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public Builder setPanic(boolean value) {
        bitField0_ |= 0x00000001;
        panic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool panic = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162
       * </pre>
       */
      public Builder clearPanic() {
        bitField0_ = (bitField0_ & ~0x00000001);
        panic_ = false;
        onChanged();
        return this;
      }

      private maxpb.MaxpbReport.AlarmState alarm_ = maxpb.MaxpbReport.AlarmState.ALM_ST_DEACTIVATED;
      /**
       * <code>optional .maxpb.AlarmState alarm = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasAlarm() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .maxpb.AlarmState alarm = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public maxpb.MaxpbReport.AlarmState getAlarm() {
        return alarm_;
      }
      /**
       * <code>optional .maxpb.AlarmState alarm = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setAlarm(maxpb.MaxpbReport.AlarmState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        alarm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.AlarmState alarm = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearAlarm() {
        bitField0_ = (bitField0_ & ~0x00000002);
        alarm_ = maxpb.MaxpbReport.AlarmState.ALM_ST_DEACTIVATED;
        onChanged();
        return this;
      }

      private maxpb.MaxpbReport.EmergencyState emergency_ = maxpb.MaxpbReport.EmergencyState.EME_ST_DEACTIVATED;
      /**
       * <code>optional .maxpb.EmergencyState emergency = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasEmergency() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .maxpb.EmergencyState emergency = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.EmergencyState getEmergency() {
        return emergency_;
      }
      /**
       * <code>optional .maxpb.EmergencyState emergency = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setEmergency(maxpb.MaxpbReport.EmergencyState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        emergency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.EmergencyState emergency = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearEmergency() {
        bitField0_ = (bitField0_ & ~0x00000004);
        emergency_ = maxpb.MaxpbReport.EmergencyState.EME_ST_DEACTIVATED;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.OperationalInfo)
    }

    static {
      defaultInstance = new OperationalInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.OperationalInfo)
  }

  public interface FlagsInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.FlagsInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .maxpb.DeviceInfo deviceInfo = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasDeviceInfo();
    /**
     * <code>optional .maxpb.DeviceInfo deviceInfo = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.DeviceInfo getDeviceInfo();
    /**
     * <code>optional .maxpb.DeviceInfo deviceInfo = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.DeviceInfoOrBuilder getDeviceInfoOrBuilder();

    /**
     * <code>optional .maxpb.ConnectionInfo connectionInfo = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasConnectionInfo();
    /**
     * <code>optional .maxpb.ConnectionInfo connectionInfo = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.ConnectionInfo getConnectionInfo();
    /**
     * <code>optional .maxpb.ConnectionInfo connectionInfo = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.ConnectionInfoOrBuilder getConnectionInfoOrBuilder();

    /**
     * <code>optional .maxpb.OperationalInfo operationalInfo = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasOperationalInfo();
    /**
     * <code>optional .maxpb.OperationalInfo operationalInfo = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.OperationalInfo getOperationalInfo();
    /**
     * <code>optional .maxpb.OperationalInfo operationalInfo = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.OperationalInfoOrBuilder getOperationalInfoOrBuilder();
  }
  /**
   * Protobuf type {@code maxpb.FlagsInfo}
   */
  public static final class FlagsInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.FlagsInfo)
      FlagsInfoOrBuilder {
    // Use FlagsInfo.newBuilder() to construct.
    private FlagsInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FlagsInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FlagsInfo defaultInstance;
    public static FlagsInfo getDefaultInstance() {
      return defaultInstance;
    }

    public FlagsInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FlagsInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              maxpb.MaxpbReport.DeviceInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = deviceInfo_.toBuilder();
              }
              deviceInfo_ = input.readMessage(maxpb.MaxpbReport.DeviceInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(deviceInfo_);
                deviceInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              maxpb.MaxpbReport.ConnectionInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = connectionInfo_.toBuilder();
              }
              connectionInfo_ = input.readMessage(maxpb.MaxpbReport.ConnectionInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(connectionInfo_);
                connectionInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              maxpb.MaxpbReport.OperationalInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = operationalInfo_.toBuilder();
              }
              operationalInfo_ = input.readMessage(maxpb.MaxpbReport.OperationalInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(operationalInfo_);
                operationalInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbReport.internal_static_maxpb_FlagsInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbReport.internal_static_maxpb_FlagsInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbReport.FlagsInfo.class, maxpb.MaxpbReport.FlagsInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<FlagsInfo> PARSER =
        new com.google.protobuf.AbstractParser<FlagsInfo>() {
      public FlagsInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlagsInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FlagsInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DEVICEINFO_FIELD_NUMBER = 1;
    private maxpb.MaxpbReport.DeviceInfo deviceInfo_;
    /**
     * <code>optional .maxpb.DeviceInfo deviceInfo = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasDeviceInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .maxpb.DeviceInfo deviceInfo = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.DeviceInfo getDeviceInfo() {
      return deviceInfo_;
    }
    /**
     * <code>optional .maxpb.DeviceInfo deviceInfo = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.DeviceInfoOrBuilder getDeviceInfoOrBuilder() {
      return deviceInfo_;
    }

    public static final int CONNECTIONINFO_FIELD_NUMBER = 2;
    private maxpb.MaxpbReport.ConnectionInfo connectionInfo_;
    /**
     * <code>optional .maxpb.ConnectionInfo connectionInfo = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasConnectionInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .maxpb.ConnectionInfo connectionInfo = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.ConnectionInfo getConnectionInfo() {
      return connectionInfo_;
    }
    /**
     * <code>optional .maxpb.ConnectionInfo connectionInfo = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.ConnectionInfoOrBuilder getConnectionInfoOrBuilder() {
      return connectionInfo_;
    }

    public static final int OPERATIONALINFO_FIELD_NUMBER = 3;
    private maxpb.MaxpbReport.OperationalInfo operationalInfo_;
    /**
     * <code>optional .maxpb.OperationalInfo operationalInfo = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasOperationalInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .maxpb.OperationalInfo operationalInfo = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.OperationalInfo getOperationalInfo() {
      return operationalInfo_;
    }
    /**
     * <code>optional .maxpb.OperationalInfo operationalInfo = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.OperationalInfoOrBuilder getOperationalInfoOrBuilder() {
      return operationalInfo_;
    }

    private void initFields() {
      deviceInfo_ = maxpb.MaxpbReport.DeviceInfo.getDefaultInstance();
      connectionInfo_ = maxpb.MaxpbReport.ConnectionInfo.getDefaultInstance();
      operationalInfo_ = maxpb.MaxpbReport.OperationalInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, deviceInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, connectionInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, operationalInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, deviceInfo_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, connectionInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, operationalInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbReport.FlagsInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.FlagsInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.FlagsInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.FlagsInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.FlagsInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.FlagsInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.FlagsInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbReport.FlagsInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.FlagsInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.FlagsInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbReport.FlagsInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.FlagsInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.FlagsInfo)
        maxpb.MaxpbReport.FlagsInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbReport.internal_static_maxpb_FlagsInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbReport.internal_static_maxpb_FlagsInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbReport.FlagsInfo.class, maxpb.MaxpbReport.FlagsInfo.Builder.class);
      }

      // Construct using maxpb.MaxpbReport.FlagsInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDeviceInfoFieldBuilder();
          getConnectionInfoFieldBuilder();
          getOperationalInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (deviceInfoBuilder_ == null) {
          deviceInfo_ = maxpb.MaxpbReport.DeviceInfo.getDefaultInstance();
        } else {
          deviceInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (connectionInfoBuilder_ == null) {
          connectionInfo_ = maxpb.MaxpbReport.ConnectionInfo.getDefaultInstance();
        } else {
          connectionInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (operationalInfoBuilder_ == null) {
          operationalInfo_ = maxpb.MaxpbReport.OperationalInfo.getDefaultInstance();
        } else {
          operationalInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbReport.internal_static_maxpb_FlagsInfo_descriptor;
      }

      public maxpb.MaxpbReport.FlagsInfo getDefaultInstanceForType() {
        return maxpb.MaxpbReport.FlagsInfo.getDefaultInstance();
      }

      public maxpb.MaxpbReport.FlagsInfo build() {
        maxpb.MaxpbReport.FlagsInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbReport.FlagsInfo buildPartial() {
        maxpb.MaxpbReport.FlagsInfo result = new maxpb.MaxpbReport.FlagsInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (deviceInfoBuilder_ == null) {
          result.deviceInfo_ = deviceInfo_;
        } else {
          result.deviceInfo_ = deviceInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (connectionInfoBuilder_ == null) {
          result.connectionInfo_ = connectionInfo_;
        } else {
          result.connectionInfo_ = connectionInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (operationalInfoBuilder_ == null) {
          result.operationalInfo_ = operationalInfo_;
        } else {
          result.operationalInfo_ = operationalInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbReport.FlagsInfo) {
          return mergeFrom((maxpb.MaxpbReport.FlagsInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbReport.FlagsInfo other) {
        if (other == maxpb.MaxpbReport.FlagsInfo.getDefaultInstance()) return this;
        if (other.hasDeviceInfo()) {
          mergeDeviceInfo(other.getDeviceInfo());
        }
        if (other.hasConnectionInfo()) {
          mergeConnectionInfo(other.getConnectionInfo());
        }
        if (other.hasOperationalInfo()) {
          mergeOperationalInfo(other.getOperationalInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbReport.FlagsInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbReport.FlagsInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private maxpb.MaxpbReport.DeviceInfo deviceInfo_ = maxpb.MaxpbReport.DeviceInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.DeviceInfo, maxpb.MaxpbReport.DeviceInfo.Builder, maxpb.MaxpbReport.DeviceInfoOrBuilder> deviceInfoBuilder_;
      /**
       * <code>optional .maxpb.DeviceInfo deviceInfo = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasDeviceInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .maxpb.DeviceInfo deviceInfo = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.DeviceInfo getDeviceInfo() {
        if (deviceInfoBuilder_ == null) {
          return deviceInfo_;
        } else {
          return deviceInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.DeviceInfo deviceInfo = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setDeviceInfo(maxpb.MaxpbReport.DeviceInfo value) {
        if (deviceInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          deviceInfo_ = value;
          onChanged();
        } else {
          deviceInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .maxpb.DeviceInfo deviceInfo = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setDeviceInfo(
          maxpb.MaxpbReport.DeviceInfo.Builder builderForValue) {
        if (deviceInfoBuilder_ == null) {
          deviceInfo_ = builderForValue.build();
          onChanged();
        } else {
          deviceInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .maxpb.DeviceInfo deviceInfo = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder mergeDeviceInfo(maxpb.MaxpbReport.DeviceInfo value) {
        if (deviceInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              deviceInfo_ != maxpb.MaxpbReport.DeviceInfo.getDefaultInstance()) {
            deviceInfo_ =
              maxpb.MaxpbReport.DeviceInfo.newBuilder(deviceInfo_).mergeFrom(value).buildPartial();
          } else {
            deviceInfo_ = value;
          }
          onChanged();
        } else {
          deviceInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .maxpb.DeviceInfo deviceInfo = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearDeviceInfo() {
        if (deviceInfoBuilder_ == null) {
          deviceInfo_ = maxpb.MaxpbReport.DeviceInfo.getDefaultInstance();
          onChanged();
        } else {
          deviceInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .maxpb.DeviceInfo deviceInfo = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.DeviceInfo.Builder getDeviceInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getDeviceInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.DeviceInfo deviceInfo = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.DeviceInfoOrBuilder getDeviceInfoOrBuilder() {
        if (deviceInfoBuilder_ != null) {
          return deviceInfoBuilder_.getMessageOrBuilder();
        } else {
          return deviceInfo_;
        }
      }
      /**
       * <code>optional .maxpb.DeviceInfo deviceInfo = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.DeviceInfo, maxpb.MaxpbReport.DeviceInfo.Builder, maxpb.MaxpbReport.DeviceInfoOrBuilder> 
          getDeviceInfoFieldBuilder() {
        if (deviceInfoBuilder_ == null) {
          deviceInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbReport.DeviceInfo, maxpb.MaxpbReport.DeviceInfo.Builder, maxpb.MaxpbReport.DeviceInfoOrBuilder>(
                  getDeviceInfo(),
                  getParentForChildren(),
                  isClean());
          deviceInfo_ = null;
        }
        return deviceInfoBuilder_;
      }

      private maxpb.MaxpbReport.ConnectionInfo connectionInfo_ = maxpb.MaxpbReport.ConnectionInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.ConnectionInfo, maxpb.MaxpbReport.ConnectionInfo.Builder, maxpb.MaxpbReport.ConnectionInfoOrBuilder> connectionInfoBuilder_;
      /**
       * <code>optional .maxpb.ConnectionInfo connectionInfo = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasConnectionInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .maxpb.ConnectionInfo connectionInfo = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.ConnectionInfo getConnectionInfo() {
        if (connectionInfoBuilder_ == null) {
          return connectionInfo_;
        } else {
          return connectionInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.ConnectionInfo connectionInfo = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setConnectionInfo(maxpb.MaxpbReport.ConnectionInfo value) {
        if (connectionInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          connectionInfo_ = value;
          onChanged();
        } else {
          connectionInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .maxpb.ConnectionInfo connectionInfo = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setConnectionInfo(
          maxpb.MaxpbReport.ConnectionInfo.Builder builderForValue) {
        if (connectionInfoBuilder_ == null) {
          connectionInfo_ = builderForValue.build();
          onChanged();
        } else {
          connectionInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .maxpb.ConnectionInfo connectionInfo = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder mergeConnectionInfo(maxpb.MaxpbReport.ConnectionInfo value) {
        if (connectionInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              connectionInfo_ != maxpb.MaxpbReport.ConnectionInfo.getDefaultInstance()) {
            connectionInfo_ =
              maxpb.MaxpbReport.ConnectionInfo.newBuilder(connectionInfo_).mergeFrom(value).buildPartial();
          } else {
            connectionInfo_ = value;
          }
          onChanged();
        } else {
          connectionInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .maxpb.ConnectionInfo connectionInfo = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearConnectionInfo() {
        if (connectionInfoBuilder_ == null) {
          connectionInfo_ = maxpb.MaxpbReport.ConnectionInfo.getDefaultInstance();
          onChanged();
        } else {
          connectionInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .maxpb.ConnectionInfo connectionInfo = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.ConnectionInfo.Builder getConnectionInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getConnectionInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.ConnectionInfo connectionInfo = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.ConnectionInfoOrBuilder getConnectionInfoOrBuilder() {
        if (connectionInfoBuilder_ != null) {
          return connectionInfoBuilder_.getMessageOrBuilder();
        } else {
          return connectionInfo_;
        }
      }
      /**
       * <code>optional .maxpb.ConnectionInfo connectionInfo = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.ConnectionInfo, maxpb.MaxpbReport.ConnectionInfo.Builder, maxpb.MaxpbReport.ConnectionInfoOrBuilder> 
          getConnectionInfoFieldBuilder() {
        if (connectionInfoBuilder_ == null) {
          connectionInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbReport.ConnectionInfo, maxpb.MaxpbReport.ConnectionInfo.Builder, maxpb.MaxpbReport.ConnectionInfoOrBuilder>(
                  getConnectionInfo(),
                  getParentForChildren(),
                  isClean());
          connectionInfo_ = null;
        }
        return connectionInfoBuilder_;
      }

      private maxpb.MaxpbReport.OperationalInfo operationalInfo_ = maxpb.MaxpbReport.OperationalInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.OperationalInfo, maxpb.MaxpbReport.OperationalInfo.Builder, maxpb.MaxpbReport.OperationalInfoOrBuilder> operationalInfoBuilder_;
      /**
       * <code>optional .maxpb.OperationalInfo operationalInfo = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasOperationalInfo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .maxpb.OperationalInfo operationalInfo = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.OperationalInfo getOperationalInfo() {
        if (operationalInfoBuilder_ == null) {
          return operationalInfo_;
        } else {
          return operationalInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.OperationalInfo operationalInfo = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setOperationalInfo(maxpb.MaxpbReport.OperationalInfo value) {
        if (operationalInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          operationalInfo_ = value;
          onChanged();
        } else {
          operationalInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .maxpb.OperationalInfo operationalInfo = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setOperationalInfo(
          maxpb.MaxpbReport.OperationalInfo.Builder builderForValue) {
        if (operationalInfoBuilder_ == null) {
          operationalInfo_ = builderForValue.build();
          onChanged();
        } else {
          operationalInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .maxpb.OperationalInfo operationalInfo = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder mergeOperationalInfo(maxpb.MaxpbReport.OperationalInfo value) {
        if (operationalInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              operationalInfo_ != maxpb.MaxpbReport.OperationalInfo.getDefaultInstance()) {
            operationalInfo_ =
              maxpb.MaxpbReport.OperationalInfo.newBuilder(operationalInfo_).mergeFrom(value).buildPartial();
          } else {
            operationalInfo_ = value;
          }
          onChanged();
        } else {
          operationalInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .maxpb.OperationalInfo operationalInfo = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearOperationalInfo() {
        if (operationalInfoBuilder_ == null) {
          operationalInfo_ = maxpb.MaxpbReport.OperationalInfo.getDefaultInstance();
          onChanged();
        } else {
          operationalInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .maxpb.OperationalInfo operationalInfo = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.OperationalInfo.Builder getOperationalInfoBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getOperationalInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.OperationalInfo operationalInfo = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.OperationalInfoOrBuilder getOperationalInfoOrBuilder() {
        if (operationalInfoBuilder_ != null) {
          return operationalInfoBuilder_.getMessageOrBuilder();
        } else {
          return operationalInfo_;
        }
      }
      /**
       * <code>optional .maxpb.OperationalInfo operationalInfo = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.OperationalInfo, maxpb.MaxpbReport.OperationalInfo.Builder, maxpb.MaxpbReport.OperationalInfoOrBuilder> 
          getOperationalInfoFieldBuilder() {
        if (operationalInfoBuilder_ == null) {
          operationalInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbReport.OperationalInfo, maxpb.MaxpbReport.OperationalInfo.Builder, maxpb.MaxpbReport.OperationalInfoOrBuilder>(
                  getOperationalInfo(),
                  getParentForChildren(),
                  isClean());
          operationalInfo_ = null;
        }
        return operationalInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.FlagsInfo)
    }

    static {
      defaultInstance = new FlagsInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.FlagsInfo)
  }

  public interface ReportAccessoriesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.ReportAccessories)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 deviceID = 1;</code>
     */
    boolean hasDeviceID();
    /**
     * <code>optional uint64 deviceID = 1;</code>
     */
    long getDeviceID();

    /**
     * <code>optional .maxpb.IDPack identificationPack = 2;</code>
     */
    boolean hasIdentificationPack();
    /**
     * <code>optional .maxpb.IDPack identificationPack = 2;</code>
     */
    maxpb.MaxpbReport.IDPack getIdentificationPack();
    /**
     * <code>optional .maxpb.IDPack identificationPack = 2;</code>
     */
    maxpb.MaxpbReport.IDPackOrBuilder getIdentificationPackOrBuilder();

    /**
     * <code>optional uint32 sequenceNumber = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasSequenceNumber();
    /**
     * <code>optional uint32 sequenceNumber = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getSequenceNumber();

    /**
     * <code>optional .maxpb.ReportReason reason = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasReason();
    /**
     * <code>optional .maxpb.ReportReason reason = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.ReportReason getReason();

    /**
     * <code>optional uint64 dateTime = 5;</code>
     *
     * <pre>
     *&#47; Unix time, seconds since 01/01/1970 SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasDateTime();
    /**
     * <code>optional uint64 dateTime = 5;</code>
     *
     * <pre>
     *&#47; Unix time, seconds since 01/01/1970 SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    long getDateTime();

    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<maxpb.MaxpbReport.PositionInfo> 
        getPositionInfoList();
    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.PositionInfo getPositionInfo(int index);
    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getPositionInfoCount();
    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbReport.PositionInfoOrBuilder> 
        getPositionInfoOrBuilderList();
    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.PositionInfoOrBuilder getPositionInfoOrBuilder(
        int index);

    /**
     * <code>optional .maxpb.GpsInfo gps = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasGps();
    /**
     * <code>optional .maxpb.GpsInfo gps = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbGps.GpsInfo getGps();
    /**
     * <code>optional .maxpb.GpsInfo gps = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbGps.GpsInfoOrBuilder getGpsOrBuilder();

    /**
     * <code>optional .maxpb.IOsInfo ios = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasIos();
    /**
     * <code>optional .maxpb.IOsInfo ios = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbGpio.IOsInfo getIos();
    /**
     * <code>optional .maxpb.IOsInfo ios = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbGpio.IOsInfoOrBuilder getIosOrBuilder();

    /**
     * <code>optional .maxpb.FlagsInfo flags = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasFlags();
    /**
     * <code>optional .maxpb.FlagsInfo flags = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.FlagsInfo getFlags();
    /**
     * <code>optional .maxpb.FlagsInfo flags = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.FlagsInfoOrBuilder getFlagsOrBuilder();

    /**
     * <code>optional .maxpb.TelemetryInfo telemetry = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    boolean hasTelemetry();
    /**
     * <code>optional .maxpb.TelemetryInfo telemetry = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    maxpb.MaxpbTelemetry.TelemetryInfo getTelemetry();
    /**
     * <code>optional .maxpb.TelemetryInfo telemetry = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    maxpb.MaxpbTelemetry.TelemetryInfoOrBuilder getTelemetryOrBuilder();

    /**
     * <code>optional .maxpb.Events events = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasEvents();
    /**
     * <code>optional .maxpb.Events events = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.Events getEvents();
    /**
     * <code>optional .maxpb.Events events = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.EventsOrBuilder getEventsOrBuilder();
  }
  /**
   * Protobuf type {@code maxpb.ReportAccessories}
   */
  public static final class ReportAccessories extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.ReportAccessories)
      ReportAccessoriesOrBuilder {
    // Use ReportAccessories.newBuilder() to construct.
    private ReportAccessories(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ReportAccessories(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ReportAccessories defaultInstance;
    public static ReportAccessories getDefaultInstance() {
      return defaultInstance;
    }

    public ReportAccessories getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ReportAccessories(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              deviceID_ = input.readUInt64();
              break;
            }
            case 18: {
              maxpb.MaxpbReport.IDPack.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = identificationPack_.toBuilder();
              }
              identificationPack_ = input.readMessage(maxpb.MaxpbReport.IDPack.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(identificationPack_);
                identificationPack_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              sequenceNumber_ = input.readUInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              maxpb.MaxpbReport.ReportReason value = maxpb.MaxpbReport.ReportReason.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                reason_ = value;
              }
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              dateTime_ = input.readUInt64();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                positionInfo_ = new java.util.ArrayList<maxpb.MaxpbReport.PositionInfo>();
                mutable_bitField0_ |= 0x00000020;
              }
              positionInfo_.add(input.readMessage(maxpb.MaxpbReport.PositionInfo.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              maxpb.MaxpbGps.GpsInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = gps_.toBuilder();
              }
              gps_ = input.readMessage(maxpb.MaxpbGps.GpsInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gps_);
                gps_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 66: {
              maxpb.MaxpbGpio.IOsInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = ios_.toBuilder();
              }
              ios_ = input.readMessage(maxpb.MaxpbGpio.IOsInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ios_);
                ios_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 74: {
              maxpb.MaxpbReport.FlagsInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = flags_.toBuilder();
              }
              flags_ = input.readMessage(maxpb.MaxpbReport.FlagsInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(flags_);
                flags_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 82: {
              maxpb.MaxpbTelemetry.TelemetryInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = telemetry_.toBuilder();
              }
              telemetry_ = input.readMessage(maxpb.MaxpbTelemetry.TelemetryInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(telemetry_);
                telemetry_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 90: {
              maxpb.MaxpbReport.Events.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = events_.toBuilder();
              }
              events_ = input.readMessage(maxpb.MaxpbReport.Events.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(events_);
                events_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          positionInfo_ = java.util.Collections.unmodifiableList(positionInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbReport.internal_static_maxpb_ReportAccessories_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbReport.internal_static_maxpb_ReportAccessories_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbReport.ReportAccessories.class, maxpb.MaxpbReport.ReportAccessories.Builder.class);
    }

    public static com.google.protobuf.Parser<ReportAccessories> PARSER =
        new com.google.protobuf.AbstractParser<ReportAccessories>() {
      public ReportAccessories parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReportAccessories(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ReportAccessories> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DEVICEID_FIELD_NUMBER = 1;
    private long deviceID_;
    /**
     * <code>optional uint64 deviceID = 1;</code>
     */
    public boolean hasDeviceID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 deviceID = 1;</code>
     */
    public long getDeviceID() {
      return deviceID_;
    }

    public static final int IDENTIFICATIONPACK_FIELD_NUMBER = 2;
    private maxpb.MaxpbReport.IDPack identificationPack_;
    /**
     * <code>optional .maxpb.IDPack identificationPack = 2;</code>
     */
    public boolean hasIdentificationPack() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .maxpb.IDPack identificationPack = 2;</code>
     */
    public maxpb.MaxpbReport.IDPack getIdentificationPack() {
      return identificationPack_;
    }
    /**
     * <code>optional .maxpb.IDPack identificationPack = 2;</code>
     */
    public maxpb.MaxpbReport.IDPackOrBuilder getIdentificationPackOrBuilder() {
      return identificationPack_;
    }

    public static final int SEQUENCENUMBER_FIELD_NUMBER = 3;
    private int sequenceNumber_;
    /**
     * <code>optional uint32 sequenceNumber = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasSequenceNumber() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 sequenceNumber = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getSequenceNumber() {
      return sequenceNumber_;
    }

    public static final int REASON_FIELD_NUMBER = 4;
    private maxpb.MaxpbReport.ReportReason reason_;
    /**
     * <code>optional .maxpb.ReportReason reason = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .maxpb.ReportReason reason = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.ReportReason getReason() {
      return reason_;
    }

    public static final int DATETIME_FIELD_NUMBER = 5;
    private long dateTime_;
    /**
     * <code>optional uint64 dateTime = 5;</code>
     *
     * <pre>
     *&#47; Unix time, seconds since 01/01/1970 SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasDateTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 dateTime = 5;</code>
     *
     * <pre>
     *&#47; Unix time, seconds since 01/01/1970 SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public long getDateTime() {
      return dateTime_;
    }

    public static final int POSITIONINFO_FIELD_NUMBER = 6;
    private java.util.List<maxpb.MaxpbReport.PositionInfo> positionInfo_;
    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<maxpb.MaxpbReport.PositionInfo> getPositionInfoList() {
      return positionInfo_;
    }
    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbReport.PositionInfoOrBuilder> 
        getPositionInfoOrBuilderList() {
      return positionInfo_;
    }
    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getPositionInfoCount() {
      return positionInfo_.size();
    }
    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.PositionInfo getPositionInfo(int index) {
      return positionInfo_.get(index);
    }
    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.PositionInfoOrBuilder getPositionInfoOrBuilder(
        int index) {
      return positionInfo_.get(index);
    }

    public static final int GPS_FIELD_NUMBER = 7;
    private maxpb.MaxpbGps.GpsInfo gps_;
    /**
     * <code>optional .maxpb.GpsInfo gps = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasGps() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .maxpb.GpsInfo gps = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbGps.GpsInfo getGps() {
      return gps_;
    }
    /**
     * <code>optional .maxpb.GpsInfo gps = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbGps.GpsInfoOrBuilder getGpsOrBuilder() {
      return gps_;
    }

    public static final int IOS_FIELD_NUMBER = 8;
    private maxpb.MaxpbGpio.IOsInfo ios_;
    /**
     * <code>optional .maxpb.IOsInfo ios = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasIos() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .maxpb.IOsInfo ios = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbGpio.IOsInfo getIos() {
      return ios_;
    }
    /**
     * <code>optional .maxpb.IOsInfo ios = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbGpio.IOsInfoOrBuilder getIosOrBuilder() {
      return ios_;
    }

    public static final int FLAGS_FIELD_NUMBER = 9;
    private maxpb.MaxpbReport.FlagsInfo flags_;
    /**
     * <code>optional .maxpb.FlagsInfo flags = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasFlags() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .maxpb.FlagsInfo flags = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.FlagsInfo getFlags() {
      return flags_;
    }
    /**
     * <code>optional .maxpb.FlagsInfo flags = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.FlagsInfoOrBuilder getFlagsOrBuilder() {
      return flags_;
    }

    public static final int TELEMETRY_FIELD_NUMBER = 10;
    private maxpb.MaxpbTelemetry.TelemetryInfo telemetry_;
    /**
     * <code>optional .maxpb.TelemetryInfo telemetry = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public boolean hasTelemetry() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .maxpb.TelemetryInfo telemetry = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public maxpb.MaxpbTelemetry.TelemetryInfo getTelemetry() {
      return telemetry_;
    }
    /**
     * <code>optional .maxpb.TelemetryInfo telemetry = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public maxpb.MaxpbTelemetry.TelemetryInfoOrBuilder getTelemetryOrBuilder() {
      return telemetry_;
    }

    public static final int EVENTS_FIELD_NUMBER = 11;
    private maxpb.MaxpbReport.Events events_;
    /**
     * <code>optional .maxpb.Events events = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasEvents() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .maxpb.Events events = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.Events getEvents() {
      return events_;
    }
    /**
     * <code>optional .maxpb.Events events = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.EventsOrBuilder getEventsOrBuilder() {
      return events_;
    }

    private void initFields() {
      deviceID_ = 0L;
      identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
      sequenceNumber_ = 0;
      reason_ = maxpb.MaxpbReport.ReportReason.RR_SHUTDOWN;
      dateTime_ = 0L;
      positionInfo_ = java.util.Collections.emptyList();
      gps_ = maxpb.MaxpbGps.GpsInfo.getDefaultInstance();
      ios_ = maxpb.MaxpbGpio.IOsInfo.getDefaultInstance();
      flags_ = maxpb.MaxpbReport.FlagsInfo.getDefaultInstance();
      telemetry_ = maxpb.MaxpbTelemetry.TelemetryInfo.getDefaultInstance();
      events_ = maxpb.MaxpbReport.Events.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getPositionInfoCount(); i++) {
        if (!getPositionInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGps()) {
        if (!getGps().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTelemetry()) {
        if (!getTelemetry().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasEvents()) {
        if (!getEvents().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, deviceID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, identificationPack_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, sequenceNumber_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, reason_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, dateTime_);
      }
      for (int i = 0; i < positionInfo_.size(); i++) {
        output.writeMessage(6, positionInfo_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, gps_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(8, ios_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(9, flags_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(10, telemetry_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(11, events_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, deviceID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, identificationPack_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sequenceNumber_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, reason_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, dateTime_);
      }
      for (int i = 0; i < positionInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, positionInfo_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, gps_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, ios_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, flags_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, telemetry_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, events_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbReport.ReportAccessories parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.ReportAccessories parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.ReportAccessories parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.ReportAccessories parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.ReportAccessories parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.ReportAccessories parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.ReportAccessories parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbReport.ReportAccessories parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.ReportAccessories parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.ReportAccessories parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbReport.ReportAccessories prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.ReportAccessories}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.ReportAccessories)
        maxpb.MaxpbReport.ReportAccessoriesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbReport.internal_static_maxpb_ReportAccessories_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbReport.internal_static_maxpb_ReportAccessories_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbReport.ReportAccessories.class, maxpb.MaxpbReport.ReportAccessories.Builder.class);
      }

      // Construct using maxpb.MaxpbReport.ReportAccessories.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIdentificationPackFieldBuilder();
          getPositionInfoFieldBuilder();
          getGpsFieldBuilder();
          getIosFieldBuilder();
          getFlagsFieldBuilder();
          getTelemetryFieldBuilder();
          getEventsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        deviceID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (identificationPackBuilder_ == null) {
          identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
        } else {
          identificationPackBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        sequenceNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        reason_ = maxpb.MaxpbReport.ReportReason.RR_SHUTDOWN;
        bitField0_ = (bitField0_ & ~0x00000008);
        dateTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (positionInfoBuilder_ == null) {
          positionInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          positionInfoBuilder_.clear();
        }
        if (gpsBuilder_ == null) {
          gps_ = maxpb.MaxpbGps.GpsInfo.getDefaultInstance();
        } else {
          gpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (iosBuilder_ == null) {
          ios_ = maxpb.MaxpbGpio.IOsInfo.getDefaultInstance();
        } else {
          iosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (flagsBuilder_ == null) {
          flags_ = maxpb.MaxpbReport.FlagsInfo.getDefaultInstance();
        } else {
          flagsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (telemetryBuilder_ == null) {
          telemetry_ = maxpb.MaxpbTelemetry.TelemetryInfo.getDefaultInstance();
        } else {
          telemetryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (eventsBuilder_ == null) {
          events_ = maxpb.MaxpbReport.Events.getDefaultInstance();
        } else {
          eventsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbReport.internal_static_maxpb_ReportAccessories_descriptor;
      }

      public maxpb.MaxpbReport.ReportAccessories getDefaultInstanceForType() {
        return maxpb.MaxpbReport.ReportAccessories.getDefaultInstance();
      }

      public maxpb.MaxpbReport.ReportAccessories build() {
        maxpb.MaxpbReport.ReportAccessories result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbReport.ReportAccessories buildPartial() {
        maxpb.MaxpbReport.ReportAccessories result = new maxpb.MaxpbReport.ReportAccessories(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deviceID_ = deviceID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (identificationPackBuilder_ == null) {
          result.identificationPack_ = identificationPack_;
        } else {
          result.identificationPack_ = identificationPackBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sequenceNumber_ = sequenceNumber_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.reason_ = reason_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.dateTime_ = dateTime_;
        if (positionInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            positionInfo_ = java.util.Collections.unmodifiableList(positionInfo_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.positionInfo_ = positionInfo_;
        } else {
          result.positionInfo_ = positionInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        if (gpsBuilder_ == null) {
          result.gps_ = gps_;
        } else {
          result.gps_ = gpsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        if (iosBuilder_ == null) {
          result.ios_ = ios_;
        } else {
          result.ios_ = iosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        if (flagsBuilder_ == null) {
          result.flags_ = flags_;
        } else {
          result.flags_ = flagsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        if (telemetryBuilder_ == null) {
          result.telemetry_ = telemetry_;
        } else {
          result.telemetry_ = telemetryBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        if (eventsBuilder_ == null) {
          result.events_ = events_;
        } else {
          result.events_ = eventsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbReport.ReportAccessories) {
          return mergeFrom((maxpb.MaxpbReport.ReportAccessories)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbReport.ReportAccessories other) {
        if (other == maxpb.MaxpbReport.ReportAccessories.getDefaultInstance()) return this;
        if (other.hasDeviceID()) {
          setDeviceID(other.getDeviceID());
        }
        if (other.hasIdentificationPack()) {
          mergeIdentificationPack(other.getIdentificationPack());
        }
        if (other.hasSequenceNumber()) {
          setSequenceNumber(other.getSequenceNumber());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        if (other.hasDateTime()) {
          setDateTime(other.getDateTime());
        }
        if (positionInfoBuilder_ == null) {
          if (!other.positionInfo_.isEmpty()) {
            if (positionInfo_.isEmpty()) {
              positionInfo_ = other.positionInfo_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensurePositionInfoIsMutable();
              positionInfo_.addAll(other.positionInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.positionInfo_.isEmpty()) {
            if (positionInfoBuilder_.isEmpty()) {
              positionInfoBuilder_.dispose();
              positionInfoBuilder_ = null;
              positionInfo_ = other.positionInfo_;
              bitField0_ = (bitField0_ & ~0x00000020);
              positionInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPositionInfoFieldBuilder() : null;
            } else {
              positionInfoBuilder_.addAllMessages(other.positionInfo_);
            }
          }
        }
        if (other.hasGps()) {
          mergeGps(other.getGps());
        }
        if (other.hasIos()) {
          mergeIos(other.getIos());
        }
        if (other.hasFlags()) {
          mergeFlags(other.getFlags());
        }
        if (other.hasTelemetry()) {
          mergeTelemetry(other.getTelemetry());
        }
        if (other.hasEvents()) {
          mergeEvents(other.getEvents());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getPositionInfoCount(); i++) {
          if (!getPositionInfo(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasGps()) {
          if (!getGps().isInitialized()) {
            
            return false;
          }
        }
        if (hasTelemetry()) {
          if (!getTelemetry().isInitialized()) {
            
            return false;
          }
        }
        if (hasEvents()) {
          if (!getEvents().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbReport.ReportAccessories parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbReport.ReportAccessories) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long deviceID_ ;
      /**
       * <code>optional uint64 deviceID = 1;</code>
       */
      public boolean hasDeviceID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 deviceID = 1;</code>
       */
      public long getDeviceID() {
        return deviceID_;
      }
      /**
       * <code>optional uint64 deviceID = 1;</code>
       */
      public Builder setDeviceID(long value) {
        bitField0_ |= 0x00000001;
        deviceID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 deviceID = 1;</code>
       */
      public Builder clearDeviceID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceID_ = 0L;
        onChanged();
        return this;
      }

      private maxpb.MaxpbReport.IDPack identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.IDPack, maxpb.MaxpbReport.IDPack.Builder, maxpb.MaxpbReport.IDPackOrBuilder> identificationPackBuilder_;
      /**
       * <code>optional .maxpb.IDPack identificationPack = 2;</code>
       */
      public boolean hasIdentificationPack() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 2;</code>
       */
      public maxpb.MaxpbReport.IDPack getIdentificationPack() {
        if (identificationPackBuilder_ == null) {
          return identificationPack_;
        } else {
          return identificationPackBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 2;</code>
       */
      public Builder setIdentificationPack(maxpb.MaxpbReport.IDPack value) {
        if (identificationPackBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          identificationPack_ = value;
          onChanged();
        } else {
          identificationPackBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 2;</code>
       */
      public Builder setIdentificationPack(
          maxpb.MaxpbReport.IDPack.Builder builderForValue) {
        if (identificationPackBuilder_ == null) {
          identificationPack_ = builderForValue.build();
          onChanged();
        } else {
          identificationPackBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 2;</code>
       */
      public Builder mergeIdentificationPack(maxpb.MaxpbReport.IDPack value) {
        if (identificationPackBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              identificationPack_ != maxpb.MaxpbReport.IDPack.getDefaultInstance()) {
            identificationPack_ =
              maxpb.MaxpbReport.IDPack.newBuilder(identificationPack_).mergeFrom(value).buildPartial();
          } else {
            identificationPack_ = value;
          }
          onChanged();
        } else {
          identificationPackBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 2;</code>
       */
      public Builder clearIdentificationPack() {
        if (identificationPackBuilder_ == null) {
          identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
          onChanged();
        } else {
          identificationPackBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 2;</code>
       */
      public maxpb.MaxpbReport.IDPack.Builder getIdentificationPackBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getIdentificationPackFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 2;</code>
       */
      public maxpb.MaxpbReport.IDPackOrBuilder getIdentificationPackOrBuilder() {
        if (identificationPackBuilder_ != null) {
          return identificationPackBuilder_.getMessageOrBuilder();
        } else {
          return identificationPack_;
        }
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.IDPack, maxpb.MaxpbReport.IDPack.Builder, maxpb.MaxpbReport.IDPackOrBuilder> 
          getIdentificationPackFieldBuilder() {
        if (identificationPackBuilder_ == null) {
          identificationPackBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbReport.IDPack, maxpb.MaxpbReport.IDPack.Builder, maxpb.MaxpbReport.IDPackOrBuilder>(
                  getIdentificationPack(),
                  getParentForChildren(),
                  isClean());
          identificationPack_ = null;
        }
        return identificationPackBuilder_;
      }

      private int sequenceNumber_ ;
      /**
       * <code>optional uint32 sequenceNumber = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasSequenceNumber() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 sequenceNumber = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getSequenceNumber() {
        return sequenceNumber_;
      }
      /**
       * <code>optional uint32 sequenceNumber = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setSequenceNumber(int value) {
        bitField0_ |= 0x00000004;
        sequenceNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 sequenceNumber = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearSequenceNumber() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sequenceNumber_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbReport.ReportReason reason_ = maxpb.MaxpbReport.ReportReason.RR_SHUTDOWN;
      /**
       * <code>optional .maxpb.ReportReason reason = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .maxpb.ReportReason reason = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.ReportReason getReason() {
        return reason_;
      }
      /**
       * <code>optional .maxpb.ReportReason reason = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setReason(maxpb.MaxpbReport.ReportReason value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.ReportReason reason = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearReason() {
        bitField0_ = (bitField0_ & ~0x00000008);
        reason_ = maxpb.MaxpbReport.ReportReason.RR_SHUTDOWN;
        onChanged();
        return this;
      }

      private long dateTime_ ;
      /**
       * <code>optional uint64 dateTime = 5;</code>
       *
       * <pre>
       *&#47; Unix time, seconds since 01/01/1970 SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasDateTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 dateTime = 5;</code>
       *
       * <pre>
       *&#47; Unix time, seconds since 01/01/1970 SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public long getDateTime() {
        return dateTime_;
      }
      /**
       * <code>optional uint64 dateTime = 5;</code>
       *
       * <pre>
       *&#47; Unix time, seconds since 01/01/1970 SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setDateTime(long value) {
        bitField0_ |= 0x00000010;
        dateTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 dateTime = 5;</code>
       *
       * <pre>
       *&#47; Unix time, seconds since 01/01/1970 SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearDateTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dateTime_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<maxpb.MaxpbReport.PositionInfo> positionInfo_ =
        java.util.Collections.emptyList();
      private void ensurePositionInfoIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          positionInfo_ = new java.util.ArrayList<maxpb.MaxpbReport.PositionInfo>(positionInfo_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.PositionInfo, maxpb.MaxpbReport.PositionInfo.Builder, maxpb.MaxpbReport.PositionInfoOrBuilder> positionInfoBuilder_;

      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.PositionInfo> getPositionInfoList() {
        if (positionInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(positionInfo_);
        } else {
          return positionInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getPositionInfoCount() {
        if (positionInfoBuilder_ == null) {
          return positionInfo_.size();
        } else {
          return positionInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo getPositionInfo(int index) {
        if (positionInfoBuilder_ == null) {
          return positionInfo_.get(index);
        } else {
          return positionInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setPositionInfo(
          int index, maxpb.MaxpbReport.PositionInfo value) {
        if (positionInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionInfoIsMutable();
          positionInfo_.set(index, value);
          onChanged();
        } else {
          positionInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setPositionInfo(
          int index, maxpb.MaxpbReport.PositionInfo.Builder builderForValue) {
        if (positionInfoBuilder_ == null) {
          ensurePositionInfoIsMutable();
          positionInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          positionInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addPositionInfo(maxpb.MaxpbReport.PositionInfo value) {
        if (positionInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionInfoIsMutable();
          positionInfo_.add(value);
          onChanged();
        } else {
          positionInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addPositionInfo(
          int index, maxpb.MaxpbReport.PositionInfo value) {
        if (positionInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionInfoIsMutable();
          positionInfo_.add(index, value);
          onChanged();
        } else {
          positionInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addPositionInfo(
          maxpb.MaxpbReport.PositionInfo.Builder builderForValue) {
        if (positionInfoBuilder_ == null) {
          ensurePositionInfoIsMutable();
          positionInfo_.add(builderForValue.build());
          onChanged();
        } else {
          positionInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addPositionInfo(
          int index, maxpb.MaxpbReport.PositionInfo.Builder builderForValue) {
        if (positionInfoBuilder_ == null) {
          ensurePositionInfoIsMutable();
          positionInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          positionInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addAllPositionInfo(
          java.lang.Iterable<? extends maxpb.MaxpbReport.PositionInfo> values) {
        if (positionInfoBuilder_ == null) {
          ensurePositionInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, positionInfo_);
          onChanged();
        } else {
          positionInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearPositionInfo() {
        if (positionInfoBuilder_ == null) {
          positionInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          positionInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder removePositionInfo(int index) {
        if (positionInfoBuilder_ == null) {
          ensurePositionInfoIsMutable();
          positionInfo_.remove(index);
          onChanged();
        } else {
          positionInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo.Builder getPositionInfoBuilder(
          int index) {
        return getPositionInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfoOrBuilder getPositionInfoOrBuilder(
          int index) {
        if (positionInfoBuilder_ == null) {
          return positionInfo_.get(index);  } else {
          return positionInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbReport.PositionInfoOrBuilder> 
           getPositionInfoOrBuilderList() {
        if (positionInfoBuilder_ != null) {
          return positionInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(positionInfo_);
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo.Builder addPositionInfoBuilder() {
        return getPositionInfoFieldBuilder().addBuilder(
            maxpb.MaxpbReport.PositionInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo.Builder addPositionInfoBuilder(
          int index) {
        return getPositionInfoFieldBuilder().addBuilder(
            index, maxpb.MaxpbReport.PositionInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.PositionInfo.Builder> 
           getPositionInfoBuilderList() {
        return getPositionInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.PositionInfo, maxpb.MaxpbReport.PositionInfo.Builder, maxpb.MaxpbReport.PositionInfoOrBuilder> 
          getPositionInfoFieldBuilder() {
        if (positionInfoBuilder_ == null) {
          positionInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbReport.PositionInfo, maxpb.MaxpbReport.PositionInfo.Builder, maxpb.MaxpbReport.PositionInfoOrBuilder>(
                  positionInfo_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          positionInfo_ = null;
        }
        return positionInfoBuilder_;
      }

      private maxpb.MaxpbGps.GpsInfo gps_ = maxpb.MaxpbGps.GpsInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbGps.GpsInfo, maxpb.MaxpbGps.GpsInfo.Builder, maxpb.MaxpbGps.GpsInfoOrBuilder> gpsBuilder_;
      /**
       * <code>optional .maxpb.GpsInfo gps = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasGps() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .maxpb.GpsInfo gps = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGps.GpsInfo getGps() {
        if (gpsBuilder_ == null) {
          return gps_;
        } else {
          return gpsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.GpsInfo gps = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setGps(maxpb.MaxpbGps.GpsInfo value) {
        if (gpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gps_ = value;
          onChanged();
        } else {
          gpsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .maxpb.GpsInfo gps = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setGps(
          maxpb.MaxpbGps.GpsInfo.Builder builderForValue) {
        if (gpsBuilder_ == null) {
          gps_ = builderForValue.build();
          onChanged();
        } else {
          gpsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .maxpb.GpsInfo gps = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder mergeGps(maxpb.MaxpbGps.GpsInfo value) {
        if (gpsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              gps_ != maxpb.MaxpbGps.GpsInfo.getDefaultInstance()) {
            gps_ =
              maxpb.MaxpbGps.GpsInfo.newBuilder(gps_).mergeFrom(value).buildPartial();
          } else {
            gps_ = value;
          }
          onChanged();
        } else {
          gpsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .maxpb.GpsInfo gps = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearGps() {
        if (gpsBuilder_ == null) {
          gps_ = maxpb.MaxpbGps.GpsInfo.getDefaultInstance();
          onChanged();
        } else {
          gpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .maxpb.GpsInfo gps = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGps.GpsInfo.Builder getGpsBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getGpsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.GpsInfo gps = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGps.GpsInfoOrBuilder getGpsOrBuilder() {
        if (gpsBuilder_ != null) {
          return gpsBuilder_.getMessageOrBuilder();
        } else {
          return gps_;
        }
      }
      /**
       * <code>optional .maxpb.GpsInfo gps = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbGps.GpsInfo, maxpb.MaxpbGps.GpsInfo.Builder, maxpb.MaxpbGps.GpsInfoOrBuilder> 
          getGpsFieldBuilder() {
        if (gpsBuilder_ == null) {
          gpsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbGps.GpsInfo, maxpb.MaxpbGps.GpsInfo.Builder, maxpb.MaxpbGps.GpsInfoOrBuilder>(
                  getGps(),
                  getParentForChildren(),
                  isClean());
          gps_ = null;
        }
        return gpsBuilder_;
      }

      private maxpb.MaxpbGpio.IOsInfo ios_ = maxpb.MaxpbGpio.IOsInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbGpio.IOsInfo, maxpb.MaxpbGpio.IOsInfo.Builder, maxpb.MaxpbGpio.IOsInfoOrBuilder> iosBuilder_;
      /**
       * <code>optional .maxpb.IOsInfo ios = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasIos() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGpio.IOsInfo getIos() {
        if (iosBuilder_ == null) {
          return ios_;
        } else {
          return iosBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setIos(maxpb.MaxpbGpio.IOsInfo value) {
        if (iosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ios_ = value;
          onChanged();
        } else {
          iosBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setIos(
          maxpb.MaxpbGpio.IOsInfo.Builder builderForValue) {
        if (iosBuilder_ == null) {
          ios_ = builderForValue.build();
          onChanged();
        } else {
          iosBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder mergeIos(maxpb.MaxpbGpio.IOsInfo value) {
        if (iosBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              ios_ != maxpb.MaxpbGpio.IOsInfo.getDefaultInstance()) {
            ios_ =
              maxpb.MaxpbGpio.IOsInfo.newBuilder(ios_).mergeFrom(value).buildPartial();
          } else {
            ios_ = value;
          }
          onChanged();
        } else {
          iosBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearIos() {
        if (iosBuilder_ == null) {
          ios_ = maxpb.MaxpbGpio.IOsInfo.getDefaultInstance();
          onChanged();
        } else {
          iosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGpio.IOsInfo.Builder getIosBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getIosFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGpio.IOsInfoOrBuilder getIosOrBuilder() {
        if (iosBuilder_ != null) {
          return iosBuilder_.getMessageOrBuilder();
        } else {
          return ios_;
        }
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbGpio.IOsInfo, maxpb.MaxpbGpio.IOsInfo.Builder, maxpb.MaxpbGpio.IOsInfoOrBuilder> 
          getIosFieldBuilder() {
        if (iosBuilder_ == null) {
          iosBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbGpio.IOsInfo, maxpb.MaxpbGpio.IOsInfo.Builder, maxpb.MaxpbGpio.IOsInfoOrBuilder>(
                  getIos(),
                  getParentForChildren(),
                  isClean());
          ios_ = null;
        }
        return iosBuilder_;
      }

      private maxpb.MaxpbReport.FlagsInfo flags_ = maxpb.MaxpbReport.FlagsInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.FlagsInfo, maxpb.MaxpbReport.FlagsInfo.Builder, maxpb.MaxpbReport.FlagsInfoOrBuilder> flagsBuilder_;
      /**
       * <code>optional .maxpb.FlagsInfo flags = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasFlags() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.FlagsInfo getFlags() {
        if (flagsBuilder_ == null) {
          return flags_;
        } else {
          return flagsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setFlags(maxpb.MaxpbReport.FlagsInfo value) {
        if (flagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          flags_ = value;
          onChanged();
        } else {
          flagsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setFlags(
          maxpb.MaxpbReport.FlagsInfo.Builder builderForValue) {
        if (flagsBuilder_ == null) {
          flags_ = builderForValue.build();
          onChanged();
        } else {
          flagsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder mergeFlags(maxpb.MaxpbReport.FlagsInfo value) {
        if (flagsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              flags_ != maxpb.MaxpbReport.FlagsInfo.getDefaultInstance()) {
            flags_ =
              maxpb.MaxpbReport.FlagsInfo.newBuilder(flags_).mergeFrom(value).buildPartial();
          } else {
            flags_ = value;
          }
          onChanged();
        } else {
          flagsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearFlags() {
        if (flagsBuilder_ == null) {
          flags_ = maxpb.MaxpbReport.FlagsInfo.getDefaultInstance();
          onChanged();
        } else {
          flagsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.FlagsInfo.Builder getFlagsBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getFlagsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.FlagsInfoOrBuilder getFlagsOrBuilder() {
        if (flagsBuilder_ != null) {
          return flagsBuilder_.getMessageOrBuilder();
        } else {
          return flags_;
        }
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.FlagsInfo, maxpb.MaxpbReport.FlagsInfo.Builder, maxpb.MaxpbReport.FlagsInfoOrBuilder> 
          getFlagsFieldBuilder() {
        if (flagsBuilder_ == null) {
          flagsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbReport.FlagsInfo, maxpb.MaxpbReport.FlagsInfo.Builder, maxpb.MaxpbReport.FlagsInfoOrBuilder>(
                  getFlags(),
                  getParentForChildren(),
                  isClean());
          flags_ = null;
        }
        return flagsBuilder_;
      }

      private maxpb.MaxpbTelemetry.TelemetryInfo telemetry_ = maxpb.MaxpbTelemetry.TelemetryInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbTelemetry.TelemetryInfo, maxpb.MaxpbTelemetry.TelemetryInfo.Builder, maxpb.MaxpbTelemetry.TelemetryInfoOrBuilder> telemetryBuilder_;
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public boolean hasTelemetry() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public maxpb.MaxpbTelemetry.TelemetryInfo getTelemetry() {
        if (telemetryBuilder_ == null) {
          return telemetry_;
        } else {
          return telemetryBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setTelemetry(maxpb.MaxpbTelemetry.TelemetryInfo value) {
        if (telemetryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          telemetry_ = value;
          onChanged();
        } else {
          telemetryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setTelemetry(
          maxpb.MaxpbTelemetry.TelemetryInfo.Builder builderForValue) {
        if (telemetryBuilder_ == null) {
          telemetry_ = builderForValue.build();
          onChanged();
        } else {
          telemetryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder mergeTelemetry(maxpb.MaxpbTelemetry.TelemetryInfo value) {
        if (telemetryBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              telemetry_ != maxpb.MaxpbTelemetry.TelemetryInfo.getDefaultInstance()) {
            telemetry_ =
              maxpb.MaxpbTelemetry.TelemetryInfo.newBuilder(telemetry_).mergeFrom(value).buildPartial();
          } else {
            telemetry_ = value;
          }
          onChanged();
        } else {
          telemetryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder clearTelemetry() {
        if (telemetryBuilder_ == null) {
          telemetry_ = maxpb.MaxpbTelemetry.TelemetryInfo.getDefaultInstance();
          onChanged();
        } else {
          telemetryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public maxpb.MaxpbTelemetry.TelemetryInfo.Builder getTelemetryBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getTelemetryFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public maxpb.MaxpbTelemetry.TelemetryInfoOrBuilder getTelemetryOrBuilder() {
        if (telemetryBuilder_ != null) {
          return telemetryBuilder_.getMessageOrBuilder();
        } else {
          return telemetry_;
        }
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbTelemetry.TelemetryInfo, maxpb.MaxpbTelemetry.TelemetryInfo.Builder, maxpb.MaxpbTelemetry.TelemetryInfoOrBuilder> 
          getTelemetryFieldBuilder() {
        if (telemetryBuilder_ == null) {
          telemetryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbTelemetry.TelemetryInfo, maxpb.MaxpbTelemetry.TelemetryInfo.Builder, maxpb.MaxpbTelemetry.TelemetryInfoOrBuilder>(
                  getTelemetry(),
                  getParentForChildren(),
                  isClean());
          telemetry_ = null;
        }
        return telemetryBuilder_;
      }

      private maxpb.MaxpbReport.Events events_ = maxpb.MaxpbReport.Events.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.Events, maxpb.MaxpbReport.Events.Builder, maxpb.MaxpbReport.EventsOrBuilder> eventsBuilder_;
      /**
       * <code>optional .maxpb.Events events = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasEvents() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .maxpb.Events events = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.Events getEvents() {
        if (eventsBuilder_ == null) {
          return events_;
        } else {
          return eventsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.Events events = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setEvents(maxpb.MaxpbReport.Events value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          events_ = value;
          onChanged();
        } else {
          eventsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .maxpb.Events events = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setEvents(
          maxpb.MaxpbReport.Events.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          events_ = builderForValue.build();
          onChanged();
        } else {
          eventsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .maxpb.Events events = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder mergeEvents(maxpb.MaxpbReport.Events value) {
        if (eventsBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              events_ != maxpb.MaxpbReport.Events.getDefaultInstance()) {
            events_ =
              maxpb.MaxpbReport.Events.newBuilder(events_).mergeFrom(value).buildPartial();
          } else {
            events_ = value;
          }
          onChanged();
        } else {
          eventsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .maxpb.Events events = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearEvents() {
        if (eventsBuilder_ == null) {
          events_ = maxpb.MaxpbReport.Events.getDefaultInstance();
          onChanged();
        } else {
          eventsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .maxpb.Events events = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.Events.Builder getEventsBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getEventsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.Events events = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.EventsOrBuilder getEventsOrBuilder() {
        if (eventsBuilder_ != null) {
          return eventsBuilder_.getMessageOrBuilder();
        } else {
          return events_;
        }
      }
      /**
       * <code>optional .maxpb.Events events = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.Events, maxpb.MaxpbReport.Events.Builder, maxpb.MaxpbReport.EventsOrBuilder> 
          getEventsFieldBuilder() {
        if (eventsBuilder_ == null) {
          eventsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbReport.Events, maxpb.MaxpbReport.Events.Builder, maxpb.MaxpbReport.EventsOrBuilder>(
                  getEvents(),
                  getParentForChildren(),
                  isClean());
          events_ = null;
        }
        return eventsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.ReportAccessories)
    }

    static {
      defaultInstance = new ReportAccessories(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.ReportAccessories)
  }

  public interface ReportDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.ReportData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 sequenceNumber = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    boolean hasSequenceNumber();
    /**
     * <code>required uint32 sequenceNumber = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    int getSequenceNumber();

    /**
     * <code>required .maxpb.ReportReason reason = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    boolean hasReason();
    /**
     * <code>required .maxpb.ReportReason reason = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    maxpb.MaxpbReport.ReportReason getReason();

    /**
     * <code>required uint64 dateTime = 3;</code>
     *
     * <pre>
     *&#47; Unix time, seconds since 01/01/1970 SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    boolean hasDateTime();
    /**
     * <code>required uint64 dateTime = 3;</code>
     *
     * <pre>
     *&#47; Unix time, seconds since 01/01/1970 SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    long getDateTime();

    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<maxpb.MaxpbReport.PositionInfo> 
        getPositionInfoList();
    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.PositionInfo getPositionInfo(int index);
    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    int getPositionInfoCount();
    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbReport.PositionInfoOrBuilder> 
        getPositionInfoOrBuilderList();
    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.PositionInfoOrBuilder getPositionInfoOrBuilder(
        int index);

    /**
     * <code>optional .maxpb.GpsInfo gps = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasGps();
    /**
     * <code>optional .maxpb.GpsInfo gps = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbGps.GpsInfo getGps();
    /**
     * <code>optional .maxpb.GpsInfo gps = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbGps.GpsInfoOrBuilder getGpsOrBuilder();

    /**
     * <code>optional .maxpb.IOsInfo ios = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    boolean hasIos();
    /**
     * <code>optional .maxpb.IOsInfo ios = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    maxpb.MaxpbGpio.IOsInfo getIos();
    /**
     * <code>optional .maxpb.IOsInfo ios = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    maxpb.MaxpbGpio.IOsInfoOrBuilder getIosOrBuilder();

    /**
     * <code>optional .maxpb.FlagsInfo flags = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    boolean hasFlags();
    /**
     * <code>optional .maxpb.FlagsInfo flags = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    maxpb.MaxpbReport.FlagsInfo getFlags();
    /**
     * <code>optional .maxpb.FlagsInfo flags = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    maxpb.MaxpbReport.FlagsInfoOrBuilder getFlagsOrBuilder();

    /**
     * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    boolean hasTelemetry();
    /**
     * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    maxpb.MaxpbTelemetry.TelemetryInfo getTelemetry();
    /**
     * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    maxpb.MaxpbTelemetry.TelemetryInfoOrBuilder getTelemetryOrBuilder();

    /**
     * <code>optional .maxpb.Events events = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasEvents();
    /**
     * <code>optional .maxpb.Events events = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.Events getEvents();
    /**
     * <code>optional .maxpb.Events events = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.EventsOrBuilder getEventsOrBuilder();

    /**
     * <code>optional bytes openData = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT162, MAXIO
     * </pre>
     */
    boolean hasOpenData();
    /**
     * <code>optional bytes openData = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT162, MAXIO
     * </pre>
     */
    com.google.protobuf.ByteString getOpenData();

    /**
     * <code>optional bytes reconstruction = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasReconstruction();
    /**
     * <code>optional bytes reconstruction = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    com.google.protobuf.ByteString getReconstruction();

    /**
     * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<maxpb.MaxpbReport.ReportAccessories> 
        getAccessoriesList();
    /**
     * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.ReportAccessories getAccessories(int index);
    /**
     * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getAccessoriesCount();
    /**
     * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbReport.ReportAccessoriesOrBuilder> 
        getAccessoriesOrBuilderList();
    /**
     * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.ReportAccessoriesOrBuilder getAccessoriesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code maxpb.ReportData}
   */
  public static final class ReportData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.ReportData)
      ReportDataOrBuilder {
    // Use ReportData.newBuilder() to construct.
    private ReportData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ReportData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ReportData defaultInstance;
    public static ReportData getDefaultInstance() {
      return defaultInstance;
    }

    public ReportData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ReportData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sequenceNumber_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              maxpb.MaxpbReport.ReportReason value = maxpb.MaxpbReport.ReportReason.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                reason_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              dateTime_ = input.readUInt64();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                positionInfo_ = new java.util.ArrayList<maxpb.MaxpbReport.PositionInfo>();
                mutable_bitField0_ |= 0x00000008;
              }
              positionInfo_.add(input.readMessage(maxpb.MaxpbReport.PositionInfo.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              maxpb.MaxpbGps.GpsInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = gps_.toBuilder();
              }
              gps_ = input.readMessage(maxpb.MaxpbGps.GpsInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gps_);
                gps_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 50: {
              maxpb.MaxpbGpio.IOsInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = ios_.toBuilder();
              }
              ios_ = input.readMessage(maxpb.MaxpbGpio.IOsInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ios_);
                ios_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 58: {
              maxpb.MaxpbReport.FlagsInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = flags_.toBuilder();
              }
              flags_ = input.readMessage(maxpb.MaxpbReport.FlagsInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(flags_);
                flags_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 66: {
              maxpb.MaxpbTelemetry.TelemetryInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = telemetry_.toBuilder();
              }
              telemetry_ = input.readMessage(maxpb.MaxpbTelemetry.TelemetryInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(telemetry_);
                telemetry_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 74: {
              maxpb.MaxpbReport.Events.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = events_.toBuilder();
              }
              events_ = input.readMessage(maxpb.MaxpbReport.Events.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(events_);
                events_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 82: {
              bitField0_ |= 0x00000100;
              openData_ = input.readBytes();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000200;
              reconstruction_ = input.readBytes();
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                accessories_ = new java.util.ArrayList<maxpb.MaxpbReport.ReportAccessories>();
                mutable_bitField0_ |= 0x00000800;
              }
              accessories_.add(input.readMessage(maxpb.MaxpbReport.ReportAccessories.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          positionInfo_ = java.util.Collections.unmodifiableList(positionInfo_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          accessories_ = java.util.Collections.unmodifiableList(accessories_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbReport.internal_static_maxpb_ReportData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbReport.internal_static_maxpb_ReportData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbReport.ReportData.class, maxpb.MaxpbReport.ReportData.Builder.class);
    }

    public static com.google.protobuf.Parser<ReportData> PARSER =
        new com.google.protobuf.AbstractParser<ReportData>() {
      public ReportData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReportData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ReportData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SEQUENCENUMBER_FIELD_NUMBER = 1;
    private int sequenceNumber_;
    /**
     * <code>required uint32 sequenceNumber = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public boolean hasSequenceNumber() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 sequenceNumber = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public int getSequenceNumber() {
      return sequenceNumber_;
    }

    public static final int REASON_FIELD_NUMBER = 2;
    private maxpb.MaxpbReport.ReportReason reason_;
    /**
     * <code>required .maxpb.ReportReason reason = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .maxpb.ReportReason reason = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public maxpb.MaxpbReport.ReportReason getReason() {
      return reason_;
    }

    public static final int DATETIME_FIELD_NUMBER = 3;
    private long dateTime_;
    /**
     * <code>required uint64 dateTime = 3;</code>
     *
     * <pre>
     *&#47; Unix time, seconds since 01/01/1970 SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public boolean hasDateTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint64 dateTime = 3;</code>
     *
     * <pre>
     *&#47; Unix time, seconds since 01/01/1970 SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public long getDateTime() {
      return dateTime_;
    }

    public static final int POSITIONINFO_FIELD_NUMBER = 4;
    private java.util.List<maxpb.MaxpbReport.PositionInfo> positionInfo_;
    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<maxpb.MaxpbReport.PositionInfo> getPositionInfoList() {
      return positionInfo_;
    }
    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbReport.PositionInfoOrBuilder> 
        getPositionInfoOrBuilderList() {
      return positionInfo_;
    }
    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public int getPositionInfoCount() {
      return positionInfo_.size();
    }
    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.PositionInfo getPositionInfo(int index) {
      return positionInfo_.get(index);
    }
    /**
     * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.PositionInfoOrBuilder getPositionInfoOrBuilder(
        int index) {
      return positionInfo_.get(index);
    }

    public static final int GPS_FIELD_NUMBER = 5;
    private maxpb.MaxpbGps.GpsInfo gps_;
    /**
     * <code>optional .maxpb.GpsInfo gps = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasGps() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .maxpb.GpsInfo gps = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbGps.GpsInfo getGps() {
      return gps_;
    }
    /**
     * <code>optional .maxpb.GpsInfo gps = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbGps.GpsInfoOrBuilder getGpsOrBuilder() {
      return gps_;
    }

    public static final int IOS_FIELD_NUMBER = 6;
    private maxpb.MaxpbGpio.IOsInfo ios_;
    /**
     * <code>optional .maxpb.IOsInfo ios = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public boolean hasIos() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .maxpb.IOsInfo ios = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public maxpb.MaxpbGpio.IOsInfo getIos() {
      return ios_;
    }
    /**
     * <code>optional .maxpb.IOsInfo ios = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public maxpb.MaxpbGpio.IOsInfoOrBuilder getIosOrBuilder() {
      return ios_;
    }

    public static final int FLAGS_FIELD_NUMBER = 7;
    private maxpb.MaxpbReport.FlagsInfo flags_;
    /**
     * <code>optional .maxpb.FlagsInfo flags = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public boolean hasFlags() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .maxpb.FlagsInfo flags = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public maxpb.MaxpbReport.FlagsInfo getFlags() {
      return flags_;
    }
    /**
     * <code>optional .maxpb.FlagsInfo flags = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public maxpb.MaxpbReport.FlagsInfoOrBuilder getFlagsOrBuilder() {
      return flags_;
    }

    public static final int TELEMETRY_FIELD_NUMBER = 8;
    private maxpb.MaxpbTelemetry.TelemetryInfo telemetry_;
    /**
     * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public boolean hasTelemetry() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public maxpb.MaxpbTelemetry.TelemetryInfo getTelemetry() {
      return telemetry_;
    }
    /**
     * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public maxpb.MaxpbTelemetry.TelemetryInfoOrBuilder getTelemetryOrBuilder() {
      return telemetry_;
    }

    public static final int EVENTS_FIELD_NUMBER = 9;
    private maxpb.MaxpbReport.Events events_;
    /**
     * <code>optional .maxpb.Events events = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasEvents() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .maxpb.Events events = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.Events getEvents() {
      return events_;
    }
    /**
     * <code>optional .maxpb.Events events = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.EventsOrBuilder getEventsOrBuilder() {
      return events_;
    }

    public static final int OPENDATA_FIELD_NUMBER = 10;
    private com.google.protobuf.ByteString openData_;
    /**
     * <code>optional bytes openData = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT162, MAXIO
     * </pre>
     */
    public boolean hasOpenData() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bytes openData = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT162, MAXIO
     * </pre>
     */
    public com.google.protobuf.ByteString getOpenData() {
      return openData_;
    }

    public static final int RECONSTRUCTION_FIELD_NUMBER = 11;
    private com.google.protobuf.ByteString reconstruction_;
    /**
     * <code>optional bytes reconstruction = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasReconstruction() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bytes reconstruction = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public com.google.protobuf.ByteString getReconstruction() {
      return reconstruction_;
    }

    public static final int ACCESSORIES_FIELD_NUMBER = 12;
    private java.util.List<maxpb.MaxpbReport.ReportAccessories> accessories_;
    /**
     * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<maxpb.MaxpbReport.ReportAccessories> getAccessoriesList() {
      return accessories_;
    }
    /**
     * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbReport.ReportAccessoriesOrBuilder> 
        getAccessoriesOrBuilderList() {
      return accessories_;
    }
    /**
     * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getAccessoriesCount() {
      return accessories_.size();
    }
    /**
     * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.ReportAccessories getAccessories(int index) {
      return accessories_.get(index);
    }
    /**
     * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.ReportAccessoriesOrBuilder getAccessoriesOrBuilder(
        int index) {
      return accessories_.get(index);
    }

    private void initFields() {
      sequenceNumber_ = 0;
      reason_ = maxpb.MaxpbReport.ReportReason.RR_SHUTDOWN;
      dateTime_ = 0L;
      positionInfo_ = java.util.Collections.emptyList();
      gps_ = maxpb.MaxpbGps.GpsInfo.getDefaultInstance();
      ios_ = maxpb.MaxpbGpio.IOsInfo.getDefaultInstance();
      flags_ = maxpb.MaxpbReport.FlagsInfo.getDefaultInstance();
      telemetry_ = maxpb.MaxpbTelemetry.TelemetryInfo.getDefaultInstance();
      events_ = maxpb.MaxpbReport.Events.getDefaultInstance();
      openData_ = com.google.protobuf.ByteString.EMPTY;
      reconstruction_ = com.google.protobuf.ByteString.EMPTY;
      accessories_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSequenceNumber()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasReason()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDateTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPositionInfoCount(); i++) {
        if (!getPositionInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGps()) {
        if (!getGps().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTelemetry()) {
        if (!getTelemetry().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasEvents()) {
        if (!getEvents().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getAccessoriesCount(); i++) {
        if (!getAccessories(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, sequenceNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, reason_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, dateTime_);
      }
      for (int i = 0; i < positionInfo_.size(); i++) {
        output.writeMessage(4, positionInfo_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, gps_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(6, ios_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, flags_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(8, telemetry_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(9, events_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(10, openData_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(11, reconstruction_);
      }
      for (int i = 0; i < accessories_.size(); i++) {
        output.writeMessage(12, accessories_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, sequenceNumber_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, reason_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, dateTime_);
      }
      for (int i = 0; i < positionInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, positionInfo_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, gps_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, ios_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, flags_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, telemetry_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, events_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, openData_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, reconstruction_);
      }
      for (int i = 0; i < accessories_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, accessories_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbReport.ReportData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.ReportData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.ReportData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.ReportData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.ReportData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.ReportData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.ReportData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbReport.ReportData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.ReportData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.ReportData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbReport.ReportData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.ReportData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.ReportData)
        maxpb.MaxpbReport.ReportDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbReport.internal_static_maxpb_ReportData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbReport.internal_static_maxpb_ReportData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbReport.ReportData.class, maxpb.MaxpbReport.ReportData.Builder.class);
      }

      // Construct using maxpb.MaxpbReport.ReportData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPositionInfoFieldBuilder();
          getGpsFieldBuilder();
          getIosFieldBuilder();
          getFlagsFieldBuilder();
          getTelemetryFieldBuilder();
          getEventsFieldBuilder();
          getAccessoriesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sequenceNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        reason_ = maxpb.MaxpbReport.ReportReason.RR_SHUTDOWN;
        bitField0_ = (bitField0_ & ~0x00000002);
        dateTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (positionInfoBuilder_ == null) {
          positionInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          positionInfoBuilder_.clear();
        }
        if (gpsBuilder_ == null) {
          gps_ = maxpb.MaxpbGps.GpsInfo.getDefaultInstance();
        } else {
          gpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (iosBuilder_ == null) {
          ios_ = maxpb.MaxpbGpio.IOsInfo.getDefaultInstance();
        } else {
          iosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (flagsBuilder_ == null) {
          flags_ = maxpb.MaxpbReport.FlagsInfo.getDefaultInstance();
        } else {
          flagsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (telemetryBuilder_ == null) {
          telemetry_ = maxpb.MaxpbTelemetry.TelemetryInfo.getDefaultInstance();
        } else {
          telemetryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (eventsBuilder_ == null) {
          events_ = maxpb.MaxpbReport.Events.getDefaultInstance();
        } else {
          eventsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        openData_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000200);
        reconstruction_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (accessoriesBuilder_ == null) {
          accessories_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          accessoriesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbReport.internal_static_maxpb_ReportData_descriptor;
      }

      public maxpb.MaxpbReport.ReportData getDefaultInstanceForType() {
        return maxpb.MaxpbReport.ReportData.getDefaultInstance();
      }

      public maxpb.MaxpbReport.ReportData build() {
        maxpb.MaxpbReport.ReportData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbReport.ReportData buildPartial() {
        maxpb.MaxpbReport.ReportData result = new maxpb.MaxpbReport.ReportData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sequenceNumber_ = sequenceNumber_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.reason_ = reason_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dateTime_ = dateTime_;
        if (positionInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            positionInfo_ = java.util.Collections.unmodifiableList(positionInfo_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.positionInfo_ = positionInfo_;
        } else {
          result.positionInfo_ = positionInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        if (gpsBuilder_ == null) {
          result.gps_ = gps_;
        } else {
          result.gps_ = gpsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        if (iosBuilder_ == null) {
          result.ios_ = ios_;
        } else {
          result.ios_ = iosBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        if (flagsBuilder_ == null) {
          result.flags_ = flags_;
        } else {
          result.flags_ = flagsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        if (telemetryBuilder_ == null) {
          result.telemetry_ = telemetry_;
        } else {
          result.telemetry_ = telemetryBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        if (eventsBuilder_ == null) {
          result.events_ = events_;
        } else {
          result.events_ = eventsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.openData_ = openData_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.reconstruction_ = reconstruction_;
        if (accessoriesBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            accessories_ = java.util.Collections.unmodifiableList(accessories_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.accessories_ = accessories_;
        } else {
          result.accessories_ = accessoriesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbReport.ReportData) {
          return mergeFrom((maxpb.MaxpbReport.ReportData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbReport.ReportData other) {
        if (other == maxpb.MaxpbReport.ReportData.getDefaultInstance()) return this;
        if (other.hasSequenceNumber()) {
          setSequenceNumber(other.getSequenceNumber());
        }
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        if (other.hasDateTime()) {
          setDateTime(other.getDateTime());
        }
        if (positionInfoBuilder_ == null) {
          if (!other.positionInfo_.isEmpty()) {
            if (positionInfo_.isEmpty()) {
              positionInfo_ = other.positionInfo_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePositionInfoIsMutable();
              positionInfo_.addAll(other.positionInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.positionInfo_.isEmpty()) {
            if (positionInfoBuilder_.isEmpty()) {
              positionInfoBuilder_.dispose();
              positionInfoBuilder_ = null;
              positionInfo_ = other.positionInfo_;
              bitField0_ = (bitField0_ & ~0x00000008);
              positionInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPositionInfoFieldBuilder() : null;
            } else {
              positionInfoBuilder_.addAllMessages(other.positionInfo_);
            }
          }
        }
        if (other.hasGps()) {
          mergeGps(other.getGps());
        }
        if (other.hasIos()) {
          mergeIos(other.getIos());
        }
        if (other.hasFlags()) {
          mergeFlags(other.getFlags());
        }
        if (other.hasTelemetry()) {
          mergeTelemetry(other.getTelemetry());
        }
        if (other.hasEvents()) {
          mergeEvents(other.getEvents());
        }
        if (other.hasOpenData()) {
          setOpenData(other.getOpenData());
        }
        if (other.hasReconstruction()) {
          setReconstruction(other.getReconstruction());
        }
        if (accessoriesBuilder_ == null) {
          if (!other.accessories_.isEmpty()) {
            if (accessories_.isEmpty()) {
              accessories_ = other.accessories_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureAccessoriesIsMutable();
              accessories_.addAll(other.accessories_);
            }
            onChanged();
          }
        } else {
          if (!other.accessories_.isEmpty()) {
            if (accessoriesBuilder_.isEmpty()) {
              accessoriesBuilder_.dispose();
              accessoriesBuilder_ = null;
              accessories_ = other.accessories_;
              bitField0_ = (bitField0_ & ~0x00000800);
              accessoriesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAccessoriesFieldBuilder() : null;
            } else {
              accessoriesBuilder_.addAllMessages(other.accessories_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSequenceNumber()) {
          
          return false;
        }
        if (!hasReason()) {
          
          return false;
        }
        if (!hasDateTime()) {
          
          return false;
        }
        for (int i = 0; i < getPositionInfoCount(); i++) {
          if (!getPositionInfo(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasGps()) {
          if (!getGps().isInitialized()) {
            
            return false;
          }
        }
        if (hasTelemetry()) {
          if (!getTelemetry().isInitialized()) {
            
            return false;
          }
        }
        if (hasEvents()) {
          if (!getEvents().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getAccessoriesCount(); i++) {
          if (!getAccessories(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbReport.ReportData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbReport.ReportData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int sequenceNumber_ ;
      /**
       * <code>required uint32 sequenceNumber = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public boolean hasSequenceNumber() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 sequenceNumber = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public int getSequenceNumber() {
        return sequenceNumber_;
      }
      /**
       * <code>required uint32 sequenceNumber = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setSequenceNumber(int value) {
        bitField0_ |= 0x00000001;
        sequenceNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 sequenceNumber = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder clearSequenceNumber() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sequenceNumber_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbReport.ReportReason reason_ = maxpb.MaxpbReport.ReportReason.RR_SHUTDOWN;
      /**
       * <code>required .maxpb.ReportReason reason = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .maxpb.ReportReason reason = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public maxpb.MaxpbReport.ReportReason getReason() {
        return reason_;
      }
      /**
       * <code>required .maxpb.ReportReason reason = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setReason(maxpb.MaxpbReport.ReportReason value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .maxpb.ReportReason reason = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder clearReason() {
        bitField0_ = (bitField0_ & ~0x00000002);
        reason_ = maxpb.MaxpbReport.ReportReason.RR_SHUTDOWN;
        onChanged();
        return this;
      }

      private long dateTime_ ;
      /**
       * <code>required uint64 dateTime = 3;</code>
       *
       * <pre>
       *&#47; Unix time, seconds since 01/01/1970 SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public boolean hasDateTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint64 dateTime = 3;</code>
       *
       * <pre>
       *&#47; Unix time, seconds since 01/01/1970 SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public long getDateTime() {
        return dateTime_;
      }
      /**
       * <code>required uint64 dateTime = 3;</code>
       *
       * <pre>
       *&#47; Unix time, seconds since 01/01/1970 SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setDateTime(long value) {
        bitField0_ |= 0x00000004;
        dateTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 dateTime = 3;</code>
       *
       * <pre>
       *&#47; Unix time, seconds since 01/01/1970 SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder clearDateTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dateTime_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<maxpb.MaxpbReport.PositionInfo> positionInfo_ =
        java.util.Collections.emptyList();
      private void ensurePositionInfoIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          positionInfo_ = new java.util.ArrayList<maxpb.MaxpbReport.PositionInfo>(positionInfo_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.PositionInfo, maxpb.MaxpbReport.PositionInfo.Builder, maxpb.MaxpbReport.PositionInfoOrBuilder> positionInfoBuilder_;

      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.PositionInfo> getPositionInfoList() {
        if (positionInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(positionInfo_);
        } else {
          return positionInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public int getPositionInfoCount() {
        if (positionInfoBuilder_ == null) {
          return positionInfo_.size();
        } else {
          return positionInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo getPositionInfo(int index) {
        if (positionInfoBuilder_ == null) {
          return positionInfo_.get(index);
        } else {
          return positionInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setPositionInfo(
          int index, maxpb.MaxpbReport.PositionInfo value) {
        if (positionInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionInfoIsMutable();
          positionInfo_.set(index, value);
          onChanged();
        } else {
          positionInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setPositionInfo(
          int index, maxpb.MaxpbReport.PositionInfo.Builder builderForValue) {
        if (positionInfoBuilder_ == null) {
          ensurePositionInfoIsMutable();
          positionInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          positionInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addPositionInfo(maxpb.MaxpbReport.PositionInfo value) {
        if (positionInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionInfoIsMutable();
          positionInfo_.add(value);
          onChanged();
        } else {
          positionInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addPositionInfo(
          int index, maxpb.MaxpbReport.PositionInfo value) {
        if (positionInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePositionInfoIsMutable();
          positionInfo_.add(index, value);
          onChanged();
        } else {
          positionInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addPositionInfo(
          maxpb.MaxpbReport.PositionInfo.Builder builderForValue) {
        if (positionInfoBuilder_ == null) {
          ensurePositionInfoIsMutable();
          positionInfo_.add(builderForValue.build());
          onChanged();
        } else {
          positionInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addPositionInfo(
          int index, maxpb.MaxpbReport.PositionInfo.Builder builderForValue) {
        if (positionInfoBuilder_ == null) {
          ensurePositionInfoIsMutable();
          positionInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          positionInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addAllPositionInfo(
          java.lang.Iterable<? extends maxpb.MaxpbReport.PositionInfo> values) {
        if (positionInfoBuilder_ == null) {
          ensurePositionInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, positionInfo_);
          onChanged();
        } else {
          positionInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearPositionInfo() {
        if (positionInfoBuilder_ == null) {
          positionInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          positionInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder removePositionInfo(int index) {
        if (positionInfoBuilder_ == null) {
          ensurePositionInfoIsMutable();
          positionInfo_.remove(index);
          onChanged();
        } else {
          positionInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo.Builder getPositionInfoBuilder(
          int index) {
        return getPositionInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfoOrBuilder getPositionInfoOrBuilder(
          int index) {
        if (positionInfoBuilder_ == null) {
          return positionInfo_.get(index);  } else {
          return positionInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbReport.PositionInfoOrBuilder> 
           getPositionInfoOrBuilderList() {
        if (positionInfoBuilder_ != null) {
          return positionInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(positionInfo_);
        }
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo.Builder addPositionInfoBuilder() {
        return getPositionInfoFieldBuilder().addBuilder(
            maxpb.MaxpbReport.PositionInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.PositionInfo.Builder addPositionInfoBuilder(
          int index) {
        return getPositionInfoFieldBuilder().addBuilder(
            index, maxpb.MaxpbReport.PositionInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.PositionInfo positionInfo = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.PositionInfo.Builder> 
           getPositionInfoBuilderList() {
        return getPositionInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.PositionInfo, maxpb.MaxpbReport.PositionInfo.Builder, maxpb.MaxpbReport.PositionInfoOrBuilder> 
          getPositionInfoFieldBuilder() {
        if (positionInfoBuilder_ == null) {
          positionInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbReport.PositionInfo, maxpb.MaxpbReport.PositionInfo.Builder, maxpb.MaxpbReport.PositionInfoOrBuilder>(
                  positionInfo_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          positionInfo_ = null;
        }
        return positionInfoBuilder_;
      }

      private maxpb.MaxpbGps.GpsInfo gps_ = maxpb.MaxpbGps.GpsInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbGps.GpsInfo, maxpb.MaxpbGps.GpsInfo.Builder, maxpb.MaxpbGps.GpsInfoOrBuilder> gpsBuilder_;
      /**
       * <code>optional .maxpb.GpsInfo gps = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasGps() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .maxpb.GpsInfo gps = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGps.GpsInfo getGps() {
        if (gpsBuilder_ == null) {
          return gps_;
        } else {
          return gpsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.GpsInfo gps = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setGps(maxpb.MaxpbGps.GpsInfo value) {
        if (gpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gps_ = value;
          onChanged();
        } else {
          gpsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .maxpb.GpsInfo gps = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setGps(
          maxpb.MaxpbGps.GpsInfo.Builder builderForValue) {
        if (gpsBuilder_ == null) {
          gps_ = builderForValue.build();
          onChanged();
        } else {
          gpsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .maxpb.GpsInfo gps = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder mergeGps(maxpb.MaxpbGps.GpsInfo value) {
        if (gpsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              gps_ != maxpb.MaxpbGps.GpsInfo.getDefaultInstance()) {
            gps_ =
              maxpb.MaxpbGps.GpsInfo.newBuilder(gps_).mergeFrom(value).buildPartial();
          } else {
            gps_ = value;
          }
          onChanged();
        } else {
          gpsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .maxpb.GpsInfo gps = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearGps() {
        if (gpsBuilder_ == null) {
          gps_ = maxpb.MaxpbGps.GpsInfo.getDefaultInstance();
          onChanged();
        } else {
          gpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .maxpb.GpsInfo gps = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGps.GpsInfo.Builder getGpsBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getGpsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.GpsInfo gps = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGps.GpsInfoOrBuilder getGpsOrBuilder() {
        if (gpsBuilder_ != null) {
          return gpsBuilder_.getMessageOrBuilder();
        } else {
          return gps_;
        }
      }
      /**
       * <code>optional .maxpb.GpsInfo gps = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbGps.GpsInfo, maxpb.MaxpbGps.GpsInfo.Builder, maxpb.MaxpbGps.GpsInfoOrBuilder> 
          getGpsFieldBuilder() {
        if (gpsBuilder_ == null) {
          gpsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbGps.GpsInfo, maxpb.MaxpbGps.GpsInfo.Builder, maxpb.MaxpbGps.GpsInfoOrBuilder>(
                  getGps(),
                  getParentForChildren(),
                  isClean());
          gps_ = null;
        }
        return gpsBuilder_;
      }

      private maxpb.MaxpbGpio.IOsInfo ios_ = maxpb.MaxpbGpio.IOsInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbGpio.IOsInfo, maxpb.MaxpbGpio.IOsInfo.Builder, maxpb.MaxpbGpio.IOsInfoOrBuilder> iosBuilder_;
      /**
       * <code>optional .maxpb.IOsInfo ios = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public boolean hasIos() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public maxpb.MaxpbGpio.IOsInfo getIos() {
        if (iosBuilder_ == null) {
          return ios_;
        } else {
          return iosBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setIos(maxpb.MaxpbGpio.IOsInfo value) {
        if (iosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ios_ = value;
          onChanged();
        } else {
          iosBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setIos(
          maxpb.MaxpbGpio.IOsInfo.Builder builderForValue) {
        if (iosBuilder_ == null) {
          ios_ = builderForValue.build();
          onChanged();
        } else {
          iosBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder mergeIos(maxpb.MaxpbGpio.IOsInfo value) {
        if (iosBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              ios_ != maxpb.MaxpbGpio.IOsInfo.getDefaultInstance()) {
            ios_ =
              maxpb.MaxpbGpio.IOsInfo.newBuilder(ios_).mergeFrom(value).buildPartial();
          } else {
            ios_ = value;
          }
          onChanged();
        } else {
          iosBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder clearIos() {
        if (iosBuilder_ == null) {
          ios_ = maxpb.MaxpbGpio.IOsInfo.getDefaultInstance();
          onChanged();
        } else {
          iosBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public maxpb.MaxpbGpio.IOsInfo.Builder getIosBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getIosFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public maxpb.MaxpbGpio.IOsInfoOrBuilder getIosOrBuilder() {
        if (iosBuilder_ != null) {
          return iosBuilder_.getMessageOrBuilder();
        } else {
          return ios_;
        }
      }
      /**
       * <code>optional .maxpb.IOsInfo ios = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbGpio.IOsInfo, maxpb.MaxpbGpio.IOsInfo.Builder, maxpb.MaxpbGpio.IOsInfoOrBuilder> 
          getIosFieldBuilder() {
        if (iosBuilder_ == null) {
          iosBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbGpio.IOsInfo, maxpb.MaxpbGpio.IOsInfo.Builder, maxpb.MaxpbGpio.IOsInfoOrBuilder>(
                  getIos(),
                  getParentForChildren(),
                  isClean());
          ios_ = null;
        }
        return iosBuilder_;
      }

      private maxpb.MaxpbReport.FlagsInfo flags_ = maxpb.MaxpbReport.FlagsInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.FlagsInfo, maxpb.MaxpbReport.FlagsInfo.Builder, maxpb.MaxpbReport.FlagsInfoOrBuilder> flagsBuilder_;
      /**
       * <code>optional .maxpb.FlagsInfo flags = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public boolean hasFlags() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public maxpb.MaxpbReport.FlagsInfo getFlags() {
        if (flagsBuilder_ == null) {
          return flags_;
        } else {
          return flagsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setFlags(maxpb.MaxpbReport.FlagsInfo value) {
        if (flagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          flags_ = value;
          onChanged();
        } else {
          flagsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setFlags(
          maxpb.MaxpbReport.FlagsInfo.Builder builderForValue) {
        if (flagsBuilder_ == null) {
          flags_ = builderForValue.build();
          onChanged();
        } else {
          flagsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder mergeFlags(maxpb.MaxpbReport.FlagsInfo value) {
        if (flagsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              flags_ != maxpb.MaxpbReport.FlagsInfo.getDefaultInstance()) {
            flags_ =
              maxpb.MaxpbReport.FlagsInfo.newBuilder(flags_).mergeFrom(value).buildPartial();
          } else {
            flags_ = value;
          }
          onChanged();
        } else {
          flagsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder clearFlags() {
        if (flagsBuilder_ == null) {
          flags_ = maxpb.MaxpbReport.FlagsInfo.getDefaultInstance();
          onChanged();
        } else {
          flagsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public maxpb.MaxpbReport.FlagsInfo.Builder getFlagsBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getFlagsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public maxpb.MaxpbReport.FlagsInfoOrBuilder getFlagsOrBuilder() {
        if (flagsBuilder_ != null) {
          return flagsBuilder_.getMessageOrBuilder();
        } else {
          return flags_;
        }
      }
      /**
       * <code>optional .maxpb.FlagsInfo flags = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.FlagsInfo, maxpb.MaxpbReport.FlagsInfo.Builder, maxpb.MaxpbReport.FlagsInfoOrBuilder> 
          getFlagsFieldBuilder() {
        if (flagsBuilder_ == null) {
          flagsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbReport.FlagsInfo, maxpb.MaxpbReport.FlagsInfo.Builder, maxpb.MaxpbReport.FlagsInfoOrBuilder>(
                  getFlags(),
                  getParentForChildren(),
                  isClean());
          flags_ = null;
        }
        return flagsBuilder_;
      }

      private maxpb.MaxpbTelemetry.TelemetryInfo telemetry_ = maxpb.MaxpbTelemetry.TelemetryInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbTelemetry.TelemetryInfo, maxpb.MaxpbTelemetry.TelemetryInfo.Builder, maxpb.MaxpbTelemetry.TelemetryInfoOrBuilder> telemetryBuilder_;
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public boolean hasTelemetry() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public maxpb.MaxpbTelemetry.TelemetryInfo getTelemetry() {
        if (telemetryBuilder_ == null) {
          return telemetry_;
        } else {
          return telemetryBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setTelemetry(maxpb.MaxpbTelemetry.TelemetryInfo value) {
        if (telemetryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          telemetry_ = value;
          onChanged();
        } else {
          telemetryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setTelemetry(
          maxpb.MaxpbTelemetry.TelemetryInfo.Builder builderForValue) {
        if (telemetryBuilder_ == null) {
          telemetry_ = builderForValue.build();
          onChanged();
        } else {
          telemetryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder mergeTelemetry(maxpb.MaxpbTelemetry.TelemetryInfo value) {
        if (telemetryBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              telemetry_ != maxpb.MaxpbTelemetry.TelemetryInfo.getDefaultInstance()) {
            telemetry_ =
              maxpb.MaxpbTelemetry.TelemetryInfo.newBuilder(telemetry_).mergeFrom(value).buildPartial();
          } else {
            telemetry_ = value;
          }
          onChanged();
        } else {
          telemetryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder clearTelemetry() {
        if (telemetryBuilder_ == null) {
          telemetry_ = maxpb.MaxpbTelemetry.TelemetryInfo.getDefaultInstance();
          onChanged();
        } else {
          telemetryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public maxpb.MaxpbTelemetry.TelemetryInfo.Builder getTelemetryBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getTelemetryFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public maxpb.MaxpbTelemetry.TelemetryInfoOrBuilder getTelemetryOrBuilder() {
        if (telemetryBuilder_ != null) {
          return telemetryBuilder_.getMessageOrBuilder();
        } else {
          return telemetry_;
        }
      }
      /**
       * <code>optional .maxpb.TelemetryInfo telemetry = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbTelemetry.TelemetryInfo, maxpb.MaxpbTelemetry.TelemetryInfo.Builder, maxpb.MaxpbTelemetry.TelemetryInfoOrBuilder> 
          getTelemetryFieldBuilder() {
        if (telemetryBuilder_ == null) {
          telemetryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbTelemetry.TelemetryInfo, maxpb.MaxpbTelemetry.TelemetryInfo.Builder, maxpb.MaxpbTelemetry.TelemetryInfoOrBuilder>(
                  getTelemetry(),
                  getParentForChildren(),
                  isClean());
          telemetry_ = null;
        }
        return telemetryBuilder_;
      }

      private maxpb.MaxpbReport.Events events_ = maxpb.MaxpbReport.Events.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.Events, maxpb.MaxpbReport.Events.Builder, maxpb.MaxpbReport.EventsOrBuilder> eventsBuilder_;
      /**
       * <code>optional .maxpb.Events events = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasEvents() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .maxpb.Events events = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.Events getEvents() {
        if (eventsBuilder_ == null) {
          return events_;
        } else {
          return eventsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.Events events = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setEvents(maxpb.MaxpbReport.Events value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          events_ = value;
          onChanged();
        } else {
          eventsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .maxpb.Events events = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setEvents(
          maxpb.MaxpbReport.Events.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          events_ = builderForValue.build();
          onChanged();
        } else {
          eventsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .maxpb.Events events = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder mergeEvents(maxpb.MaxpbReport.Events value) {
        if (eventsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              events_ != maxpb.MaxpbReport.Events.getDefaultInstance()) {
            events_ =
              maxpb.MaxpbReport.Events.newBuilder(events_).mergeFrom(value).buildPartial();
          } else {
            events_ = value;
          }
          onChanged();
        } else {
          eventsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .maxpb.Events events = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearEvents() {
        if (eventsBuilder_ == null) {
          events_ = maxpb.MaxpbReport.Events.getDefaultInstance();
          onChanged();
        } else {
          eventsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .maxpb.Events events = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.Events.Builder getEventsBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getEventsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.Events events = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.EventsOrBuilder getEventsOrBuilder() {
        if (eventsBuilder_ != null) {
          return eventsBuilder_.getMessageOrBuilder();
        } else {
          return events_;
        }
      }
      /**
       * <code>optional .maxpb.Events events = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.Events, maxpb.MaxpbReport.Events.Builder, maxpb.MaxpbReport.EventsOrBuilder> 
          getEventsFieldBuilder() {
        if (eventsBuilder_ == null) {
          eventsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbReport.Events, maxpb.MaxpbReport.Events.Builder, maxpb.MaxpbReport.EventsOrBuilder>(
                  getEvents(),
                  getParentForChildren(),
                  isClean());
          events_ = null;
        }
        return eventsBuilder_;
      }

      private com.google.protobuf.ByteString openData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes openData = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public boolean hasOpenData() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bytes openData = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public com.google.protobuf.ByteString getOpenData() {
        return openData_;
      }
      /**
       * <code>optional bytes openData = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public Builder setOpenData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        openData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes openData = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public Builder clearOpenData() {
        bitField0_ = (bitField0_ & ~0x00000200);
        openData_ = getDefaultInstance().getOpenData();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString reconstruction_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes reconstruction = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasReconstruction() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bytes reconstruction = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public com.google.protobuf.ByteString getReconstruction() {
        return reconstruction_;
      }
      /**
       * <code>optional bytes reconstruction = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setReconstruction(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        reconstruction_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes reconstruction = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearReconstruction() {
        bitField0_ = (bitField0_ & ~0x00000400);
        reconstruction_ = getDefaultInstance().getReconstruction();
        onChanged();
        return this;
      }

      private java.util.List<maxpb.MaxpbReport.ReportAccessories> accessories_ =
        java.util.Collections.emptyList();
      private void ensureAccessoriesIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          accessories_ = new java.util.ArrayList<maxpb.MaxpbReport.ReportAccessories>(accessories_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.ReportAccessories, maxpb.MaxpbReport.ReportAccessories.Builder, maxpb.MaxpbReport.ReportAccessoriesOrBuilder> accessoriesBuilder_;

      /**
       * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.ReportAccessories> getAccessoriesList() {
        if (accessoriesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(accessories_);
        } else {
          return accessoriesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getAccessoriesCount() {
        if (accessoriesBuilder_ == null) {
          return accessories_.size();
        } else {
          return accessoriesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.ReportAccessories getAccessories(int index) {
        if (accessoriesBuilder_ == null) {
          return accessories_.get(index);
        } else {
          return accessoriesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setAccessories(
          int index, maxpb.MaxpbReport.ReportAccessories value) {
        if (accessoriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccessoriesIsMutable();
          accessories_.set(index, value);
          onChanged();
        } else {
          accessoriesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setAccessories(
          int index, maxpb.MaxpbReport.ReportAccessories.Builder builderForValue) {
        if (accessoriesBuilder_ == null) {
          ensureAccessoriesIsMutable();
          accessories_.set(index, builderForValue.build());
          onChanged();
        } else {
          accessoriesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addAccessories(maxpb.MaxpbReport.ReportAccessories value) {
        if (accessoriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccessoriesIsMutable();
          accessories_.add(value);
          onChanged();
        } else {
          accessoriesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addAccessories(
          int index, maxpb.MaxpbReport.ReportAccessories value) {
        if (accessoriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccessoriesIsMutable();
          accessories_.add(index, value);
          onChanged();
        } else {
          accessoriesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addAccessories(
          maxpb.MaxpbReport.ReportAccessories.Builder builderForValue) {
        if (accessoriesBuilder_ == null) {
          ensureAccessoriesIsMutable();
          accessories_.add(builderForValue.build());
          onChanged();
        } else {
          accessoriesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addAccessories(
          int index, maxpb.MaxpbReport.ReportAccessories.Builder builderForValue) {
        if (accessoriesBuilder_ == null) {
          ensureAccessoriesIsMutable();
          accessories_.add(index, builderForValue.build());
          onChanged();
        } else {
          accessoriesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addAllAccessories(
          java.lang.Iterable<? extends maxpb.MaxpbReport.ReportAccessories> values) {
        if (accessoriesBuilder_ == null) {
          ensureAccessoriesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, accessories_);
          onChanged();
        } else {
          accessoriesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearAccessories() {
        if (accessoriesBuilder_ == null) {
          accessories_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          accessoriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder removeAccessories(int index) {
        if (accessoriesBuilder_ == null) {
          ensureAccessoriesIsMutable();
          accessories_.remove(index);
          onChanged();
        } else {
          accessoriesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.ReportAccessories.Builder getAccessoriesBuilder(
          int index) {
        return getAccessoriesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.ReportAccessoriesOrBuilder getAccessoriesOrBuilder(
          int index) {
        if (accessoriesBuilder_ == null) {
          return accessories_.get(index);  } else {
          return accessoriesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbReport.ReportAccessoriesOrBuilder> 
           getAccessoriesOrBuilderList() {
        if (accessoriesBuilder_ != null) {
          return accessoriesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(accessories_);
        }
      }
      /**
       * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.ReportAccessories.Builder addAccessoriesBuilder() {
        return getAccessoriesFieldBuilder().addBuilder(
            maxpb.MaxpbReport.ReportAccessories.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.ReportAccessories.Builder addAccessoriesBuilder(
          int index) {
        return getAccessoriesFieldBuilder().addBuilder(
            index, maxpb.MaxpbReport.ReportAccessories.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.ReportAccessories accessories = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.ReportAccessories.Builder> 
           getAccessoriesBuilderList() {
        return getAccessoriesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.ReportAccessories, maxpb.MaxpbReport.ReportAccessories.Builder, maxpb.MaxpbReport.ReportAccessoriesOrBuilder> 
          getAccessoriesFieldBuilder() {
        if (accessoriesBuilder_ == null) {
          accessoriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbReport.ReportAccessories, maxpb.MaxpbReport.ReportAccessories.Builder, maxpb.MaxpbReport.ReportAccessoriesOrBuilder>(
                  accessories_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          accessories_ = null;
        }
        return accessoriesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.ReportData)
    }

    static {
      defaultInstance = new ReportData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.ReportData)
  }

  public interface IDPackOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.IDPack)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 imei = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasImei();
    /**
     * <code>optional uint64 imei = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    long getImei();

    /**
     * <code>optional uint64 ieee = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasIeee();
    /**
     * <code>optional uint64 ieee = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    long getIeee();

    /**
     * <code>optional uint64 costumerID = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasCostumerID();
    /**
     * <code>optional uint64 costumerID = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    long getCostumerID();

    /**
     * <code>optional uint64 vehicleID = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasVehicleID();
    /**
     * <code>optional uint64 vehicleID = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    long getVehicleID();

    /**
     * <code>optional bytes sessionID = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasSessionID();
    /**
     * <code>optional bytes sessionID = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    com.google.protobuf.ByteString getSessionID();

    /**
     * <code>optional uint32 loraP2pID = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasLoraP2PID();
    /**
     * <code>optional uint32 loraP2pID = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getLoraP2PID();

    /**
     * <code>optional uint64 loraWanEUI = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasLoraWanEUI();
    /**
     * <code>optional uint64 loraWanEUI = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    long getLoraWanEUI();

    /**
     * <code>optional uint64 loraWanDeviceID = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasLoraWanDeviceID();
    /**
     * <code>optional uint64 loraWanDeviceID = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    long getLoraWanDeviceID();

    /**
     * <code>optional string deviceIDStr = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasDeviceIDStr();
    /**
     * <code>optional string deviceIDStr = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    java.lang.String getDeviceIDStr();
    /**
     * <code>optional string deviceIDStr = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    com.google.protobuf.ByteString
        getDeviceIDStrBytes();

    /**
     * <code>optional bytes uniqueID = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    boolean hasUniqueID();
    /**
     * <code>optional bytes uniqueID = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    com.google.protobuf.ByteString getUniqueID();
  }
  /**
   * Protobuf type {@code maxpb.IDPack}
   */
  public static final class IDPack extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.IDPack)
      IDPackOrBuilder {
    // Use IDPack.newBuilder() to construct.
    private IDPack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private IDPack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final IDPack defaultInstance;
    public static IDPack getDefaultInstance() {
      return defaultInstance;
    }

    public IDPack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private IDPack(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              imei_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ieee_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              costumerID_ = input.readUInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              vehicleID_ = input.readUInt64();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              sessionID_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              loraP2PID_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              loraWanEUI_ = input.readUInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              loraWanDeviceID_ = input.readUInt64();
              break;
            }
            case 74: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000100;
              deviceIDStr_ = bs;
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              uniqueID_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbReport.internal_static_maxpb_IDPack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbReport.internal_static_maxpb_IDPack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbReport.IDPack.class, maxpb.MaxpbReport.IDPack.Builder.class);
    }

    public static com.google.protobuf.Parser<IDPack> PARSER =
        new com.google.protobuf.AbstractParser<IDPack>() {
      public IDPack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IDPack(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<IDPack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int IMEI_FIELD_NUMBER = 1;
    private long imei_;
    /**
     * <code>optional uint64 imei = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasImei() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 imei = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public long getImei() {
      return imei_;
    }

    public static final int IEEE_FIELD_NUMBER = 2;
    private long ieee_;
    /**
     * <code>optional uint64 ieee = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasIeee() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 ieee = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public long getIeee() {
      return ieee_;
    }

    public static final int COSTUMERID_FIELD_NUMBER = 3;
    private long costumerID_;
    /**
     * <code>optional uint64 costumerID = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasCostumerID() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 costumerID = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public long getCostumerID() {
      return costumerID_;
    }

    public static final int VEHICLEID_FIELD_NUMBER = 4;
    private long vehicleID_;
    /**
     * <code>optional uint64 vehicleID = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasVehicleID() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 vehicleID = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public long getVehicleID() {
      return vehicleID_;
    }

    public static final int SESSIONID_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString sessionID_;
    /**
     * <code>optional bytes sessionID = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasSessionID() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bytes sessionID = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public com.google.protobuf.ByteString getSessionID() {
      return sessionID_;
    }

    public static final int LORAP2PID_FIELD_NUMBER = 6;
    private int loraP2PID_;
    /**
     * <code>optional uint32 loraP2pID = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasLoraP2PID() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 loraP2pID = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getLoraP2PID() {
      return loraP2PID_;
    }

    public static final int LORAWANEUI_FIELD_NUMBER = 7;
    private long loraWanEUI_;
    /**
     * <code>optional uint64 loraWanEUI = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasLoraWanEUI() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint64 loraWanEUI = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public long getLoraWanEUI() {
      return loraWanEUI_;
    }

    public static final int LORAWANDEVICEID_FIELD_NUMBER = 8;
    private long loraWanDeviceID_;
    /**
     * <code>optional uint64 loraWanDeviceID = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasLoraWanDeviceID() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint64 loraWanDeviceID = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public long getLoraWanDeviceID() {
      return loraWanDeviceID_;
    }

    public static final int DEVICEIDSTR_FIELD_NUMBER = 9;
    private java.lang.Object deviceIDStr_;
    /**
     * <code>optional string deviceIDStr = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasDeviceIDStr() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string deviceIDStr = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public java.lang.String getDeviceIDStr() {
      java.lang.Object ref = deviceIDStr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          deviceIDStr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string deviceIDStr = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDeviceIDStrBytes() {
      java.lang.Object ref = deviceIDStr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceIDStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UNIQUEID_FIELD_NUMBER = 10;
    private com.google.protobuf.ByteString uniqueID_;
    /**
     * <code>optional bytes uniqueID = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    public boolean hasUniqueID() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bytes uniqueID = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    public com.google.protobuf.ByteString getUniqueID() {
      return uniqueID_;
    }

    private void initFields() {
      imei_ = 0L;
      ieee_ = 0L;
      costumerID_ = 0L;
      vehicleID_ = 0L;
      sessionID_ = com.google.protobuf.ByteString.EMPTY;
      loraP2PID_ = 0;
      loraWanEUI_ = 0L;
      loraWanDeviceID_ = 0L;
      deviceIDStr_ = "";
      uniqueID_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, imei_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, ieee_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, costumerID_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, vehicleID_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, sessionID_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, loraP2PID_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt64(7, loraWanEUI_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt64(8, loraWanDeviceID_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getDeviceIDStrBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, uniqueID_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, imei_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, ieee_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, costumerID_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, vehicleID_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, sessionID_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, loraP2PID_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, loraWanEUI_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, loraWanDeviceID_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getDeviceIDStrBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, uniqueID_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbReport.IDPack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.IDPack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.IDPack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.IDPack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.IDPack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.IDPack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.IDPack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbReport.IDPack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.IDPack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.IDPack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbReport.IDPack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.IDPack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.IDPack)
        maxpb.MaxpbReport.IDPackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbReport.internal_static_maxpb_IDPack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbReport.internal_static_maxpb_IDPack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbReport.IDPack.class, maxpb.MaxpbReport.IDPack.Builder.class);
      }

      // Construct using maxpb.MaxpbReport.IDPack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        imei_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        ieee_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        costumerID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        vehicleID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        sessionID_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        loraP2PID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        loraWanEUI_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        loraWanDeviceID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        deviceIDStr_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        uniqueID_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbReport.internal_static_maxpb_IDPack_descriptor;
      }

      public maxpb.MaxpbReport.IDPack getDefaultInstanceForType() {
        return maxpb.MaxpbReport.IDPack.getDefaultInstance();
      }

      public maxpb.MaxpbReport.IDPack build() {
        maxpb.MaxpbReport.IDPack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbReport.IDPack buildPartial() {
        maxpb.MaxpbReport.IDPack result = new maxpb.MaxpbReport.IDPack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.imei_ = imei_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ieee_ = ieee_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.costumerID_ = costumerID_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.vehicleID_ = vehicleID_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.sessionID_ = sessionID_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.loraP2PID_ = loraP2PID_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.loraWanEUI_ = loraWanEUI_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.loraWanDeviceID_ = loraWanDeviceID_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.deviceIDStr_ = deviceIDStr_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.uniqueID_ = uniqueID_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbReport.IDPack) {
          return mergeFrom((maxpb.MaxpbReport.IDPack)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbReport.IDPack other) {
        if (other == maxpb.MaxpbReport.IDPack.getDefaultInstance()) return this;
        if (other.hasImei()) {
          setImei(other.getImei());
        }
        if (other.hasIeee()) {
          setIeee(other.getIeee());
        }
        if (other.hasCostumerID()) {
          setCostumerID(other.getCostumerID());
        }
        if (other.hasVehicleID()) {
          setVehicleID(other.getVehicleID());
        }
        if (other.hasSessionID()) {
          setSessionID(other.getSessionID());
        }
        if (other.hasLoraP2PID()) {
          setLoraP2PID(other.getLoraP2PID());
        }
        if (other.hasLoraWanEUI()) {
          setLoraWanEUI(other.getLoraWanEUI());
        }
        if (other.hasLoraWanDeviceID()) {
          setLoraWanDeviceID(other.getLoraWanDeviceID());
        }
        if (other.hasDeviceIDStr()) {
          bitField0_ |= 0x00000100;
          deviceIDStr_ = other.deviceIDStr_;
          onChanged();
        }
        if (other.hasUniqueID()) {
          setUniqueID(other.getUniqueID());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbReport.IDPack parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbReport.IDPack) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long imei_ ;
      /**
       * <code>optional uint64 imei = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasImei() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 imei = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public long getImei() {
        return imei_;
      }
      /**
       * <code>optional uint64 imei = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setImei(long value) {
        bitField0_ |= 0x00000001;
        imei_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 imei = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearImei() {
        bitField0_ = (bitField0_ & ~0x00000001);
        imei_ = 0L;
        onChanged();
        return this;
      }

      private long ieee_ ;
      /**
       * <code>optional uint64 ieee = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasIeee() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 ieee = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public long getIeee() {
        return ieee_;
      }
      /**
       * <code>optional uint64 ieee = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setIeee(long value) {
        bitField0_ |= 0x00000002;
        ieee_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 ieee = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearIeee() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ieee_ = 0L;
        onChanged();
        return this;
      }

      private long costumerID_ ;
      /**
       * <code>optional uint64 costumerID = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasCostumerID() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 costumerID = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public long getCostumerID() {
        return costumerID_;
      }
      /**
       * <code>optional uint64 costumerID = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setCostumerID(long value) {
        bitField0_ |= 0x00000004;
        costumerID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 costumerID = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearCostumerID() {
        bitField0_ = (bitField0_ & ~0x00000004);
        costumerID_ = 0L;
        onChanged();
        return this;
      }

      private long vehicleID_ ;
      /**
       * <code>optional uint64 vehicleID = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasVehicleID() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 vehicleID = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public long getVehicleID() {
        return vehicleID_;
      }
      /**
       * <code>optional uint64 vehicleID = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setVehicleID(long value) {
        bitField0_ |= 0x00000008;
        vehicleID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 vehicleID = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearVehicleID() {
        bitField0_ = (bitField0_ & ~0x00000008);
        vehicleID_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString sessionID_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes sessionID = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasSessionID() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes sessionID = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public com.google.protobuf.ByteString getSessionID() {
        return sessionID_;
      }
      /**
       * <code>optional bytes sessionID = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setSessionID(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        sessionID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes sessionID = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearSessionID() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sessionID_ = getDefaultInstance().getSessionID();
        onChanged();
        return this;
      }

      private int loraP2PID_ ;
      /**
       * <code>optional uint32 loraP2pID = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasLoraP2PID() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 loraP2pID = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getLoraP2PID() {
        return loraP2PID_;
      }
      /**
       * <code>optional uint32 loraP2pID = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setLoraP2PID(int value) {
        bitField0_ |= 0x00000020;
        loraP2PID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 loraP2pID = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearLoraP2PID() {
        bitField0_ = (bitField0_ & ~0x00000020);
        loraP2PID_ = 0;
        onChanged();
        return this;
      }

      private long loraWanEUI_ ;
      /**
       * <code>optional uint64 loraWanEUI = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasLoraWanEUI() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint64 loraWanEUI = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public long getLoraWanEUI() {
        return loraWanEUI_;
      }
      /**
       * <code>optional uint64 loraWanEUI = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setLoraWanEUI(long value) {
        bitField0_ |= 0x00000040;
        loraWanEUI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 loraWanEUI = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearLoraWanEUI() {
        bitField0_ = (bitField0_ & ~0x00000040);
        loraWanEUI_ = 0L;
        onChanged();
        return this;
      }

      private long loraWanDeviceID_ ;
      /**
       * <code>optional uint64 loraWanDeviceID = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasLoraWanDeviceID() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint64 loraWanDeviceID = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public long getLoraWanDeviceID() {
        return loraWanDeviceID_;
      }
      /**
       * <code>optional uint64 loraWanDeviceID = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setLoraWanDeviceID(long value) {
        bitField0_ |= 0x00000080;
        loraWanDeviceID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 loraWanDeviceID = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearLoraWanDeviceID() {
        bitField0_ = (bitField0_ & ~0x00000080);
        loraWanDeviceID_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object deviceIDStr_ = "";
      /**
       * <code>optional string deviceIDStr = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasDeviceIDStr() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string deviceIDStr = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public java.lang.String getDeviceIDStr() {
        java.lang.Object ref = deviceIDStr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            deviceIDStr_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string deviceIDStr = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDeviceIDStrBytes() {
        java.lang.Object ref = deviceIDStr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceIDStr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string deviceIDStr = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setDeviceIDStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        deviceIDStr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string deviceIDStr = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearDeviceIDStr() {
        bitField0_ = (bitField0_ & ~0x00000100);
        deviceIDStr_ = getDefaultInstance().getDeviceIDStr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string deviceIDStr = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setDeviceIDStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        deviceIDStr_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString uniqueID_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes uniqueID = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public boolean hasUniqueID() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bytes uniqueID = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public com.google.protobuf.ByteString getUniqueID() {
        return uniqueID_;
      }
      /**
       * <code>optional bytes uniqueID = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder setUniqueID(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        uniqueID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes uniqueID = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder clearUniqueID() {
        bitField0_ = (bitField0_ & ~0x00000200);
        uniqueID_ = getDefaultInstance().getUniqueID();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.IDPack)
    }

    static {
      defaultInstance = new IDPack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.IDPack)
  }

  public interface MultipleReportDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.MultipleReportData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    boolean hasDeviceID();
    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    long getDeviceID();

    /**
     * <code>required uint64 packetID = 2;</code>
     *
     * <pre>
     *&#47; Random data generated by device to identify the Ack SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    boolean hasPacketID();
    /**
     * <code>required uint64 packetID = 2;</code>
     *
     * <pre>
     *&#47; Random data generated by device to identify the Ack SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    long getPacketID();

    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasIdentificationPack();
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    maxpb.MaxpbReport.IDPack getIdentificationPack();
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    maxpb.MaxpbReport.IDPackOrBuilder getIdentificationPackOrBuilder();

    /**
     * <code>optional .maxpb.ReportData newReportData = 4;</code>
     *
     * <pre>
     *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    boolean hasNewReportData();
    /**
     * <code>optional .maxpb.ReportData newReportData = 4;</code>
     *
     * <pre>
     *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    maxpb.MaxpbReport.ReportData getNewReportData();
    /**
     * <code>optional .maxpb.ReportData newReportData = 4;</code>
     *
     * <pre>
     *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    maxpb.MaxpbReport.ReportDataOrBuilder getNewReportDataOrBuilder();

    /**
     * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
     *
     * <pre>
     *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<maxpb.MaxpbReport.ReportData> 
        getOldReportDataList();
    /**
     * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
     *
     * <pre>
     *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.ReportData getOldReportData(int index);
    /**
     * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
     *
     * <pre>
     *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    int getOldReportDataCount();
    /**
     * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
     *
     * <pre>
     *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbReport.ReportDataOrBuilder> 
        getOldReportDataOrBuilderList();
    /**
     * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
     *
     * <pre>
     *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.ReportDataOrBuilder getOldReportDataOrBuilder(
        int index);

    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    boolean hasCustomerData();
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    maxpb.MaxpbCustomerData.CustomerData getCustomerData();
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    maxpb.MaxpbCustomerData.CustomerDataOrBuilder getCustomerDataOrBuilder();
  }
  /**
   * Protobuf type {@code maxpb.MultipleReportData}
   */
  public static final class MultipleReportData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.MultipleReportData)
      MultipleReportDataOrBuilder {
    // Use MultipleReportData.newBuilder() to construct.
    private MultipleReportData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MultipleReportData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MultipleReportData defaultInstance;
    public static MultipleReportData getDefaultInstance() {
      return defaultInstance;
    }

    public MultipleReportData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MultipleReportData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              deviceID_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              packetID_ = input.readUInt64();
              break;
            }
            case 26: {
              maxpb.MaxpbReport.IDPack.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = identificationPack_.toBuilder();
              }
              identificationPack_ = input.readMessage(maxpb.MaxpbReport.IDPack.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(identificationPack_);
                identificationPack_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              maxpb.MaxpbReport.ReportData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = newReportData_.toBuilder();
              }
              newReportData_ = input.readMessage(maxpb.MaxpbReport.ReportData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(newReportData_);
                newReportData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                oldReportData_ = new java.util.ArrayList<maxpb.MaxpbReport.ReportData>();
                mutable_bitField0_ |= 0x00000010;
              }
              oldReportData_.add(input.readMessage(maxpb.MaxpbReport.ReportData.PARSER, extensionRegistry));
              break;
            }
            case 1026: {
              maxpb.MaxpbCustomerData.CustomerData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = customerData_.toBuilder();
              }
              customerData_ = input.readMessage(maxpb.MaxpbCustomerData.CustomerData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(customerData_);
                customerData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          oldReportData_ = java.util.Collections.unmodifiableList(oldReportData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbReport.internal_static_maxpb_MultipleReportData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbReport.internal_static_maxpb_MultipleReportData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbReport.MultipleReportData.class, maxpb.MaxpbReport.MultipleReportData.Builder.class);
    }

    public static com.google.protobuf.Parser<MultipleReportData> PARSER =
        new com.google.protobuf.AbstractParser<MultipleReportData>() {
      public MultipleReportData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MultipleReportData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MultipleReportData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DEVICEID_FIELD_NUMBER = 1;
    private long deviceID_;
    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public boolean hasDeviceID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public long getDeviceID() {
      return deviceID_;
    }

    public static final int PACKETID_FIELD_NUMBER = 2;
    private long packetID_;
    /**
     * <code>required uint64 packetID = 2;</code>
     *
     * <pre>
     *&#47; Random data generated by device to identify the Ack SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public boolean hasPacketID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 packetID = 2;</code>
     *
     * <pre>
     *&#47; Random data generated by device to identify the Ack SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public long getPacketID() {
      return packetID_;
    }

    public static final int IDENTIFICATIONPACK_FIELD_NUMBER = 3;
    private maxpb.MaxpbReport.IDPack identificationPack_;
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasIdentificationPack() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public maxpb.MaxpbReport.IDPack getIdentificationPack() {
      return identificationPack_;
    }
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public maxpb.MaxpbReport.IDPackOrBuilder getIdentificationPackOrBuilder() {
      return identificationPack_;
    }

    public static final int NEWREPORTDATA_FIELD_NUMBER = 4;
    private maxpb.MaxpbReport.ReportData newReportData_;
    /**
     * <code>optional .maxpb.ReportData newReportData = 4;</code>
     *
     * <pre>
     *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public boolean hasNewReportData() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .maxpb.ReportData newReportData = 4;</code>
     *
     * <pre>
     *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public maxpb.MaxpbReport.ReportData getNewReportData() {
      return newReportData_;
    }
    /**
     * <code>optional .maxpb.ReportData newReportData = 4;</code>
     *
     * <pre>
     *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
     * </pre>
     */
    public maxpb.MaxpbReport.ReportDataOrBuilder getNewReportDataOrBuilder() {
      return newReportData_;
    }

    public static final int OLDREPORTDATA_FIELD_NUMBER = 5;
    private java.util.List<maxpb.MaxpbReport.ReportData> oldReportData_;
    /**
     * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
     *
     * <pre>
     *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<maxpb.MaxpbReport.ReportData> getOldReportDataList() {
      return oldReportData_;
    }
    /**
     * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
     *
     * <pre>
     *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbReport.ReportDataOrBuilder> 
        getOldReportDataOrBuilderList() {
      return oldReportData_;
    }
    /**
     * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
     *
     * <pre>
     *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public int getOldReportDataCount() {
      return oldReportData_.size();
    }
    /**
     * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
     *
     * <pre>
     *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.ReportData getOldReportData(int index) {
      return oldReportData_.get(index);
    }
    /**
     * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
     *
     * <pre>
     *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.ReportDataOrBuilder getOldReportDataOrBuilder(
        int index) {
      return oldReportData_.get(index);
    }

    public static final int CUSTOMERDATA_FIELD_NUMBER = 128;
    private maxpb.MaxpbCustomerData.CustomerData customerData_;
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    public boolean hasCustomerData() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    public maxpb.MaxpbCustomerData.CustomerData getCustomerData() {
      return customerData_;
    }
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    public maxpb.MaxpbCustomerData.CustomerDataOrBuilder getCustomerDataOrBuilder() {
      return customerData_;
    }

    private void initFields() {
      deviceID_ = 0L;
      packetID_ = 0L;
      identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
      newReportData_ = maxpb.MaxpbReport.ReportData.getDefaultInstance();
      oldReportData_ = java.util.Collections.emptyList();
      customerData_ = maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDeviceID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPacketID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasNewReportData()) {
        if (!getNewReportData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getOldReportDataCount(); i++) {
        if (!getOldReportData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, deviceID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, packetID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, identificationPack_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, newReportData_);
      }
      for (int i = 0; i < oldReportData_.size(); i++) {
        output.writeMessage(5, oldReportData_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(128, customerData_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, deviceID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, packetID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, identificationPack_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, newReportData_);
      }
      for (int i = 0; i < oldReportData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, oldReportData_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(128, customerData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbReport.MultipleReportData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.MultipleReportData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.MultipleReportData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.MultipleReportData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.MultipleReportData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.MultipleReportData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.MultipleReportData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbReport.MultipleReportData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.MultipleReportData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.MultipleReportData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbReport.MultipleReportData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.MultipleReportData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.MultipleReportData)
        maxpb.MaxpbReport.MultipleReportDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbReport.internal_static_maxpb_MultipleReportData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbReport.internal_static_maxpb_MultipleReportData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbReport.MultipleReportData.class, maxpb.MaxpbReport.MultipleReportData.Builder.class);
      }

      // Construct using maxpb.MaxpbReport.MultipleReportData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIdentificationPackFieldBuilder();
          getNewReportDataFieldBuilder();
          getOldReportDataFieldBuilder();
          getCustomerDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        deviceID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        packetID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (identificationPackBuilder_ == null) {
          identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
        } else {
          identificationPackBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (newReportDataBuilder_ == null) {
          newReportData_ = maxpb.MaxpbReport.ReportData.getDefaultInstance();
        } else {
          newReportDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (oldReportDataBuilder_ == null) {
          oldReportData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          oldReportDataBuilder_.clear();
        }
        if (customerDataBuilder_ == null) {
          customerData_ = maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance();
        } else {
          customerDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbReport.internal_static_maxpb_MultipleReportData_descriptor;
      }

      public maxpb.MaxpbReport.MultipleReportData getDefaultInstanceForType() {
        return maxpb.MaxpbReport.MultipleReportData.getDefaultInstance();
      }

      public maxpb.MaxpbReport.MultipleReportData build() {
        maxpb.MaxpbReport.MultipleReportData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbReport.MultipleReportData buildPartial() {
        maxpb.MaxpbReport.MultipleReportData result = new maxpb.MaxpbReport.MultipleReportData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deviceID_ = deviceID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.packetID_ = packetID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (identificationPackBuilder_ == null) {
          result.identificationPack_ = identificationPack_;
        } else {
          result.identificationPack_ = identificationPackBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (newReportDataBuilder_ == null) {
          result.newReportData_ = newReportData_;
        } else {
          result.newReportData_ = newReportDataBuilder_.build();
        }
        if (oldReportDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            oldReportData_ = java.util.Collections.unmodifiableList(oldReportData_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.oldReportData_ = oldReportData_;
        } else {
          result.oldReportData_ = oldReportDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        if (customerDataBuilder_ == null) {
          result.customerData_ = customerData_;
        } else {
          result.customerData_ = customerDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbReport.MultipleReportData) {
          return mergeFrom((maxpb.MaxpbReport.MultipleReportData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbReport.MultipleReportData other) {
        if (other == maxpb.MaxpbReport.MultipleReportData.getDefaultInstance()) return this;
        if (other.hasDeviceID()) {
          setDeviceID(other.getDeviceID());
        }
        if (other.hasPacketID()) {
          setPacketID(other.getPacketID());
        }
        if (other.hasIdentificationPack()) {
          mergeIdentificationPack(other.getIdentificationPack());
        }
        if (other.hasNewReportData()) {
          mergeNewReportData(other.getNewReportData());
        }
        if (oldReportDataBuilder_ == null) {
          if (!other.oldReportData_.isEmpty()) {
            if (oldReportData_.isEmpty()) {
              oldReportData_ = other.oldReportData_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureOldReportDataIsMutable();
              oldReportData_.addAll(other.oldReportData_);
            }
            onChanged();
          }
        } else {
          if (!other.oldReportData_.isEmpty()) {
            if (oldReportDataBuilder_.isEmpty()) {
              oldReportDataBuilder_.dispose();
              oldReportDataBuilder_ = null;
              oldReportData_ = other.oldReportData_;
              bitField0_ = (bitField0_ & ~0x00000010);
              oldReportDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOldReportDataFieldBuilder() : null;
            } else {
              oldReportDataBuilder_.addAllMessages(other.oldReportData_);
            }
          }
        }
        if (other.hasCustomerData()) {
          mergeCustomerData(other.getCustomerData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDeviceID()) {
          
          return false;
        }
        if (!hasPacketID()) {
          
          return false;
        }
        if (hasNewReportData()) {
          if (!getNewReportData().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getOldReportDataCount(); i++) {
          if (!getOldReportData(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbReport.MultipleReportData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbReport.MultipleReportData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long deviceID_ ;
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public boolean hasDeviceID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public long getDeviceID() {
        return deviceID_;
      }
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setDeviceID(long value) {
        bitField0_ |= 0x00000001;
        deviceID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder clearDeviceID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceID_ = 0L;
        onChanged();
        return this;
      }

      private long packetID_ ;
      /**
       * <code>required uint64 packetID = 2;</code>
       *
       * <pre>
       *&#47; Random data generated by device to identify the Ack SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public boolean hasPacketID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 packetID = 2;</code>
       *
       * <pre>
       *&#47; Random data generated by device to identify the Ack SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public long getPacketID() {
        return packetID_;
      }
      /**
       * <code>required uint64 packetID = 2;</code>
       *
       * <pre>
       *&#47; Random data generated by device to identify the Ack SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setPacketID(long value) {
        bitField0_ |= 0x00000002;
        packetID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 packetID = 2;</code>
       *
       * <pre>
       *&#47; Random data generated by device to identify the Ack SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder clearPacketID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        packetID_ = 0L;
        onChanged();
        return this;
      }

      private maxpb.MaxpbReport.IDPack identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.IDPack, maxpb.MaxpbReport.IDPack.Builder, maxpb.MaxpbReport.IDPackOrBuilder> identificationPackBuilder_;
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasIdentificationPack() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbReport.IDPack getIdentificationPack() {
        if (identificationPackBuilder_ == null) {
          return identificationPack_;
        } else {
          return identificationPackBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setIdentificationPack(maxpb.MaxpbReport.IDPack value) {
        if (identificationPackBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          identificationPack_ = value;
          onChanged();
        } else {
          identificationPackBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setIdentificationPack(
          maxpb.MaxpbReport.IDPack.Builder builderForValue) {
        if (identificationPackBuilder_ == null) {
          identificationPack_ = builderForValue.build();
          onChanged();
        } else {
          identificationPackBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder mergeIdentificationPack(maxpb.MaxpbReport.IDPack value) {
        if (identificationPackBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              identificationPack_ != maxpb.MaxpbReport.IDPack.getDefaultInstance()) {
            identificationPack_ =
              maxpb.MaxpbReport.IDPack.newBuilder(identificationPack_).mergeFrom(value).buildPartial();
          } else {
            identificationPack_ = value;
          }
          onChanged();
        } else {
          identificationPackBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearIdentificationPack() {
        if (identificationPackBuilder_ == null) {
          identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
          onChanged();
        } else {
          identificationPackBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbReport.IDPack.Builder getIdentificationPackBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getIdentificationPackFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbReport.IDPackOrBuilder getIdentificationPackOrBuilder() {
        if (identificationPackBuilder_ != null) {
          return identificationPackBuilder_.getMessageOrBuilder();
        } else {
          return identificationPack_;
        }
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.IDPack, maxpb.MaxpbReport.IDPack.Builder, maxpb.MaxpbReport.IDPackOrBuilder> 
          getIdentificationPackFieldBuilder() {
        if (identificationPackBuilder_ == null) {
          identificationPackBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbReport.IDPack, maxpb.MaxpbReport.IDPack.Builder, maxpb.MaxpbReport.IDPackOrBuilder>(
                  getIdentificationPack(),
                  getParentForChildren(),
                  isClean());
          identificationPack_ = null;
        }
        return identificationPackBuilder_;
      }

      private maxpb.MaxpbReport.ReportData newReportData_ = maxpb.MaxpbReport.ReportData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.ReportData, maxpb.MaxpbReport.ReportData.Builder, maxpb.MaxpbReport.ReportDataOrBuilder> newReportDataBuilder_;
      /**
       * <code>optional .maxpb.ReportData newReportData = 4;</code>
       *
       * <pre>
       *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public boolean hasNewReportData() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .maxpb.ReportData newReportData = 4;</code>
       *
       * <pre>
       *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public maxpb.MaxpbReport.ReportData getNewReportData() {
        if (newReportDataBuilder_ == null) {
          return newReportData_;
        } else {
          return newReportDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.ReportData newReportData = 4;</code>
       *
       * <pre>
       *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setNewReportData(maxpb.MaxpbReport.ReportData value) {
        if (newReportDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          newReportData_ = value;
          onChanged();
        } else {
          newReportDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .maxpb.ReportData newReportData = 4;</code>
       *
       * <pre>
       *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder setNewReportData(
          maxpb.MaxpbReport.ReportData.Builder builderForValue) {
        if (newReportDataBuilder_ == null) {
          newReportData_ = builderForValue.build();
          onChanged();
        } else {
          newReportDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .maxpb.ReportData newReportData = 4;</code>
       *
       * <pre>
       *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder mergeNewReportData(maxpb.MaxpbReport.ReportData value) {
        if (newReportDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              newReportData_ != maxpb.MaxpbReport.ReportData.getDefaultInstance()) {
            newReportData_ =
              maxpb.MaxpbReport.ReportData.newBuilder(newReportData_).mergeFrom(value).buildPartial();
          } else {
            newReportData_ = value;
          }
          onChanged();
        } else {
          newReportDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .maxpb.ReportData newReportData = 4;</code>
       *
       * <pre>
       *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public Builder clearNewReportData() {
        if (newReportDataBuilder_ == null) {
          newReportData_ = maxpb.MaxpbReport.ReportData.getDefaultInstance();
          onChanged();
        } else {
          newReportDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .maxpb.ReportData newReportData = 4;</code>
       *
       * <pre>
       *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public maxpb.MaxpbReport.ReportData.Builder getNewReportDataBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getNewReportDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.ReportData newReportData = 4;</code>
       *
       * <pre>
       *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      public maxpb.MaxpbReport.ReportDataOrBuilder getNewReportDataOrBuilder() {
        if (newReportDataBuilder_ != null) {
          return newReportDataBuilder_.getMessageOrBuilder();
        } else {
          return newReportData_;
        }
      }
      /**
       * <code>optional .maxpb.ReportData newReportData = 4;</code>
       *
       * <pre>
       *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180, MAXIO
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.ReportData, maxpb.MaxpbReport.ReportData.Builder, maxpb.MaxpbReport.ReportDataOrBuilder> 
          getNewReportDataFieldBuilder() {
        if (newReportDataBuilder_ == null) {
          newReportDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbReport.ReportData, maxpb.MaxpbReport.ReportData.Builder, maxpb.MaxpbReport.ReportDataOrBuilder>(
                  getNewReportData(),
                  getParentForChildren(),
                  isClean());
          newReportData_ = null;
        }
        return newReportDataBuilder_;
      }

      private java.util.List<maxpb.MaxpbReport.ReportData> oldReportData_ =
        java.util.Collections.emptyList();
      private void ensureOldReportDataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          oldReportData_ = new java.util.ArrayList<maxpb.MaxpbReport.ReportData>(oldReportData_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.ReportData, maxpb.MaxpbReport.ReportData.Builder, maxpb.MaxpbReport.ReportDataOrBuilder> oldReportDataBuilder_;

      /**
       * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.ReportData> getOldReportDataList() {
        if (oldReportDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(oldReportData_);
        } else {
          return oldReportDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public int getOldReportDataCount() {
        if (oldReportDataBuilder_ == null) {
          return oldReportData_.size();
        } else {
          return oldReportDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.ReportData getOldReportData(int index) {
        if (oldReportDataBuilder_ == null) {
          return oldReportData_.get(index);
        } else {
          return oldReportDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setOldReportData(
          int index, maxpb.MaxpbReport.ReportData value) {
        if (oldReportDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOldReportDataIsMutable();
          oldReportData_.set(index, value);
          onChanged();
        } else {
          oldReportDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setOldReportData(
          int index, maxpb.MaxpbReport.ReportData.Builder builderForValue) {
        if (oldReportDataBuilder_ == null) {
          ensureOldReportDataIsMutable();
          oldReportData_.set(index, builderForValue.build());
          onChanged();
        } else {
          oldReportDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addOldReportData(maxpb.MaxpbReport.ReportData value) {
        if (oldReportDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOldReportDataIsMutable();
          oldReportData_.add(value);
          onChanged();
        } else {
          oldReportDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addOldReportData(
          int index, maxpb.MaxpbReport.ReportData value) {
        if (oldReportDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOldReportDataIsMutable();
          oldReportData_.add(index, value);
          onChanged();
        } else {
          oldReportDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addOldReportData(
          maxpb.MaxpbReport.ReportData.Builder builderForValue) {
        if (oldReportDataBuilder_ == null) {
          ensureOldReportDataIsMutable();
          oldReportData_.add(builderForValue.build());
          onChanged();
        } else {
          oldReportDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addOldReportData(
          int index, maxpb.MaxpbReport.ReportData.Builder builderForValue) {
        if (oldReportDataBuilder_ == null) {
          ensureOldReportDataIsMutable();
          oldReportData_.add(index, builderForValue.build());
          onChanged();
        } else {
          oldReportDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addAllOldReportData(
          java.lang.Iterable<? extends maxpb.MaxpbReport.ReportData> values) {
        if (oldReportDataBuilder_ == null) {
          ensureOldReportDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, oldReportData_);
          onChanged();
        } else {
          oldReportDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearOldReportData() {
        if (oldReportDataBuilder_ == null) {
          oldReportData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          oldReportDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder removeOldReportData(int index) {
        if (oldReportDataBuilder_ == null) {
          ensureOldReportDataIsMutable();
          oldReportData_.remove(index);
          onChanged();
        } else {
          oldReportDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.ReportData.Builder getOldReportDataBuilder(
          int index) {
        return getOldReportDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.ReportDataOrBuilder getOldReportDataOrBuilder(
          int index) {
        if (oldReportDataBuilder_ == null) {
          return oldReportData_.get(index);  } else {
          return oldReportDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbReport.ReportDataOrBuilder> 
           getOldReportDataOrBuilderList() {
        if (oldReportDataBuilder_ != null) {
          return oldReportDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(oldReportData_);
        }
      }
      /**
       * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.ReportData.Builder addOldReportDataBuilder() {
        return getOldReportDataFieldBuilder().addBuilder(
            maxpb.MaxpbReport.ReportData.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.ReportData.Builder addOldReportDataBuilder(
          int index) {
        return getOldReportDataFieldBuilder().addBuilder(
            index, maxpb.MaxpbReport.ReportData.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.ReportData oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.ReportData.Builder> 
           getOldReportDataBuilderList() {
        return getOldReportDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.ReportData, maxpb.MaxpbReport.ReportData.Builder, maxpb.MaxpbReport.ReportDataOrBuilder> 
          getOldReportDataFieldBuilder() {
        if (oldReportDataBuilder_ == null) {
          oldReportDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbReport.ReportData, maxpb.MaxpbReport.ReportData.Builder, maxpb.MaxpbReport.ReportDataOrBuilder>(
                  oldReportData_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          oldReportData_ = null;
        }
        return oldReportDataBuilder_;
      }

      private maxpb.MaxpbCustomerData.CustomerData customerData_ = maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbCustomerData.CustomerData, maxpb.MaxpbCustomerData.CustomerData.Builder, maxpb.MaxpbCustomerData.CustomerDataOrBuilder> customerDataBuilder_;
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public boolean hasCustomerData() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbCustomerData.CustomerData getCustomerData() {
        if (customerDataBuilder_ == null) {
          return customerData_;
        } else {
          return customerDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public Builder setCustomerData(maxpb.MaxpbCustomerData.CustomerData value) {
        if (customerDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          customerData_ = value;
          onChanged();
        } else {
          customerDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public Builder setCustomerData(
          maxpb.MaxpbCustomerData.CustomerData.Builder builderForValue) {
        if (customerDataBuilder_ == null) {
          customerData_ = builderForValue.build();
          onChanged();
        } else {
          customerDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public Builder mergeCustomerData(maxpb.MaxpbCustomerData.CustomerData value) {
        if (customerDataBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              customerData_ != maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance()) {
            customerData_ =
              maxpb.MaxpbCustomerData.CustomerData.newBuilder(customerData_).mergeFrom(value).buildPartial();
          } else {
            customerData_ = value;
          }
          onChanged();
        } else {
          customerDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public Builder clearCustomerData() {
        if (customerDataBuilder_ == null) {
          customerData_ = maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance();
          onChanged();
        } else {
          customerDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbCustomerData.CustomerData.Builder getCustomerDataBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getCustomerDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbCustomerData.CustomerDataOrBuilder getCustomerDataOrBuilder() {
        if (customerDataBuilder_ != null) {
          return customerDataBuilder_.getMessageOrBuilder();
        } else {
          return customerData_;
        }
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbCustomerData.CustomerData, maxpb.MaxpbCustomerData.CustomerData.Builder, maxpb.MaxpbCustomerData.CustomerDataOrBuilder> 
          getCustomerDataFieldBuilder() {
        if (customerDataBuilder_ == null) {
          customerDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbCustomerData.CustomerData, maxpb.MaxpbCustomerData.CustomerData.Builder, maxpb.MaxpbCustomerData.CustomerDataOrBuilder>(
                  getCustomerData(),
                  getParentForChildren(),
                  isClean());
          customerData_ = null;
        }
        return customerDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.MultipleReportData)
    }

    static {
      defaultInstance = new MultipleReportData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.MultipleReportData)
  }

  public interface MultipleReportDataOldCorruptedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.MultipleReportDataOldCorrupted)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasDeviceID();
    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    long getDeviceID();

    /**
     * <code>required uint64 packetID = 2;</code>
     *
     * <pre>
     *&#47; Random data generated by device to identify the Ack SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasPacketID();
    /**
     * <code>required uint64 packetID = 2;</code>
     *
     * <pre>
     *&#47; Random data generated by device to identify the Ack SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    long getPacketID();

    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasIdentificationPack();
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    maxpb.MaxpbReport.IDPack getIdentificationPack();
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    maxpb.MaxpbReport.IDPackOrBuilder getIdentificationPackOrBuilder();

    /**
     * <code>optional .maxpb.ReportData newReportData = 4;</code>
     *
     * <pre>
     *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasNewReportData();
    /**
     * <code>optional .maxpb.ReportData newReportData = 4;</code>
     *
     * <pre>
     *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.ReportData getNewReportData();
    /**
     * <code>optional .maxpb.ReportData newReportData = 4;</code>
     *
     * <pre>
     *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.ReportDataOrBuilder getNewReportDataOrBuilder();

    /**
     * <code>repeated string oldReportData = 5;</code>
     *
     * <pre>
     *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getOldReportDataList();
    /**
     * <code>repeated string oldReportData = 5;</code>
     *
     * <pre>
     *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    int getOldReportDataCount();
    /**
     * <code>repeated string oldReportData = 5;</code>
     *
     * <pre>
     *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    java.lang.String getOldReportData(int index);
    /**
     * <code>repeated string oldReportData = 5;</code>
     *
     * <pre>
     *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    com.google.protobuf.ByteString
        getOldReportDataBytes(int index);

    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    boolean hasCustomerData();
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    maxpb.MaxpbCustomerData.CustomerData getCustomerData();
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    maxpb.MaxpbCustomerData.CustomerDataOrBuilder getCustomerDataOrBuilder();
  }
  /**
   * Protobuf type {@code maxpb.MultipleReportDataOldCorrupted}
   *
   * <pre>
   *&#47;&#64;exclude
   * </pre>
   */
  public static final class MultipleReportDataOldCorrupted extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.MultipleReportDataOldCorrupted)
      MultipleReportDataOldCorruptedOrBuilder {
    // Use MultipleReportDataOldCorrupted.newBuilder() to construct.
    private MultipleReportDataOldCorrupted(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MultipleReportDataOldCorrupted(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MultipleReportDataOldCorrupted defaultInstance;
    public static MultipleReportDataOldCorrupted getDefaultInstance() {
      return defaultInstance;
    }

    public MultipleReportDataOldCorrupted getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MultipleReportDataOldCorrupted(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              deviceID_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              packetID_ = input.readUInt64();
              break;
            }
            case 26: {
              maxpb.MaxpbReport.IDPack.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = identificationPack_.toBuilder();
              }
              identificationPack_ = input.readMessage(maxpb.MaxpbReport.IDPack.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(identificationPack_);
                identificationPack_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              maxpb.MaxpbReport.ReportData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = newReportData_.toBuilder();
              }
              newReportData_ = input.readMessage(maxpb.MaxpbReport.ReportData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(newReportData_);
                newReportData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                oldReportData_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              oldReportData_.add(bs);
              break;
            }
            case 1026: {
              maxpb.MaxpbCustomerData.CustomerData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = customerData_.toBuilder();
              }
              customerData_ = input.readMessage(maxpb.MaxpbCustomerData.CustomerData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(customerData_);
                customerData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          oldReportData_ = oldReportData_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbReport.internal_static_maxpb_MultipleReportDataOldCorrupted_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbReport.internal_static_maxpb_MultipleReportDataOldCorrupted_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbReport.MultipleReportDataOldCorrupted.class, maxpb.MaxpbReport.MultipleReportDataOldCorrupted.Builder.class);
    }

    public static com.google.protobuf.Parser<MultipleReportDataOldCorrupted> PARSER =
        new com.google.protobuf.AbstractParser<MultipleReportDataOldCorrupted>() {
      public MultipleReportDataOldCorrupted parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MultipleReportDataOldCorrupted(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MultipleReportDataOldCorrupted> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DEVICEID_FIELD_NUMBER = 1;
    private long deviceID_;
    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasDeviceID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public long getDeviceID() {
      return deviceID_;
    }

    public static final int PACKETID_FIELD_NUMBER = 2;
    private long packetID_;
    /**
     * <code>required uint64 packetID = 2;</code>
     *
     * <pre>
     *&#47; Random data generated by device to identify the Ack SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasPacketID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 packetID = 2;</code>
     *
     * <pre>
     *&#47; Random data generated by device to identify the Ack SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public long getPacketID() {
      return packetID_;
    }

    public static final int IDENTIFICATIONPACK_FIELD_NUMBER = 3;
    private maxpb.MaxpbReport.IDPack identificationPack_;
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasIdentificationPack() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public maxpb.MaxpbReport.IDPack getIdentificationPack() {
      return identificationPack_;
    }
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public maxpb.MaxpbReport.IDPackOrBuilder getIdentificationPackOrBuilder() {
      return identificationPack_;
    }

    public static final int NEWREPORTDATA_FIELD_NUMBER = 4;
    private maxpb.MaxpbReport.ReportData newReportData_;
    /**
     * <code>optional .maxpb.ReportData newReportData = 4;</code>
     *
     * <pre>
     *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasNewReportData() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .maxpb.ReportData newReportData = 4;</code>
     *
     * <pre>
     *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.ReportData getNewReportData() {
      return newReportData_;
    }
    /**
     * <code>optional .maxpb.ReportData newReportData = 4;</code>
     *
     * <pre>
     *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.ReportDataOrBuilder getNewReportDataOrBuilder() {
      return newReportData_;
    }

    public static final int OLDREPORTDATA_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList oldReportData_;
    /**
     * <code>repeated string oldReportData = 5;</code>
     *
     * <pre>
     *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getOldReportDataList() {
      return oldReportData_;
    }
    /**
     * <code>repeated string oldReportData = 5;</code>
     *
     * <pre>
     *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public int getOldReportDataCount() {
      return oldReportData_.size();
    }
    /**
     * <code>repeated string oldReportData = 5;</code>
     *
     * <pre>
     *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public java.lang.String getOldReportData(int index) {
      return oldReportData_.get(index);
    }
    /**
     * <code>repeated string oldReportData = 5;</code>
     *
     * <pre>
     *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOldReportDataBytes(int index) {
      return oldReportData_.getByteString(index);
    }

    public static final int CUSTOMERDATA_FIELD_NUMBER = 128;
    private maxpb.MaxpbCustomerData.CustomerData customerData_;
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    public boolean hasCustomerData() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    public maxpb.MaxpbCustomerData.CustomerData getCustomerData() {
      return customerData_;
    }
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    public maxpb.MaxpbCustomerData.CustomerDataOrBuilder getCustomerDataOrBuilder() {
      return customerData_;
    }

    private void initFields() {
      deviceID_ = 0L;
      packetID_ = 0L;
      identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
      newReportData_ = maxpb.MaxpbReport.ReportData.getDefaultInstance();
      oldReportData_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      customerData_ = maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDeviceID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPacketID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasNewReportData()) {
        if (!getNewReportData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, deviceID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, packetID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, identificationPack_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, newReportData_);
      }
      for (int i = 0; i < oldReportData_.size(); i++) {
        output.writeBytes(5, oldReportData_.getByteString(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(128, customerData_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, deviceID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, packetID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, identificationPack_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, newReportData_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < oldReportData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(oldReportData_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getOldReportDataList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(128, customerData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbReport.MultipleReportDataOldCorrupted parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.MultipleReportDataOldCorrupted parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.MultipleReportDataOldCorrupted parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.MultipleReportDataOldCorrupted parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.MultipleReportDataOldCorrupted parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.MultipleReportDataOldCorrupted parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.MultipleReportDataOldCorrupted parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbReport.MultipleReportDataOldCorrupted parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.MultipleReportDataOldCorrupted parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.MultipleReportDataOldCorrupted parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbReport.MultipleReportDataOldCorrupted prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.MultipleReportDataOldCorrupted}
     *
     * <pre>
     *&#47;&#64;exclude
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.MultipleReportDataOldCorrupted)
        maxpb.MaxpbReport.MultipleReportDataOldCorruptedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbReport.internal_static_maxpb_MultipleReportDataOldCorrupted_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbReport.internal_static_maxpb_MultipleReportDataOldCorrupted_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbReport.MultipleReportDataOldCorrupted.class, maxpb.MaxpbReport.MultipleReportDataOldCorrupted.Builder.class);
      }

      // Construct using maxpb.MaxpbReport.MultipleReportDataOldCorrupted.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIdentificationPackFieldBuilder();
          getNewReportDataFieldBuilder();
          getCustomerDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        deviceID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        packetID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (identificationPackBuilder_ == null) {
          identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
        } else {
          identificationPackBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (newReportDataBuilder_ == null) {
          newReportData_ = maxpb.MaxpbReport.ReportData.getDefaultInstance();
        } else {
          newReportDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        oldReportData_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (customerDataBuilder_ == null) {
          customerData_ = maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance();
        } else {
          customerDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbReport.internal_static_maxpb_MultipleReportDataOldCorrupted_descriptor;
      }

      public maxpb.MaxpbReport.MultipleReportDataOldCorrupted getDefaultInstanceForType() {
        return maxpb.MaxpbReport.MultipleReportDataOldCorrupted.getDefaultInstance();
      }

      public maxpb.MaxpbReport.MultipleReportDataOldCorrupted build() {
        maxpb.MaxpbReport.MultipleReportDataOldCorrupted result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbReport.MultipleReportDataOldCorrupted buildPartial() {
        maxpb.MaxpbReport.MultipleReportDataOldCorrupted result = new maxpb.MaxpbReport.MultipleReportDataOldCorrupted(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deviceID_ = deviceID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.packetID_ = packetID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (identificationPackBuilder_ == null) {
          result.identificationPack_ = identificationPack_;
        } else {
          result.identificationPack_ = identificationPackBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (newReportDataBuilder_ == null) {
          result.newReportData_ = newReportData_;
        } else {
          result.newReportData_ = newReportDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          oldReportData_ = oldReportData_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.oldReportData_ = oldReportData_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        if (customerDataBuilder_ == null) {
          result.customerData_ = customerData_;
        } else {
          result.customerData_ = customerDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbReport.MultipleReportDataOldCorrupted) {
          return mergeFrom((maxpb.MaxpbReport.MultipleReportDataOldCorrupted)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbReport.MultipleReportDataOldCorrupted other) {
        if (other == maxpb.MaxpbReport.MultipleReportDataOldCorrupted.getDefaultInstance()) return this;
        if (other.hasDeviceID()) {
          setDeviceID(other.getDeviceID());
        }
        if (other.hasPacketID()) {
          setPacketID(other.getPacketID());
        }
        if (other.hasIdentificationPack()) {
          mergeIdentificationPack(other.getIdentificationPack());
        }
        if (other.hasNewReportData()) {
          mergeNewReportData(other.getNewReportData());
        }
        if (!other.oldReportData_.isEmpty()) {
          if (oldReportData_.isEmpty()) {
            oldReportData_ = other.oldReportData_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureOldReportDataIsMutable();
            oldReportData_.addAll(other.oldReportData_);
          }
          onChanged();
        }
        if (other.hasCustomerData()) {
          mergeCustomerData(other.getCustomerData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDeviceID()) {
          
          return false;
        }
        if (!hasPacketID()) {
          
          return false;
        }
        if (hasNewReportData()) {
          if (!getNewReportData().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbReport.MultipleReportDataOldCorrupted parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbReport.MultipleReportDataOldCorrupted) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long deviceID_ ;
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasDeviceID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public long getDeviceID() {
        return deviceID_;
      }
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setDeviceID(long value) {
        bitField0_ |= 0x00000001;
        deviceID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearDeviceID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceID_ = 0L;
        onChanged();
        return this;
      }

      private long packetID_ ;
      /**
       * <code>required uint64 packetID = 2;</code>
       *
       * <pre>
       *&#47; Random data generated by device to identify the Ack SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasPacketID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 packetID = 2;</code>
       *
       * <pre>
       *&#47; Random data generated by device to identify the Ack SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public long getPacketID() {
        return packetID_;
      }
      /**
       * <code>required uint64 packetID = 2;</code>
       *
       * <pre>
       *&#47; Random data generated by device to identify the Ack SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setPacketID(long value) {
        bitField0_ |= 0x00000002;
        packetID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 packetID = 2;</code>
       *
       * <pre>
       *&#47; Random data generated by device to identify the Ack SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearPacketID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        packetID_ = 0L;
        onChanged();
        return this;
      }

      private maxpb.MaxpbReport.IDPack identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.IDPack, maxpb.MaxpbReport.IDPack.Builder, maxpb.MaxpbReport.IDPackOrBuilder> identificationPackBuilder_;
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasIdentificationPack() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbReport.IDPack getIdentificationPack() {
        if (identificationPackBuilder_ == null) {
          return identificationPack_;
        } else {
          return identificationPackBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setIdentificationPack(maxpb.MaxpbReport.IDPack value) {
        if (identificationPackBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          identificationPack_ = value;
          onChanged();
        } else {
          identificationPackBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setIdentificationPack(
          maxpb.MaxpbReport.IDPack.Builder builderForValue) {
        if (identificationPackBuilder_ == null) {
          identificationPack_ = builderForValue.build();
          onChanged();
        } else {
          identificationPackBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder mergeIdentificationPack(maxpb.MaxpbReport.IDPack value) {
        if (identificationPackBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              identificationPack_ != maxpb.MaxpbReport.IDPack.getDefaultInstance()) {
            identificationPack_ =
              maxpb.MaxpbReport.IDPack.newBuilder(identificationPack_).mergeFrom(value).buildPartial();
          } else {
            identificationPack_ = value;
          }
          onChanged();
        } else {
          identificationPackBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearIdentificationPack() {
        if (identificationPackBuilder_ == null) {
          identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
          onChanged();
        } else {
          identificationPackBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbReport.IDPack.Builder getIdentificationPackBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getIdentificationPackFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbReport.IDPackOrBuilder getIdentificationPackOrBuilder() {
        if (identificationPackBuilder_ != null) {
          return identificationPackBuilder_.getMessageOrBuilder();
        } else {
          return identificationPack_;
        }
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.IDPack, maxpb.MaxpbReport.IDPack.Builder, maxpb.MaxpbReport.IDPackOrBuilder> 
          getIdentificationPackFieldBuilder() {
        if (identificationPackBuilder_ == null) {
          identificationPackBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbReport.IDPack, maxpb.MaxpbReport.IDPack.Builder, maxpb.MaxpbReport.IDPackOrBuilder>(
                  getIdentificationPack(),
                  getParentForChildren(),
                  isClean());
          identificationPack_ = null;
        }
        return identificationPackBuilder_;
      }

      private maxpb.MaxpbReport.ReportData newReportData_ = maxpb.MaxpbReport.ReportData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.ReportData, maxpb.MaxpbReport.ReportData.Builder, maxpb.MaxpbReport.ReportDataOrBuilder> newReportDataBuilder_;
      /**
       * <code>optional .maxpb.ReportData newReportData = 4;</code>
       *
       * <pre>
       *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasNewReportData() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .maxpb.ReportData newReportData = 4;</code>
       *
       * <pre>
       *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.ReportData getNewReportData() {
        if (newReportDataBuilder_ == null) {
          return newReportData_;
        } else {
          return newReportDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.ReportData newReportData = 4;</code>
       *
       * <pre>
       *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setNewReportData(maxpb.MaxpbReport.ReportData value) {
        if (newReportDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          newReportData_ = value;
          onChanged();
        } else {
          newReportDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .maxpb.ReportData newReportData = 4;</code>
       *
       * <pre>
       *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setNewReportData(
          maxpb.MaxpbReport.ReportData.Builder builderForValue) {
        if (newReportDataBuilder_ == null) {
          newReportData_ = builderForValue.build();
          onChanged();
        } else {
          newReportDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .maxpb.ReportData newReportData = 4;</code>
       *
       * <pre>
       *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder mergeNewReportData(maxpb.MaxpbReport.ReportData value) {
        if (newReportDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              newReportData_ != maxpb.MaxpbReport.ReportData.getDefaultInstance()) {
            newReportData_ =
              maxpb.MaxpbReport.ReportData.newBuilder(newReportData_).mergeFrom(value).buildPartial();
          } else {
            newReportData_ = value;
          }
          onChanged();
        } else {
          newReportDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .maxpb.ReportData newReportData = 4;</code>
       *
       * <pre>
       *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearNewReportData() {
        if (newReportDataBuilder_ == null) {
          newReportData_ = maxpb.MaxpbReport.ReportData.getDefaultInstance();
          onChanged();
        } else {
          newReportDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .maxpb.ReportData newReportData = 4;</code>
       *
       * <pre>
       *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.ReportData.Builder getNewReportDataBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getNewReportDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.ReportData newReportData = 4;</code>
       *
       * <pre>
       *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.ReportDataOrBuilder getNewReportDataOrBuilder() {
        if (newReportDataBuilder_ != null) {
          return newReportDataBuilder_.getMessageOrBuilder();
        } else {
          return newReportData_;
        }
      }
      /**
       * <code>optional .maxpb.ReportData newReportData = 4;</code>
       *
       * <pre>
       *&#47; Latest ReportData Generated SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.ReportData, maxpb.MaxpbReport.ReportData.Builder, maxpb.MaxpbReport.ReportDataOrBuilder> 
          getNewReportDataFieldBuilder() {
        if (newReportDataBuilder_ == null) {
          newReportDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbReport.ReportData, maxpb.MaxpbReport.ReportData.Builder, maxpb.MaxpbReport.ReportDataOrBuilder>(
                  getNewReportData(),
                  getParentForChildren(),
                  isClean());
          newReportData_ = null;
        }
        return newReportDataBuilder_;
      }

      private com.google.protobuf.LazyStringList oldReportData_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureOldReportDataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          oldReportData_ = new com.google.protobuf.LazyStringArrayList(oldReportData_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated string oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getOldReportDataList() {
        return oldReportData_.getUnmodifiableView();
      }
      /**
       * <code>repeated string oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public int getOldReportDataCount() {
        return oldReportData_.size();
      }
      /**
       * <code>repeated string oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public java.lang.String getOldReportData(int index) {
        return oldReportData_.get(index);
      }
      /**
       * <code>repeated string oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOldReportDataBytes(int index) {
        return oldReportData_.getByteString(index);
      }
      /**
       * <code>repeated string oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setOldReportData(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOldReportDataIsMutable();
        oldReportData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addOldReportData(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOldReportDataIsMutable();
        oldReportData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addAllOldReportData(
          java.lang.Iterable<java.lang.String> values) {
        ensureOldReportDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, oldReportData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearOldReportData() {
        oldReportData_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string oldReportData = 5;</code>
       *
       * <pre>
       *&#47; ReportData read from log SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addOldReportDataBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOldReportDataIsMutable();
        oldReportData_.add(value);
        onChanged();
        return this;
      }

      private maxpb.MaxpbCustomerData.CustomerData customerData_ = maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbCustomerData.CustomerData, maxpb.MaxpbCustomerData.CustomerData.Builder, maxpb.MaxpbCustomerData.CustomerDataOrBuilder> customerDataBuilder_;
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public boolean hasCustomerData() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbCustomerData.CustomerData getCustomerData() {
        if (customerDataBuilder_ == null) {
          return customerData_;
        } else {
          return customerDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public Builder setCustomerData(maxpb.MaxpbCustomerData.CustomerData value) {
        if (customerDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          customerData_ = value;
          onChanged();
        } else {
          customerDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public Builder setCustomerData(
          maxpb.MaxpbCustomerData.CustomerData.Builder builderForValue) {
        if (customerDataBuilder_ == null) {
          customerData_ = builderForValue.build();
          onChanged();
        } else {
          customerDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public Builder mergeCustomerData(maxpb.MaxpbCustomerData.CustomerData value) {
        if (customerDataBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              customerData_ != maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance()) {
            customerData_ =
              maxpb.MaxpbCustomerData.CustomerData.newBuilder(customerData_).mergeFrom(value).buildPartial();
          } else {
            customerData_ = value;
          }
          onChanged();
        } else {
          customerDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public Builder clearCustomerData() {
        if (customerDataBuilder_ == null) {
          customerData_ = maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance();
          onChanged();
        } else {
          customerDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbCustomerData.CustomerData.Builder getCustomerDataBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getCustomerDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbCustomerData.CustomerDataOrBuilder getCustomerDataOrBuilder() {
        if (customerDataBuilder_ != null) {
          return customerDataBuilder_.getMessageOrBuilder();
        } else {
          return customerData_;
        }
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbCustomerData.CustomerData, maxpb.MaxpbCustomerData.CustomerData.Builder, maxpb.MaxpbCustomerData.CustomerDataOrBuilder> 
          getCustomerDataFieldBuilder() {
        if (customerDataBuilder_ == null) {
          customerDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbCustomerData.CustomerData, maxpb.MaxpbCustomerData.CustomerData.Builder, maxpb.MaxpbCustomerData.CustomerDataOrBuilder>(
                  getCustomerData(),
                  getParentForChildren(),
                  isClean());
          customerData_ = null;
        }
        return customerDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.MultipleReportDataOldCorrupted)
    }

    static {
      defaultInstance = new MultipleReportDataOldCorrupted(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.MultipleReportDataOldCorrupted)
  }

  public interface AccessoryStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.AccessoryStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    boolean hasDeviceID();
    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    long getDeviceID();

    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasIdentificationPack();
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    maxpb.MaxpbReport.IDPack getIdentificationPack();
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    maxpb.MaxpbReport.IDPackOrBuilder getIdentificationPackOrBuilder();

    /**
     * <code>optional uint64 datetime = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160,    
     * </pre>
     */
    boolean hasDatetime();
    /**
     * <code>optional uint64 datetime = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160,    
     * </pre>
     */
    long getDatetime();

    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    java.util.List<maxpb.MaxpbFiletransfer.FileInfo> 
        getFilesList();
    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    maxpb.MaxpbFiletransfer.FileInfo getFiles(int index);
    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    int getFilesCount();
    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbFiletransfer.FileInfoOrBuilder> 
        getFilesOrBuilderList();
    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    maxpb.MaxpbFiletransfer.FileInfoOrBuilder getFilesOrBuilder(
        int index);

    /**
     * <code>optional uint32 boardRevision = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    boolean hasBoardRevision();
    /**
     * <code>optional uint32 boardRevision = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    int getBoardRevision();

    /**
     * <code>optional string macBT = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasMacBT();
    /**
     * <code>optional string macBT = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    java.lang.String getMacBT();
    /**
     * <code>optional string macBT = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    com.google.protobuf.ByteString
        getMacBTBytes();

    /**
     * <code>optional string macWIFI = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasMacWIFI();
    /**
     * <code>optional string macWIFI = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    java.lang.String getMacWIFI();
    /**
     * <code>optional string macWIFI = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    com.google.protobuf.ByteString
        getMacWIFIBytes();

    /**
     * <code>optional .maxpb.ResetReason lastResetReason = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    boolean hasLastResetReason();
    /**
     * <code>optional .maxpb.ResetReason lastResetReason = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    maxpb.MaxpbDebug.ResetReason getLastResetReason();

    /**
     * <code>optional bool passwordRequired = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasPasswordRequired();
    /**
     * <code>optional bool passwordRequired = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean getPasswordRequired();

    /**
     * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasVirtualIgnition();
    /**
     * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    maxpb.MaxpbGpio.VirtualIgnitionInfo getVirtualIgnition();
    /**
     * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    maxpb.MaxpbGpio.VirtualIgnitionInfoOrBuilder getVirtualIgnitionOrBuilder();

    /**
     * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasDiagnostic();
    /**
     * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbDebug.DiagnosticPacket getDiagnostic();
    /**
     * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbDebug.DiagnosticPacketOrBuilder getDiagnosticOrBuilder();

    /**
     * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
     * </pre>
     */
    boolean hasVehicleSignature();
    /**
     * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
     * </pre>
     */
    maxpb.MaxpbIoexpander.VehicleSignature getVehicleSignature();
    /**
     * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
     * </pre>
     */
    maxpb.MaxpbIoexpander.VehicleSignatureOrBuilder getVehicleSignatureOrBuilder();

    /**
     * <code>optional .maxpb.ProductModel product = 19;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40, MAXIO
     * </pre>
     */
    boolean hasProduct();
    /**
     * <code>optional .maxpb.ProductModel product = 19;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40, MAXIO
     * </pre>
     */
    maxpb.MaxpbAccessories.ProductModel getProduct();
  }
  /**
   * Protobuf type {@code maxpb.AccessoryStatus}
   */
  public static final class AccessoryStatus extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.AccessoryStatus)
      AccessoryStatusOrBuilder {
    // Use AccessoryStatus.newBuilder() to construct.
    private AccessoryStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AccessoryStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AccessoryStatus defaultInstance;
    public static AccessoryStatus getDefaultInstance() {
      return defaultInstance;
    }

    public AccessoryStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AccessoryStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              deviceID_ = input.readUInt64();
              break;
            }
            case 26: {
              maxpb.MaxpbReport.IDPack.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = identificationPack_.toBuilder();
              }
              identificationPack_ = input.readMessage(maxpb.MaxpbReport.IDPack.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(identificationPack_);
                identificationPack_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              datetime_ = input.readUInt64();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                files_ = new java.util.ArrayList<maxpb.MaxpbFiletransfer.FileInfo>();
                mutable_bitField0_ |= 0x00000008;
              }
              files_.add(input.readMessage(maxpb.MaxpbFiletransfer.FileInfo.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              boardRevision_ = input.readUInt32();
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              macBT_ = bs;
              break;
            }
            case 90: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              macWIFI_ = bs;
              break;
            }
            case 96: {
              int rawValue = input.readEnum();
              maxpb.MaxpbDebug.ResetReason value = maxpb.MaxpbDebug.ResetReason.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(12, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                lastResetReason_ = value;
              }
              break;
            }
            case 104: {
              bitField0_ |= 0x00000080;
              passwordRequired_ = input.readBool();
              break;
            }
            case 114: {
              maxpb.MaxpbGpio.VirtualIgnitionInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = virtualIgnition_.toBuilder();
              }
              virtualIgnition_ = input.readMessage(maxpb.MaxpbGpio.VirtualIgnitionInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(virtualIgnition_);
                virtualIgnition_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 122: {
              maxpb.MaxpbDebug.DiagnosticPacket.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = diagnostic_.toBuilder();
              }
              diagnostic_ = input.readMessage(maxpb.MaxpbDebug.DiagnosticPacket.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(diagnostic_);
                diagnostic_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 146: {
              maxpb.MaxpbIoexpander.VehicleSignature.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = vehicleSignature_.toBuilder();
              }
              vehicleSignature_ = input.readMessage(maxpb.MaxpbIoexpander.VehicleSignature.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(vehicleSignature_);
                vehicleSignature_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 152: {
              int rawValue = input.readEnum();
              maxpb.MaxpbAccessories.ProductModel value = maxpb.MaxpbAccessories.ProductModel.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(19, rawValue);
              } else {
                bitField0_ |= 0x00000800;
                product_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          files_ = java.util.Collections.unmodifiableList(files_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbReport.internal_static_maxpb_AccessoryStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbReport.internal_static_maxpb_AccessoryStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbReport.AccessoryStatus.class, maxpb.MaxpbReport.AccessoryStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<AccessoryStatus> PARSER =
        new com.google.protobuf.AbstractParser<AccessoryStatus>() {
      public AccessoryStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AccessoryStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AccessoryStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DEVICEID_FIELD_NUMBER = 1;
    private long deviceID_;
    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    public boolean hasDeviceID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    public long getDeviceID() {
      return deviceID_;
    }

    public static final int IDENTIFICATIONPACK_FIELD_NUMBER = 3;
    private maxpb.MaxpbReport.IDPack identificationPack_;
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasIdentificationPack() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public maxpb.MaxpbReport.IDPack getIdentificationPack() {
      return identificationPack_;
    }
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public maxpb.MaxpbReport.IDPackOrBuilder getIdentificationPackOrBuilder() {
      return identificationPack_;
    }

    public static final int DATETIME_FIELD_NUMBER = 4;
    private long datetime_;
    /**
     * <code>optional uint64 datetime = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160,    
     * </pre>
     */
    public boolean hasDatetime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 datetime = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160,    
     * </pre>
     */
    public long getDatetime() {
      return datetime_;
    }

    public static final int FILES_FIELD_NUMBER = 5;
    private java.util.List<maxpb.MaxpbFiletransfer.FileInfo> files_;
    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    public java.util.List<maxpb.MaxpbFiletransfer.FileInfo> getFilesList() {
      return files_;
    }
    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbFiletransfer.FileInfoOrBuilder> 
        getFilesOrBuilderList() {
      return files_;
    }
    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    public int getFilesCount() {
      return files_.size();
    }
    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    public maxpb.MaxpbFiletransfer.FileInfo getFiles(int index) {
      return files_.get(index);
    }
    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    public maxpb.MaxpbFiletransfer.FileInfoOrBuilder getFilesOrBuilder(
        int index) {
      return files_.get(index);
    }

    public static final int BOARDREVISION_FIELD_NUMBER = 7;
    private int boardRevision_;
    /**
     * <code>optional uint32 boardRevision = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    public boolean hasBoardRevision() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 boardRevision = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    public int getBoardRevision() {
      return boardRevision_;
    }

    public static final int MACBT_FIELD_NUMBER = 10;
    private java.lang.Object macBT_;
    /**
     * <code>optional string macBT = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasMacBT() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string macBT = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public java.lang.String getMacBT() {
      java.lang.Object ref = macBT_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          macBT_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string macBT = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMacBTBytes() {
      java.lang.Object ref = macBT_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        macBT_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MACWIFI_FIELD_NUMBER = 11;
    private java.lang.Object macWIFI_;
    /**
     * <code>optional string macWIFI = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasMacWIFI() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string macWIFI = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public java.lang.String getMacWIFI() {
      java.lang.Object ref = macWIFI_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          macWIFI_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string macWIFI = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMacWIFIBytes() {
      java.lang.Object ref = macWIFI_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        macWIFI_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LASTRESETREASON_FIELD_NUMBER = 12;
    private maxpb.MaxpbDebug.ResetReason lastResetReason_;
    /**
     * <code>optional .maxpb.ResetReason lastResetReason = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    public boolean hasLastResetReason() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .maxpb.ResetReason lastResetReason = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    public maxpb.MaxpbDebug.ResetReason getLastResetReason() {
      return lastResetReason_;
    }

    public static final int PASSWORDREQUIRED_FIELD_NUMBER = 13;
    private boolean passwordRequired_;
    /**
     * <code>optional bool passwordRequired = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasPasswordRequired() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool passwordRequired = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean getPasswordRequired() {
      return passwordRequired_;
    }

    public static final int VIRTUALIGNITION_FIELD_NUMBER = 14;
    private maxpb.MaxpbGpio.VirtualIgnitionInfo virtualIgnition_;
    /**
     * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasVirtualIgnition() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public maxpb.MaxpbGpio.VirtualIgnitionInfo getVirtualIgnition() {
      return virtualIgnition_;
    }
    /**
     * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public maxpb.MaxpbGpio.VirtualIgnitionInfoOrBuilder getVirtualIgnitionOrBuilder() {
      return virtualIgnition_;
    }

    public static final int DIAGNOSTIC_FIELD_NUMBER = 15;
    private maxpb.MaxpbDebug.DiagnosticPacket diagnostic_;
    /**
     * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasDiagnostic() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbDebug.DiagnosticPacket getDiagnostic() {
      return diagnostic_;
    }
    /**
     * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbDebug.DiagnosticPacketOrBuilder getDiagnosticOrBuilder() {
      return diagnostic_;
    }

    public static final int VEHICLESIGNATURE_FIELD_NUMBER = 18;
    private maxpb.MaxpbIoexpander.VehicleSignature vehicleSignature_;
    /**
     * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
     * </pre>
     */
    public boolean hasVehicleSignature() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
     * </pre>
     */
    public maxpb.MaxpbIoexpander.VehicleSignature getVehicleSignature() {
      return vehicleSignature_;
    }
    /**
     * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
     * </pre>
     */
    public maxpb.MaxpbIoexpander.VehicleSignatureOrBuilder getVehicleSignatureOrBuilder() {
      return vehicleSignature_;
    }

    public static final int PRODUCT_FIELD_NUMBER = 19;
    private maxpb.MaxpbAccessories.ProductModel product_;
    /**
     * <code>optional .maxpb.ProductModel product = 19;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40, MAXIO
     * </pre>
     */
    public boolean hasProduct() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .maxpb.ProductModel product = 19;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40, MAXIO
     * </pre>
     */
    public maxpb.MaxpbAccessories.ProductModel getProduct() {
      return product_;
    }

    private void initFields() {
      deviceID_ = 0L;
      identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
      datetime_ = 0L;
      files_ = java.util.Collections.emptyList();
      boardRevision_ = 0;
      macBT_ = "";
      macWIFI_ = "";
      lastResetReason_ = maxpb.MaxpbDebug.ResetReason.RSTR_POWER_ON;
      passwordRequired_ = false;
      virtualIgnition_ = maxpb.MaxpbGpio.VirtualIgnitionInfo.getDefaultInstance();
      diagnostic_ = maxpb.MaxpbDebug.DiagnosticPacket.getDefaultInstance();
      vehicleSignature_ = maxpb.MaxpbIoexpander.VehicleSignature.getDefaultInstance();
      product_ = maxpb.MaxpbAccessories.ProductModel.DT_NONE;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDeviceID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFilesCount(); i++) {
        if (!getFiles(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasVirtualIgnition()) {
        if (!getVirtualIgnition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, deviceID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, identificationPack_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(4, datetime_);
      }
      for (int i = 0; i < files_.size(); i++) {
        output.writeMessage(5, files_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(7, boardRevision_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(10, getMacBTBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(11, getMacWIFIBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(12, lastResetReason_.getNumber());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(13, passwordRequired_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(14, virtualIgnition_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(15, diagnostic_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(18, vehicleSignature_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeEnum(19, product_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, deviceID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, identificationPack_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, datetime_);
      }
      for (int i = 0; i < files_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, files_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, boardRevision_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getMacBTBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getMacWIFIBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, lastResetReason_.getNumber());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, passwordRequired_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, virtualIgnition_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, diagnostic_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, vehicleSignature_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(19, product_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbReport.AccessoryStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.AccessoryStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.AccessoryStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.AccessoryStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.AccessoryStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.AccessoryStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.AccessoryStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbReport.AccessoryStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.AccessoryStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.AccessoryStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbReport.AccessoryStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.AccessoryStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.AccessoryStatus)
        maxpb.MaxpbReport.AccessoryStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbReport.internal_static_maxpb_AccessoryStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbReport.internal_static_maxpb_AccessoryStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbReport.AccessoryStatus.class, maxpb.MaxpbReport.AccessoryStatus.Builder.class);
      }

      // Construct using maxpb.MaxpbReport.AccessoryStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIdentificationPackFieldBuilder();
          getFilesFieldBuilder();
          getVirtualIgnitionFieldBuilder();
          getDiagnosticFieldBuilder();
          getVehicleSignatureFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        deviceID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (identificationPackBuilder_ == null) {
          identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
        } else {
          identificationPackBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        datetime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (filesBuilder_ == null) {
          files_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          filesBuilder_.clear();
        }
        boardRevision_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        macBT_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        macWIFI_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        lastResetReason_ = maxpb.MaxpbDebug.ResetReason.RSTR_POWER_ON;
        bitField0_ = (bitField0_ & ~0x00000080);
        passwordRequired_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (virtualIgnitionBuilder_ == null) {
          virtualIgnition_ = maxpb.MaxpbGpio.VirtualIgnitionInfo.getDefaultInstance();
        } else {
          virtualIgnitionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (diagnosticBuilder_ == null) {
          diagnostic_ = maxpb.MaxpbDebug.DiagnosticPacket.getDefaultInstance();
        } else {
          diagnosticBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (vehicleSignatureBuilder_ == null) {
          vehicleSignature_ = maxpb.MaxpbIoexpander.VehicleSignature.getDefaultInstance();
        } else {
          vehicleSignatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        product_ = maxpb.MaxpbAccessories.ProductModel.DT_NONE;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbReport.internal_static_maxpb_AccessoryStatus_descriptor;
      }

      public maxpb.MaxpbReport.AccessoryStatus getDefaultInstanceForType() {
        return maxpb.MaxpbReport.AccessoryStatus.getDefaultInstance();
      }

      public maxpb.MaxpbReport.AccessoryStatus build() {
        maxpb.MaxpbReport.AccessoryStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbReport.AccessoryStatus buildPartial() {
        maxpb.MaxpbReport.AccessoryStatus result = new maxpb.MaxpbReport.AccessoryStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deviceID_ = deviceID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (identificationPackBuilder_ == null) {
          result.identificationPack_ = identificationPack_;
        } else {
          result.identificationPack_ = identificationPackBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.datetime_ = datetime_;
        if (filesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            files_ = java.util.Collections.unmodifiableList(files_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.files_ = files_;
        } else {
          result.files_ = filesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.boardRevision_ = boardRevision_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.macBT_ = macBT_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.macWIFI_ = macWIFI_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.lastResetReason_ = lastResetReason_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.passwordRequired_ = passwordRequired_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        if (virtualIgnitionBuilder_ == null) {
          result.virtualIgnition_ = virtualIgnition_;
        } else {
          result.virtualIgnition_ = virtualIgnitionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        if (diagnosticBuilder_ == null) {
          result.diagnostic_ = diagnostic_;
        } else {
          result.diagnostic_ = diagnosticBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        if (vehicleSignatureBuilder_ == null) {
          result.vehicleSignature_ = vehicleSignature_;
        } else {
          result.vehicleSignature_ = vehicleSignatureBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.product_ = product_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbReport.AccessoryStatus) {
          return mergeFrom((maxpb.MaxpbReport.AccessoryStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbReport.AccessoryStatus other) {
        if (other == maxpb.MaxpbReport.AccessoryStatus.getDefaultInstance()) return this;
        if (other.hasDeviceID()) {
          setDeviceID(other.getDeviceID());
        }
        if (other.hasIdentificationPack()) {
          mergeIdentificationPack(other.getIdentificationPack());
        }
        if (other.hasDatetime()) {
          setDatetime(other.getDatetime());
        }
        if (filesBuilder_ == null) {
          if (!other.files_.isEmpty()) {
            if (files_.isEmpty()) {
              files_ = other.files_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureFilesIsMutable();
              files_.addAll(other.files_);
            }
            onChanged();
          }
        } else {
          if (!other.files_.isEmpty()) {
            if (filesBuilder_.isEmpty()) {
              filesBuilder_.dispose();
              filesBuilder_ = null;
              files_ = other.files_;
              bitField0_ = (bitField0_ & ~0x00000008);
              filesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFilesFieldBuilder() : null;
            } else {
              filesBuilder_.addAllMessages(other.files_);
            }
          }
        }
        if (other.hasBoardRevision()) {
          setBoardRevision(other.getBoardRevision());
        }
        if (other.hasMacBT()) {
          bitField0_ |= 0x00000020;
          macBT_ = other.macBT_;
          onChanged();
        }
        if (other.hasMacWIFI()) {
          bitField0_ |= 0x00000040;
          macWIFI_ = other.macWIFI_;
          onChanged();
        }
        if (other.hasLastResetReason()) {
          setLastResetReason(other.getLastResetReason());
        }
        if (other.hasPasswordRequired()) {
          setPasswordRequired(other.getPasswordRequired());
        }
        if (other.hasVirtualIgnition()) {
          mergeVirtualIgnition(other.getVirtualIgnition());
        }
        if (other.hasDiagnostic()) {
          mergeDiagnostic(other.getDiagnostic());
        }
        if (other.hasVehicleSignature()) {
          mergeVehicleSignature(other.getVehicleSignature());
        }
        if (other.hasProduct()) {
          setProduct(other.getProduct());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDeviceID()) {
          
          return false;
        }
        for (int i = 0; i < getFilesCount(); i++) {
          if (!getFiles(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasVirtualIgnition()) {
          if (!getVirtualIgnition().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbReport.AccessoryStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbReport.AccessoryStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long deviceID_ ;
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public boolean hasDeviceID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public long getDeviceID() {
        return deviceID_;
      }
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder setDeviceID(long value) {
        bitField0_ |= 0x00000001;
        deviceID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder clearDeviceID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceID_ = 0L;
        onChanged();
        return this;
      }

      private maxpb.MaxpbReport.IDPack identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.IDPack, maxpb.MaxpbReport.IDPack.Builder, maxpb.MaxpbReport.IDPackOrBuilder> identificationPackBuilder_;
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasIdentificationPack() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public maxpb.MaxpbReport.IDPack getIdentificationPack() {
        if (identificationPackBuilder_ == null) {
          return identificationPack_;
        } else {
          return identificationPackBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setIdentificationPack(maxpb.MaxpbReport.IDPack value) {
        if (identificationPackBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          identificationPack_ = value;
          onChanged();
        } else {
          identificationPackBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setIdentificationPack(
          maxpb.MaxpbReport.IDPack.Builder builderForValue) {
        if (identificationPackBuilder_ == null) {
          identificationPack_ = builderForValue.build();
          onChanged();
        } else {
          identificationPackBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder mergeIdentificationPack(maxpb.MaxpbReport.IDPack value) {
        if (identificationPackBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              identificationPack_ != maxpb.MaxpbReport.IDPack.getDefaultInstance()) {
            identificationPack_ =
              maxpb.MaxpbReport.IDPack.newBuilder(identificationPack_).mergeFrom(value).buildPartial();
          } else {
            identificationPack_ = value;
          }
          onChanged();
        } else {
          identificationPackBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearIdentificationPack() {
        if (identificationPackBuilder_ == null) {
          identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
          onChanged();
        } else {
          identificationPackBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public maxpb.MaxpbReport.IDPack.Builder getIdentificationPackBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getIdentificationPackFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public maxpb.MaxpbReport.IDPackOrBuilder getIdentificationPackOrBuilder() {
        if (identificationPackBuilder_ != null) {
          return identificationPackBuilder_.getMessageOrBuilder();
        } else {
          return identificationPack_;
        }
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.IDPack, maxpb.MaxpbReport.IDPack.Builder, maxpb.MaxpbReport.IDPackOrBuilder> 
          getIdentificationPackFieldBuilder() {
        if (identificationPackBuilder_ == null) {
          identificationPackBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbReport.IDPack, maxpb.MaxpbReport.IDPack.Builder, maxpb.MaxpbReport.IDPackOrBuilder>(
                  getIdentificationPack(),
                  getParentForChildren(),
                  isClean());
          identificationPack_ = null;
        }
        return identificationPackBuilder_;
      }

      private long datetime_ ;
      /**
       * <code>optional uint64 datetime = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160,    
       * </pre>
       */
      public boolean hasDatetime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 datetime = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160,    
       * </pre>
       */
      public long getDatetime() {
        return datetime_;
      }
      /**
       * <code>optional uint64 datetime = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160,    
       * </pre>
       */
      public Builder setDatetime(long value) {
        bitField0_ |= 0x00000004;
        datetime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 datetime = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160,    
       * </pre>
       */
      public Builder clearDatetime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        datetime_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<maxpb.MaxpbFiletransfer.FileInfo> files_ =
        java.util.Collections.emptyList();
      private void ensureFilesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          files_ = new java.util.ArrayList<maxpb.MaxpbFiletransfer.FileInfo>(files_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbFiletransfer.FileInfo, maxpb.MaxpbFiletransfer.FileInfo.Builder, maxpb.MaxpbFiletransfer.FileInfoOrBuilder> filesBuilder_;

      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public java.util.List<maxpb.MaxpbFiletransfer.FileInfo> getFilesList() {
        if (filesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(files_);
        } else {
          return filesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public int getFilesCount() {
        if (filesBuilder_ == null) {
          return files_.size();
        } else {
          return filesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public maxpb.MaxpbFiletransfer.FileInfo getFiles(int index) {
        if (filesBuilder_ == null) {
          return files_.get(index);
        } else {
          return filesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder setFiles(
          int index, maxpb.MaxpbFiletransfer.FileInfo value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.set(index, value);
          onChanged();
        } else {
          filesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder setFiles(
          int index, maxpb.MaxpbFiletransfer.FileInfo.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.set(index, builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder addFiles(maxpb.MaxpbFiletransfer.FileInfo value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.add(value);
          onChanged();
        } else {
          filesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder addFiles(
          int index, maxpb.MaxpbFiletransfer.FileInfo value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.add(index, value);
          onChanged();
        } else {
          filesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder addFiles(
          maxpb.MaxpbFiletransfer.FileInfo.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.add(builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder addFiles(
          int index, maxpb.MaxpbFiletransfer.FileInfo.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.add(index, builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder addAllFiles(
          java.lang.Iterable<? extends maxpb.MaxpbFiletransfer.FileInfo> values) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, files_);
          onChanged();
        } else {
          filesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder clearFiles() {
        if (filesBuilder_ == null) {
          files_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          filesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder removeFiles(int index) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.remove(index);
          onChanged();
        } else {
          filesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public maxpb.MaxpbFiletransfer.FileInfo.Builder getFilesBuilder(
          int index) {
        return getFilesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public maxpb.MaxpbFiletransfer.FileInfoOrBuilder getFilesOrBuilder(
          int index) {
        if (filesBuilder_ == null) {
          return files_.get(index);  } else {
          return filesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbFiletransfer.FileInfoOrBuilder> 
           getFilesOrBuilderList() {
        if (filesBuilder_ != null) {
          return filesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(files_);
        }
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public maxpb.MaxpbFiletransfer.FileInfo.Builder addFilesBuilder() {
        return getFilesFieldBuilder().addBuilder(
            maxpb.MaxpbFiletransfer.FileInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public maxpb.MaxpbFiletransfer.FileInfo.Builder addFilesBuilder(
          int index) {
        return getFilesFieldBuilder().addBuilder(
            index, maxpb.MaxpbFiletransfer.FileInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public java.util.List<maxpb.MaxpbFiletransfer.FileInfo.Builder> 
           getFilesBuilderList() {
        return getFilesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbFiletransfer.FileInfo, maxpb.MaxpbFiletransfer.FileInfo.Builder, maxpb.MaxpbFiletransfer.FileInfoOrBuilder> 
          getFilesFieldBuilder() {
        if (filesBuilder_ == null) {
          filesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbFiletransfer.FileInfo, maxpb.MaxpbFiletransfer.FileInfo.Builder, maxpb.MaxpbFiletransfer.FileInfoOrBuilder>(
                  files_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          files_ = null;
        }
        return filesBuilder_;
      }

      private int boardRevision_ ;
      /**
       * <code>optional uint32 boardRevision = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public boolean hasBoardRevision() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 boardRevision = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public int getBoardRevision() {
        return boardRevision_;
      }
      /**
       * <code>optional uint32 boardRevision = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder setBoardRevision(int value) {
        bitField0_ |= 0x00000010;
        boardRevision_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 boardRevision = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder clearBoardRevision() {
        bitField0_ = (bitField0_ & ~0x00000010);
        boardRevision_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object macBT_ = "";
      /**
       * <code>optional string macBT = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasMacBT() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string macBT = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public java.lang.String getMacBT() {
        java.lang.Object ref = macBT_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            macBT_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string macBT = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMacBTBytes() {
        java.lang.Object ref = macBT_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          macBT_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string macBT = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setMacBT(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        macBT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string macBT = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearMacBT() {
        bitField0_ = (bitField0_ & ~0x00000020);
        macBT_ = getDefaultInstance().getMacBT();
        onChanged();
        return this;
      }
      /**
       * <code>optional string macBT = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setMacBTBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        macBT_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object macWIFI_ = "";
      /**
       * <code>optional string macWIFI = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasMacWIFI() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string macWIFI = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public java.lang.String getMacWIFI() {
        java.lang.Object ref = macWIFI_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            macWIFI_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string macWIFI = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMacWIFIBytes() {
        java.lang.Object ref = macWIFI_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          macWIFI_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string macWIFI = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setMacWIFI(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        macWIFI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string macWIFI = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearMacWIFI() {
        bitField0_ = (bitField0_ & ~0x00000040);
        macWIFI_ = getDefaultInstance().getMacWIFI();
        onChanged();
        return this;
      }
      /**
       * <code>optional string macWIFI = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setMacWIFIBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        macWIFI_ = value;
        onChanged();
        return this;
      }

      private maxpb.MaxpbDebug.ResetReason lastResetReason_ = maxpb.MaxpbDebug.ResetReason.RSTR_POWER_ON;
      /**
       * <code>optional .maxpb.ResetReason lastResetReason = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public boolean hasLastResetReason() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .maxpb.ResetReason lastResetReason = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public maxpb.MaxpbDebug.ResetReason getLastResetReason() {
        return lastResetReason_;
      }
      /**
       * <code>optional .maxpb.ResetReason lastResetReason = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder setLastResetReason(maxpb.MaxpbDebug.ResetReason value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        lastResetReason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.ResetReason lastResetReason = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder clearLastResetReason() {
        bitField0_ = (bitField0_ & ~0x00000080);
        lastResetReason_ = maxpb.MaxpbDebug.ResetReason.RSTR_POWER_ON;
        onChanged();
        return this;
      }

      private boolean passwordRequired_ ;
      /**
       * <code>optional bool passwordRequired = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasPasswordRequired() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool passwordRequired = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean getPasswordRequired() {
        return passwordRequired_;
      }
      /**
       * <code>optional bool passwordRequired = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setPasswordRequired(boolean value) {
        bitField0_ |= 0x00000100;
        passwordRequired_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool passwordRequired = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearPasswordRequired() {
        bitField0_ = (bitField0_ & ~0x00000100);
        passwordRequired_ = false;
        onChanged();
        return this;
      }

      private maxpb.MaxpbGpio.VirtualIgnitionInfo virtualIgnition_ = maxpb.MaxpbGpio.VirtualIgnitionInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbGpio.VirtualIgnitionInfo, maxpb.MaxpbGpio.VirtualIgnitionInfo.Builder, maxpb.MaxpbGpio.VirtualIgnitionInfoOrBuilder> virtualIgnitionBuilder_;
      /**
       * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasVirtualIgnition() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public maxpb.MaxpbGpio.VirtualIgnitionInfo getVirtualIgnition() {
        if (virtualIgnitionBuilder_ == null) {
          return virtualIgnition_;
        } else {
          return virtualIgnitionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setVirtualIgnition(maxpb.MaxpbGpio.VirtualIgnitionInfo value) {
        if (virtualIgnitionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          virtualIgnition_ = value;
          onChanged();
        } else {
          virtualIgnitionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setVirtualIgnition(
          maxpb.MaxpbGpio.VirtualIgnitionInfo.Builder builderForValue) {
        if (virtualIgnitionBuilder_ == null) {
          virtualIgnition_ = builderForValue.build();
          onChanged();
        } else {
          virtualIgnitionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder mergeVirtualIgnition(maxpb.MaxpbGpio.VirtualIgnitionInfo value) {
        if (virtualIgnitionBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              virtualIgnition_ != maxpb.MaxpbGpio.VirtualIgnitionInfo.getDefaultInstance()) {
            virtualIgnition_ =
              maxpb.MaxpbGpio.VirtualIgnitionInfo.newBuilder(virtualIgnition_).mergeFrom(value).buildPartial();
          } else {
            virtualIgnition_ = value;
          }
          onChanged();
        } else {
          virtualIgnitionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearVirtualIgnition() {
        if (virtualIgnitionBuilder_ == null) {
          virtualIgnition_ = maxpb.MaxpbGpio.VirtualIgnitionInfo.getDefaultInstance();
          onChanged();
        } else {
          virtualIgnitionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public maxpb.MaxpbGpio.VirtualIgnitionInfo.Builder getVirtualIgnitionBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getVirtualIgnitionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public maxpb.MaxpbGpio.VirtualIgnitionInfoOrBuilder getVirtualIgnitionOrBuilder() {
        if (virtualIgnitionBuilder_ != null) {
          return virtualIgnitionBuilder_.getMessageOrBuilder();
        } else {
          return virtualIgnition_;
        }
      }
      /**
       * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbGpio.VirtualIgnitionInfo, maxpb.MaxpbGpio.VirtualIgnitionInfo.Builder, maxpb.MaxpbGpio.VirtualIgnitionInfoOrBuilder> 
          getVirtualIgnitionFieldBuilder() {
        if (virtualIgnitionBuilder_ == null) {
          virtualIgnitionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbGpio.VirtualIgnitionInfo, maxpb.MaxpbGpio.VirtualIgnitionInfo.Builder, maxpb.MaxpbGpio.VirtualIgnitionInfoOrBuilder>(
                  getVirtualIgnition(),
                  getParentForChildren(),
                  isClean());
          virtualIgnition_ = null;
        }
        return virtualIgnitionBuilder_;
      }

      private maxpb.MaxpbDebug.DiagnosticPacket diagnostic_ = maxpb.MaxpbDebug.DiagnosticPacket.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbDebug.DiagnosticPacket, maxpb.MaxpbDebug.DiagnosticPacket.Builder, maxpb.MaxpbDebug.DiagnosticPacketOrBuilder> diagnosticBuilder_;
      /**
       * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasDiagnostic() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbDebug.DiagnosticPacket getDiagnostic() {
        if (diagnosticBuilder_ == null) {
          return diagnostic_;
        } else {
          return diagnosticBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setDiagnostic(maxpb.MaxpbDebug.DiagnosticPacket value) {
        if (diagnosticBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          diagnostic_ = value;
          onChanged();
        } else {
          diagnosticBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setDiagnostic(
          maxpb.MaxpbDebug.DiagnosticPacket.Builder builderForValue) {
        if (diagnosticBuilder_ == null) {
          diagnostic_ = builderForValue.build();
          onChanged();
        } else {
          diagnosticBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder mergeDiagnostic(maxpb.MaxpbDebug.DiagnosticPacket value) {
        if (diagnosticBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              diagnostic_ != maxpb.MaxpbDebug.DiagnosticPacket.getDefaultInstance()) {
            diagnostic_ =
              maxpb.MaxpbDebug.DiagnosticPacket.newBuilder(diagnostic_).mergeFrom(value).buildPartial();
          } else {
            diagnostic_ = value;
          }
          onChanged();
        } else {
          diagnosticBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearDiagnostic() {
        if (diagnosticBuilder_ == null) {
          diagnostic_ = maxpb.MaxpbDebug.DiagnosticPacket.getDefaultInstance();
          onChanged();
        } else {
          diagnosticBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbDebug.DiagnosticPacket.Builder getDiagnosticBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getDiagnosticFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbDebug.DiagnosticPacketOrBuilder getDiagnosticOrBuilder() {
        if (diagnosticBuilder_ != null) {
          return diagnosticBuilder_.getMessageOrBuilder();
        } else {
          return diagnostic_;
        }
      }
      /**
       * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbDebug.DiagnosticPacket, maxpb.MaxpbDebug.DiagnosticPacket.Builder, maxpb.MaxpbDebug.DiagnosticPacketOrBuilder> 
          getDiagnosticFieldBuilder() {
        if (diagnosticBuilder_ == null) {
          diagnosticBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbDebug.DiagnosticPacket, maxpb.MaxpbDebug.DiagnosticPacket.Builder, maxpb.MaxpbDebug.DiagnosticPacketOrBuilder>(
                  getDiagnostic(),
                  getParentForChildren(),
                  isClean());
          diagnostic_ = null;
        }
        return diagnosticBuilder_;
      }

      private maxpb.MaxpbIoexpander.VehicleSignature vehicleSignature_ = maxpb.MaxpbIoexpander.VehicleSignature.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbIoexpander.VehicleSignature, maxpb.MaxpbIoexpander.VehicleSignature.Builder, maxpb.MaxpbIoexpander.VehicleSignatureOrBuilder> vehicleSignatureBuilder_;
      /**
       * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public boolean hasVehicleSignature() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public maxpb.MaxpbIoexpander.VehicleSignature getVehicleSignature() {
        if (vehicleSignatureBuilder_ == null) {
          return vehicleSignature_;
        } else {
          return vehicleSignatureBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public Builder setVehicleSignature(maxpb.MaxpbIoexpander.VehicleSignature value) {
        if (vehicleSignatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vehicleSignature_ = value;
          onChanged();
        } else {
          vehicleSignatureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public Builder setVehicleSignature(
          maxpb.MaxpbIoexpander.VehicleSignature.Builder builderForValue) {
        if (vehicleSignatureBuilder_ == null) {
          vehicleSignature_ = builderForValue.build();
          onChanged();
        } else {
          vehicleSignatureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public Builder mergeVehicleSignature(maxpb.MaxpbIoexpander.VehicleSignature value) {
        if (vehicleSignatureBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              vehicleSignature_ != maxpb.MaxpbIoexpander.VehicleSignature.getDefaultInstance()) {
            vehicleSignature_ =
              maxpb.MaxpbIoexpander.VehicleSignature.newBuilder(vehicleSignature_).mergeFrom(value).buildPartial();
          } else {
            vehicleSignature_ = value;
          }
          onChanged();
        } else {
          vehicleSignatureBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public Builder clearVehicleSignature() {
        if (vehicleSignatureBuilder_ == null) {
          vehicleSignature_ = maxpb.MaxpbIoexpander.VehicleSignature.getDefaultInstance();
          onChanged();
        } else {
          vehicleSignatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public maxpb.MaxpbIoexpander.VehicleSignature.Builder getVehicleSignatureBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getVehicleSignatureFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public maxpb.MaxpbIoexpander.VehicleSignatureOrBuilder getVehicleSignatureOrBuilder() {
        if (vehicleSignatureBuilder_ != null) {
          return vehicleSignatureBuilder_.getMessageOrBuilder();
        } else {
          return vehicleSignature_;
        }
      }
      /**
       * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbIoexpander.VehicleSignature, maxpb.MaxpbIoexpander.VehicleSignature.Builder, maxpb.MaxpbIoexpander.VehicleSignatureOrBuilder> 
          getVehicleSignatureFieldBuilder() {
        if (vehicleSignatureBuilder_ == null) {
          vehicleSignatureBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbIoexpander.VehicleSignature, maxpb.MaxpbIoexpander.VehicleSignature.Builder, maxpb.MaxpbIoexpander.VehicleSignatureOrBuilder>(
                  getVehicleSignature(),
                  getParentForChildren(),
                  isClean());
          vehicleSignature_ = null;
        }
        return vehicleSignatureBuilder_;
      }

      private maxpb.MaxpbAccessories.ProductModel product_ = maxpb.MaxpbAccessories.ProductModel.DT_NONE;
      /**
       * <code>optional .maxpb.ProductModel product = 19;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40, MAXIO
       * </pre>
       */
      public boolean hasProduct() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .maxpb.ProductModel product = 19;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40, MAXIO
       * </pre>
       */
      public maxpb.MaxpbAccessories.ProductModel getProduct() {
        return product_;
      }
      /**
       * <code>optional .maxpb.ProductModel product = 19;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40, MAXIO
       * </pre>
       */
      public Builder setProduct(maxpb.MaxpbAccessories.ProductModel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        product_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.ProductModel product = 19;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40, MAXIO
       * </pre>
       */
      public Builder clearProduct() {
        bitField0_ = (bitField0_ & ~0x00001000);
        product_ = maxpb.MaxpbAccessories.ProductModel.DT_NONE;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.AccessoryStatus)
    }

    static {
      defaultInstance = new AccessoryStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.AccessoryStatus)
  }

  public interface ReportStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.ReportStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    boolean hasDeviceID();
    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    long getDeviceID();

    /**
     * <code>required uint64 commandID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    boolean hasCommandID();
    /**
     * <code>required uint64 commandID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    long getCommandID();

    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    boolean hasIdentificationPack();
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.IDPack getIdentificationPack();
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    maxpb.MaxpbReport.IDPackOrBuilder getIdentificationPackOrBuilder();

    /**
     * <code>required uint64 datetime = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    boolean hasDatetime();
    /**
     * <code>required uint64 datetime = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    long getDatetime();

    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    java.util.List<maxpb.MaxpbFiletransfer.FileInfo> 
        getFilesList();
    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    maxpb.MaxpbFiletransfer.FileInfo getFiles(int index);
    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    int getFilesCount();
    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbFiletransfer.FileInfoOrBuilder> 
        getFilesOrBuilderList();
    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    maxpb.MaxpbFiletransfer.FileInfoOrBuilder getFilesOrBuilder(
        int index);

    /**
     * <code>optional uint32 deviceType = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    boolean hasDeviceType();
    /**
     * <code>optional uint32 deviceType = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    int getDeviceType();

    /**
     * <code>optional uint32 boardRevision = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    boolean hasBoardRevision();
    /**
     * <code>optional uint32 boardRevision = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    int getBoardRevision();

    /**
     * <code>optional string primaryICCID = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasPrimaryICCID();
    /**
     * <code>optional string primaryICCID = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    java.lang.String getPrimaryICCID();
    /**
     * <code>optional string primaryICCID = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    com.google.protobuf.ByteString
        getPrimaryICCIDBytes();

    /**
     * <code>optional string secondaryICCID = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasSecondaryICCID();
    /**
     * <code>optional string secondaryICCID = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    java.lang.String getSecondaryICCID();
    /**
     * <code>optional string secondaryICCID = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    com.google.protobuf.ByteString
        getSecondaryICCIDBytes();

    /**
     * <code>optional string macBT = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasMacBT();
    /**
     * <code>optional string macBT = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    java.lang.String getMacBT();
    /**
     * <code>optional string macBT = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    com.google.protobuf.ByteString
        getMacBTBytes();

    /**
     * <code>optional string macWIFI = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasMacWIFI();
    /**
     * <code>optional string macWIFI = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    java.lang.String getMacWIFI();
    /**
     * <code>optional string macWIFI = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    com.google.protobuf.ByteString
        getMacWIFIBytes();

    /**
     * <code>optional .maxpb.ResetReason lastResetReason = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    boolean hasLastResetReason();
    /**
     * <code>optional .maxpb.ResetReason lastResetReason = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    maxpb.MaxpbDebug.ResetReason getLastResetReason();

    /**
     * <code>optional bool passwordRequired = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasPasswordRequired();
    /**
     * <code>optional bool passwordRequired = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean getPasswordRequired();

    /**
     * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasVirtualIgnition();
    /**
     * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    maxpb.MaxpbGpio.VirtualIgnitionInfo getVirtualIgnition();
    /**
     * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    maxpb.MaxpbGpio.VirtualIgnitionInfoOrBuilder getVirtualIgnitionOrBuilder();

    /**
     * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasDiagnostic();
    /**
     * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbDebug.DiagnosticPacket getDiagnostic();
    /**
     * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbDebug.DiagnosticPacketOrBuilder getDiagnosticOrBuilder();

    /**
     * <code>optional uint64 loraID = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasLoraID();
    /**
     * <code>optional uint64 loraID = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    long getLoraID();

    /**
     * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    java.util.List<maxpb.MaxpbReport.AccessoryStatus> 
        getAccessoriesList();
    /**
     * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    maxpb.MaxpbReport.AccessoryStatus getAccessories(int index);
    /**
     * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    int getAccessoriesCount();
    /**
     * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbReport.AccessoryStatusOrBuilder> 
        getAccessoriesOrBuilderList();
    /**
     * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    maxpb.MaxpbReport.AccessoryStatusOrBuilder getAccessoriesOrBuilder(
        int index);

    /**
     * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
     * </pre>
     */
    boolean hasVehicleSignature();
    /**
     * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
     * </pre>
     */
    maxpb.MaxpbIoexpander.VehicleSignature getVehicleSignature();
    /**
     * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
     * </pre>
     */
    maxpb.MaxpbIoexpander.VehicleSignatureOrBuilder getVehicleSignatureOrBuilder();

    /**
     * <code>optional .maxpb.ProductModel product = 19;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40, MAXIO
     * </pre>
     */
    boolean hasProduct();
    /**
     * <code>optional .maxpb.ProductModel product = 19;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40, MAXIO
     * </pre>
     */
    maxpb.MaxpbAccessories.ProductModel getProduct();

    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    boolean hasCustomerData();
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    maxpb.MaxpbCustomerData.CustomerData getCustomerData();
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    maxpb.MaxpbCustomerData.CustomerDataOrBuilder getCustomerDataOrBuilder();
  }
  /**
   * Protobuf type {@code maxpb.ReportStatus}
   */
  public static final class ReportStatus extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.ReportStatus)
      ReportStatusOrBuilder {
    // Use ReportStatus.newBuilder() to construct.
    private ReportStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ReportStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ReportStatus defaultInstance;
    public static ReportStatus getDefaultInstance() {
      return defaultInstance;
    }

    public ReportStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ReportStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              deviceID_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              commandID_ = input.readUInt64();
              break;
            }
            case 26: {
              maxpb.MaxpbReport.IDPack.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = identificationPack_.toBuilder();
              }
              identificationPack_ = input.readMessage(maxpb.MaxpbReport.IDPack.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(identificationPack_);
                identificationPack_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              datetime_ = input.readUInt64();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                files_ = new java.util.ArrayList<maxpb.MaxpbFiletransfer.FileInfo>();
                mutable_bitField0_ |= 0x00000010;
              }
              files_.add(input.readMessage(maxpb.MaxpbFiletransfer.FileInfo.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              deviceType_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              boardRevision_ = input.readUInt32();
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              primaryICCID_ = bs;
              break;
            }
            case 74: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              secondaryICCID_ = bs;
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000100;
              macBT_ = bs;
              break;
            }
            case 90: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000200;
              macWIFI_ = bs;
              break;
            }
            case 96: {
              int rawValue = input.readEnum();
              maxpb.MaxpbDebug.ResetReason value = maxpb.MaxpbDebug.ResetReason.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(12, rawValue);
              } else {
                bitField0_ |= 0x00000400;
                lastResetReason_ = value;
              }
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              passwordRequired_ = input.readBool();
              break;
            }
            case 114: {
              maxpb.MaxpbGpio.VirtualIgnitionInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = virtualIgnition_.toBuilder();
              }
              virtualIgnition_ = input.readMessage(maxpb.MaxpbGpio.VirtualIgnitionInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(virtualIgnition_);
                virtualIgnition_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
            case 122: {
              maxpb.MaxpbDebug.DiagnosticPacket.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = diagnostic_.toBuilder();
              }
              diagnostic_ = input.readMessage(maxpb.MaxpbDebug.DiagnosticPacket.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(diagnostic_);
                diagnostic_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
            case 128: {
              bitField0_ |= 0x00004000;
              loraID_ = input.readUInt64();
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                accessories_ = new java.util.ArrayList<maxpb.MaxpbReport.AccessoryStatus>();
                mutable_bitField0_ |= 0x00010000;
              }
              accessories_.add(input.readMessage(maxpb.MaxpbReport.AccessoryStatus.PARSER, extensionRegistry));
              break;
            }
            case 146: {
              maxpb.MaxpbIoexpander.VehicleSignature.Builder subBuilder = null;
              if (((bitField0_ & 0x00008000) == 0x00008000)) {
                subBuilder = vehicleSignature_.toBuilder();
              }
              vehicleSignature_ = input.readMessage(maxpb.MaxpbIoexpander.VehicleSignature.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(vehicleSignature_);
                vehicleSignature_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00008000;
              break;
            }
            case 152: {
              int rawValue = input.readEnum();
              maxpb.MaxpbAccessories.ProductModel value = maxpb.MaxpbAccessories.ProductModel.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(19, rawValue);
              } else {
                bitField0_ |= 0x00010000;
                product_ = value;
              }
              break;
            }
            case 1026: {
              maxpb.MaxpbCustomerData.CustomerData.Builder subBuilder = null;
              if (((bitField0_ & 0x00020000) == 0x00020000)) {
                subBuilder = customerData_.toBuilder();
              }
              customerData_ = input.readMessage(maxpb.MaxpbCustomerData.CustomerData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(customerData_);
                customerData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00020000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          files_ = java.util.Collections.unmodifiableList(files_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          accessories_ = java.util.Collections.unmodifiableList(accessories_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbReport.internal_static_maxpb_ReportStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbReport.internal_static_maxpb_ReportStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbReport.ReportStatus.class, maxpb.MaxpbReport.ReportStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<ReportStatus> PARSER =
        new com.google.protobuf.AbstractParser<ReportStatus>() {
      public ReportStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReportStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ReportStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DEVICEID_FIELD_NUMBER = 1;
    private long deviceID_;
    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public boolean hasDeviceID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 deviceID = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public long getDeviceID() {
      return deviceID_;
    }

    public static final int COMMANDID_FIELD_NUMBER = 2;
    private long commandID_;
    /**
     * <code>required uint64 commandID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public boolean hasCommandID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 commandID = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public long getCommandID() {
      return commandID_;
    }

    public static final int IDENTIFICATIONPACK_FIELD_NUMBER = 3;
    private maxpb.MaxpbReport.IDPack identificationPack_;
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public boolean hasIdentificationPack() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.IDPack getIdentificationPack() {
      return identificationPack_;
    }
    /**
     * <code>optional .maxpb.IDPack identificationPack = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public maxpb.MaxpbReport.IDPackOrBuilder getIdentificationPackOrBuilder() {
      return identificationPack_;
    }

    public static final int DATETIME_FIELD_NUMBER = 4;
    private long datetime_;
    /**
     * <code>required uint64 datetime = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public boolean hasDatetime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint64 datetime = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public long getDatetime() {
      return datetime_;
    }

    public static final int FILES_FIELD_NUMBER = 5;
    private java.util.List<maxpb.MaxpbFiletransfer.FileInfo> files_;
    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public java.util.List<maxpb.MaxpbFiletransfer.FileInfo> getFilesList() {
      return files_;
    }
    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbFiletransfer.FileInfoOrBuilder> 
        getFilesOrBuilderList() {
      return files_;
    }
    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public int getFilesCount() {
      return files_.size();
    }
    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public maxpb.MaxpbFiletransfer.FileInfo getFiles(int index) {
      return files_.get(index);
    }
    /**
     * <code>repeated .maxpb.FileInfo files = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public maxpb.MaxpbFiletransfer.FileInfoOrBuilder getFilesOrBuilder(
        int index) {
      return files_.get(index);
    }

    public static final int DEVICETYPE_FIELD_NUMBER = 6;
    private int deviceType_;
    /**
     * <code>optional uint32 deviceType = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public boolean hasDeviceType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 deviceType = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public int getDeviceType() {
      return deviceType_;
    }

    public static final int BOARDREVISION_FIELD_NUMBER = 7;
    private int boardRevision_;
    /**
     * <code>optional uint32 boardRevision = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public boolean hasBoardRevision() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 boardRevision = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public int getBoardRevision() {
      return boardRevision_;
    }

    public static final int PRIMARYICCID_FIELD_NUMBER = 8;
    private java.lang.Object primaryICCID_;
    /**
     * <code>optional string primaryICCID = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasPrimaryICCID() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string primaryICCID = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public java.lang.String getPrimaryICCID() {
      java.lang.Object ref = primaryICCID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          primaryICCID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string primaryICCID = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPrimaryICCIDBytes() {
      java.lang.Object ref = primaryICCID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        primaryICCID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SECONDARYICCID_FIELD_NUMBER = 9;
    private java.lang.Object secondaryICCID_;
    /**
     * <code>optional string secondaryICCID = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasSecondaryICCID() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string secondaryICCID = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public java.lang.String getSecondaryICCID() {
      java.lang.Object ref = secondaryICCID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          secondaryICCID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string secondaryICCID = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSecondaryICCIDBytes() {
      java.lang.Object ref = secondaryICCID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        secondaryICCID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MACBT_FIELD_NUMBER = 10;
    private java.lang.Object macBT_;
    /**
     * <code>optional string macBT = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasMacBT() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string macBT = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public java.lang.String getMacBT() {
      java.lang.Object ref = macBT_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          macBT_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string macBT = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMacBTBytes() {
      java.lang.Object ref = macBT_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        macBT_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MACWIFI_FIELD_NUMBER = 11;
    private java.lang.Object macWIFI_;
    /**
     * <code>optional string macWIFI = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasMacWIFI() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string macWIFI = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public java.lang.String getMacWIFI() {
      java.lang.Object ref = macWIFI_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          macWIFI_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string macWIFI = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMacWIFIBytes() {
      java.lang.Object ref = macWIFI_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        macWIFI_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LASTRESETREASON_FIELD_NUMBER = 12;
    private maxpb.MaxpbDebug.ResetReason lastResetReason_;
    /**
     * <code>optional .maxpb.ResetReason lastResetReason = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public boolean hasLastResetReason() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .maxpb.ResetReason lastResetReason = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
     * </pre>
     */
    public maxpb.MaxpbDebug.ResetReason getLastResetReason() {
      return lastResetReason_;
    }

    public static final int PASSWORDREQUIRED_FIELD_NUMBER = 13;
    private boolean passwordRequired_;
    /**
     * <code>optional bool passwordRequired = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasPasswordRequired() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool passwordRequired = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean getPasswordRequired() {
      return passwordRequired_;
    }

    public static final int VIRTUALIGNITION_FIELD_NUMBER = 14;
    private maxpb.MaxpbGpio.VirtualIgnitionInfo virtualIgnition_;
    /**
     * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasVirtualIgnition() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public maxpb.MaxpbGpio.VirtualIgnitionInfo getVirtualIgnition() {
      return virtualIgnition_;
    }
    /**
     * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public maxpb.MaxpbGpio.VirtualIgnitionInfoOrBuilder getVirtualIgnitionOrBuilder() {
      return virtualIgnition_;
    }

    public static final int DIAGNOSTIC_FIELD_NUMBER = 15;
    private maxpb.MaxpbDebug.DiagnosticPacket diagnostic_;
    /**
     * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasDiagnostic() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbDebug.DiagnosticPacket getDiagnostic() {
      return diagnostic_;
    }
    /**
     * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbDebug.DiagnosticPacketOrBuilder getDiagnosticOrBuilder() {
      return diagnostic_;
    }

    public static final int LORAID_FIELD_NUMBER = 16;
    private long loraID_;
    /**
     * <code>optional uint64 loraID = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasLoraID() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint64 loraID = 16;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public long getLoraID() {
      return loraID_;
    }

    public static final int ACCESSORIES_FIELD_NUMBER = 17;
    private java.util.List<maxpb.MaxpbReport.AccessoryStatus> accessories_;
    /**
     * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    public java.util.List<maxpb.MaxpbReport.AccessoryStatus> getAccessoriesList() {
      return accessories_;
    }
    /**
     * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbReport.AccessoryStatusOrBuilder> 
        getAccessoriesOrBuilderList() {
      return accessories_;
    }
    /**
     * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    public int getAccessoriesCount() {
      return accessories_.size();
    }
    /**
     * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    public maxpb.MaxpbReport.AccessoryStatus getAccessories(int index) {
      return accessories_.get(index);
    }
    /**
     * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MAXIO
     * </pre>
     */
    public maxpb.MaxpbReport.AccessoryStatusOrBuilder getAccessoriesOrBuilder(
        int index) {
      return accessories_.get(index);
    }

    public static final int VEHICLESIGNATURE_FIELD_NUMBER = 18;
    private maxpb.MaxpbIoexpander.VehicleSignature vehicleSignature_;
    /**
     * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
     * </pre>
     */
    public boolean hasVehicleSignature() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
     * </pre>
     */
    public maxpb.MaxpbIoexpander.VehicleSignature getVehicleSignature() {
      return vehicleSignature_;
    }
    /**
     * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
     * </pre>
     */
    public maxpb.MaxpbIoexpander.VehicleSignatureOrBuilder getVehicleSignatureOrBuilder() {
      return vehicleSignature_;
    }

    public static final int PRODUCT_FIELD_NUMBER = 19;
    private maxpb.MaxpbAccessories.ProductModel product_;
    /**
     * <code>optional .maxpb.ProductModel product = 19;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40, MAXIO
     * </pre>
     */
    public boolean hasProduct() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .maxpb.ProductModel product = 19;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180, A40, MAXIO
     * </pre>
     */
    public maxpb.MaxpbAccessories.ProductModel getProduct() {
      return product_;
    }

    public static final int CUSTOMERDATA_FIELD_NUMBER = 128;
    private maxpb.MaxpbCustomerData.CustomerData customerData_;
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    public boolean hasCustomerData() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    public maxpb.MaxpbCustomerData.CustomerData getCustomerData() {
      return customerData_;
    }
    /**
     * <code>optional .maxpb.CustomerData customerData = 128;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    public maxpb.MaxpbCustomerData.CustomerDataOrBuilder getCustomerDataOrBuilder() {
      return customerData_;
    }

    private void initFields() {
      deviceID_ = 0L;
      commandID_ = 0L;
      identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
      datetime_ = 0L;
      files_ = java.util.Collections.emptyList();
      deviceType_ = 0;
      boardRevision_ = 0;
      primaryICCID_ = "";
      secondaryICCID_ = "";
      macBT_ = "";
      macWIFI_ = "";
      lastResetReason_ = maxpb.MaxpbDebug.ResetReason.RSTR_POWER_ON;
      passwordRequired_ = false;
      virtualIgnition_ = maxpb.MaxpbGpio.VirtualIgnitionInfo.getDefaultInstance();
      diagnostic_ = maxpb.MaxpbDebug.DiagnosticPacket.getDefaultInstance();
      loraID_ = 0L;
      accessories_ = java.util.Collections.emptyList();
      vehicleSignature_ = maxpb.MaxpbIoexpander.VehicleSignature.getDefaultInstance();
      product_ = maxpb.MaxpbAccessories.ProductModel.DT_NONE;
      customerData_ = maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDeviceID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCommandID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDatetime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFilesCount(); i++) {
        if (!getFiles(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasVirtualIgnition()) {
        if (!getVirtualIgnition().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getAccessoriesCount(); i++) {
        if (!getAccessories(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, deviceID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, commandID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, identificationPack_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, datetime_);
      }
      for (int i = 0; i < files_.size(); i++) {
        output.writeMessage(5, files_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, deviceType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(7, boardRevision_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(8, getPrimaryICCIDBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(9, getSecondaryICCIDBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(10, getMacBTBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(11, getMacWIFIBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeEnum(12, lastResetReason_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(13, passwordRequired_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(14, virtualIgnition_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(15, diagnostic_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt64(16, loraID_);
      }
      for (int i = 0; i < accessories_.size(); i++) {
        output.writeMessage(17, accessories_.get(i));
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(18, vehicleSignature_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeEnum(19, product_.getNumber());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(128, customerData_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, deviceID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, commandID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, identificationPack_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, datetime_);
      }
      for (int i = 0; i < files_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, files_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, deviceType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, boardRevision_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getPrimaryICCIDBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getSecondaryICCIDBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getMacBTBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getMacWIFIBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, lastResetReason_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, passwordRequired_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, virtualIgnition_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, diagnostic_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(16, loraID_);
      }
      for (int i = 0; i < accessories_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, accessories_.get(i));
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, vehicleSignature_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(19, product_.getNumber());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(128, customerData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbReport.ReportStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.ReportStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.ReportStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbReport.ReportStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbReport.ReportStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.ReportStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.ReportStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbReport.ReportStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbReport.ReportStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbReport.ReportStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbReport.ReportStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.ReportStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.ReportStatus)
        maxpb.MaxpbReport.ReportStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbReport.internal_static_maxpb_ReportStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbReport.internal_static_maxpb_ReportStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbReport.ReportStatus.class, maxpb.MaxpbReport.ReportStatus.Builder.class);
      }

      // Construct using maxpb.MaxpbReport.ReportStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIdentificationPackFieldBuilder();
          getFilesFieldBuilder();
          getVirtualIgnitionFieldBuilder();
          getDiagnosticFieldBuilder();
          getAccessoriesFieldBuilder();
          getVehicleSignatureFieldBuilder();
          getCustomerDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        deviceID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        commandID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (identificationPackBuilder_ == null) {
          identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
        } else {
          identificationPackBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        datetime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (filesBuilder_ == null) {
          files_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          filesBuilder_.clear();
        }
        deviceType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        boardRevision_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        primaryICCID_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        secondaryICCID_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        macBT_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        macWIFI_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        lastResetReason_ = maxpb.MaxpbDebug.ResetReason.RSTR_POWER_ON;
        bitField0_ = (bitField0_ & ~0x00000800);
        passwordRequired_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        if (virtualIgnitionBuilder_ == null) {
          virtualIgnition_ = maxpb.MaxpbGpio.VirtualIgnitionInfo.getDefaultInstance();
        } else {
          virtualIgnitionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        if (diagnosticBuilder_ == null) {
          diagnostic_ = maxpb.MaxpbDebug.DiagnosticPacket.getDefaultInstance();
        } else {
          diagnosticBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        loraID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00008000);
        if (accessoriesBuilder_ == null) {
          accessories_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
        } else {
          accessoriesBuilder_.clear();
        }
        if (vehicleSignatureBuilder_ == null) {
          vehicleSignature_ = maxpb.MaxpbIoexpander.VehicleSignature.getDefaultInstance();
        } else {
          vehicleSignatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        product_ = maxpb.MaxpbAccessories.ProductModel.DT_NONE;
        bitField0_ = (bitField0_ & ~0x00040000);
        if (customerDataBuilder_ == null) {
          customerData_ = maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance();
        } else {
          customerDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbReport.internal_static_maxpb_ReportStatus_descriptor;
      }

      public maxpb.MaxpbReport.ReportStatus getDefaultInstanceForType() {
        return maxpb.MaxpbReport.ReportStatus.getDefaultInstance();
      }

      public maxpb.MaxpbReport.ReportStatus build() {
        maxpb.MaxpbReport.ReportStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbReport.ReportStatus buildPartial() {
        maxpb.MaxpbReport.ReportStatus result = new maxpb.MaxpbReport.ReportStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deviceID_ = deviceID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.commandID_ = commandID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (identificationPackBuilder_ == null) {
          result.identificationPack_ = identificationPack_;
        } else {
          result.identificationPack_ = identificationPackBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.datetime_ = datetime_;
        if (filesBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            files_ = java.util.Collections.unmodifiableList(files_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.files_ = files_;
        } else {
          result.files_ = filesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.deviceType_ = deviceType_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.boardRevision_ = boardRevision_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.primaryICCID_ = primaryICCID_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.secondaryICCID_ = secondaryICCID_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.macBT_ = macBT_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.macWIFI_ = macWIFI_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.lastResetReason_ = lastResetReason_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.passwordRequired_ = passwordRequired_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (virtualIgnitionBuilder_ == null) {
          result.virtualIgnition_ = virtualIgnition_;
        } else {
          result.virtualIgnition_ = virtualIgnitionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (diagnosticBuilder_ == null) {
          result.diagnostic_ = diagnostic_;
        } else {
          result.diagnostic_ = diagnosticBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.loraID_ = loraID_;
        if (accessoriesBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000)) {
            accessories_ = java.util.Collections.unmodifiableList(accessories_);
            bitField0_ = (bitField0_ & ~0x00010000);
          }
          result.accessories_ = accessories_;
        } else {
          result.accessories_ = accessoriesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00008000;
        }
        if (vehicleSignatureBuilder_ == null) {
          result.vehicleSignature_ = vehicleSignature_;
        } else {
          result.vehicleSignature_ = vehicleSignatureBuilder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.product_ = product_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00020000;
        }
        if (customerDataBuilder_ == null) {
          result.customerData_ = customerData_;
        } else {
          result.customerData_ = customerDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbReport.ReportStatus) {
          return mergeFrom((maxpb.MaxpbReport.ReportStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbReport.ReportStatus other) {
        if (other == maxpb.MaxpbReport.ReportStatus.getDefaultInstance()) return this;
        if (other.hasDeviceID()) {
          setDeviceID(other.getDeviceID());
        }
        if (other.hasCommandID()) {
          setCommandID(other.getCommandID());
        }
        if (other.hasIdentificationPack()) {
          mergeIdentificationPack(other.getIdentificationPack());
        }
        if (other.hasDatetime()) {
          setDatetime(other.getDatetime());
        }
        if (filesBuilder_ == null) {
          if (!other.files_.isEmpty()) {
            if (files_.isEmpty()) {
              files_ = other.files_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureFilesIsMutable();
              files_.addAll(other.files_);
            }
            onChanged();
          }
        } else {
          if (!other.files_.isEmpty()) {
            if (filesBuilder_.isEmpty()) {
              filesBuilder_.dispose();
              filesBuilder_ = null;
              files_ = other.files_;
              bitField0_ = (bitField0_ & ~0x00000010);
              filesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFilesFieldBuilder() : null;
            } else {
              filesBuilder_.addAllMessages(other.files_);
            }
          }
        }
        if (other.hasDeviceType()) {
          setDeviceType(other.getDeviceType());
        }
        if (other.hasBoardRevision()) {
          setBoardRevision(other.getBoardRevision());
        }
        if (other.hasPrimaryICCID()) {
          bitField0_ |= 0x00000080;
          primaryICCID_ = other.primaryICCID_;
          onChanged();
        }
        if (other.hasSecondaryICCID()) {
          bitField0_ |= 0x00000100;
          secondaryICCID_ = other.secondaryICCID_;
          onChanged();
        }
        if (other.hasMacBT()) {
          bitField0_ |= 0x00000200;
          macBT_ = other.macBT_;
          onChanged();
        }
        if (other.hasMacWIFI()) {
          bitField0_ |= 0x00000400;
          macWIFI_ = other.macWIFI_;
          onChanged();
        }
        if (other.hasLastResetReason()) {
          setLastResetReason(other.getLastResetReason());
        }
        if (other.hasPasswordRequired()) {
          setPasswordRequired(other.getPasswordRequired());
        }
        if (other.hasVirtualIgnition()) {
          mergeVirtualIgnition(other.getVirtualIgnition());
        }
        if (other.hasDiagnostic()) {
          mergeDiagnostic(other.getDiagnostic());
        }
        if (other.hasLoraID()) {
          setLoraID(other.getLoraID());
        }
        if (accessoriesBuilder_ == null) {
          if (!other.accessories_.isEmpty()) {
            if (accessories_.isEmpty()) {
              accessories_ = other.accessories_;
              bitField0_ = (bitField0_ & ~0x00010000);
            } else {
              ensureAccessoriesIsMutable();
              accessories_.addAll(other.accessories_);
            }
            onChanged();
          }
        } else {
          if (!other.accessories_.isEmpty()) {
            if (accessoriesBuilder_.isEmpty()) {
              accessoriesBuilder_.dispose();
              accessoriesBuilder_ = null;
              accessories_ = other.accessories_;
              bitField0_ = (bitField0_ & ~0x00010000);
              accessoriesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAccessoriesFieldBuilder() : null;
            } else {
              accessoriesBuilder_.addAllMessages(other.accessories_);
            }
          }
        }
        if (other.hasVehicleSignature()) {
          mergeVehicleSignature(other.getVehicleSignature());
        }
        if (other.hasProduct()) {
          setProduct(other.getProduct());
        }
        if (other.hasCustomerData()) {
          mergeCustomerData(other.getCustomerData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDeviceID()) {
          
          return false;
        }
        if (!hasCommandID()) {
          
          return false;
        }
        if (!hasDatetime()) {
          
          return false;
        }
        for (int i = 0; i < getFilesCount(); i++) {
          if (!getFiles(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasVirtualIgnition()) {
          if (!getVirtualIgnition().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getAccessoriesCount(); i++) {
          if (!getAccessories(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbReport.ReportStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbReport.ReportStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long deviceID_ ;
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public boolean hasDeviceID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public long getDeviceID() {
        return deviceID_;
      }
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder setDeviceID(long value) {
        bitField0_ |= 0x00000001;
        deviceID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 deviceID = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder clearDeviceID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceID_ = 0L;
        onChanged();
        return this;
      }

      private long commandID_ ;
      /**
       * <code>required uint64 commandID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public boolean hasCommandID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 commandID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public long getCommandID() {
        return commandID_;
      }
      /**
       * <code>required uint64 commandID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder setCommandID(long value) {
        bitField0_ |= 0x00000002;
        commandID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 commandID = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder clearCommandID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        commandID_ = 0L;
        onChanged();
        return this;
      }

      private maxpb.MaxpbReport.IDPack identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.IDPack, maxpb.MaxpbReport.IDPack.Builder, maxpb.MaxpbReport.IDPackOrBuilder> identificationPackBuilder_;
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public boolean hasIdentificationPack() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.IDPack getIdentificationPack() {
        if (identificationPackBuilder_ == null) {
          return identificationPack_;
        } else {
          return identificationPackBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder setIdentificationPack(maxpb.MaxpbReport.IDPack value) {
        if (identificationPackBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          identificationPack_ = value;
          onChanged();
        } else {
          identificationPackBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder setIdentificationPack(
          maxpb.MaxpbReport.IDPack.Builder builderForValue) {
        if (identificationPackBuilder_ == null) {
          identificationPack_ = builderForValue.build();
          onChanged();
        } else {
          identificationPackBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder mergeIdentificationPack(maxpb.MaxpbReport.IDPack value) {
        if (identificationPackBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              identificationPack_ != maxpb.MaxpbReport.IDPack.getDefaultInstance()) {
            identificationPack_ =
              maxpb.MaxpbReport.IDPack.newBuilder(identificationPack_).mergeFrom(value).buildPartial();
          } else {
            identificationPack_ = value;
          }
          onChanged();
        } else {
          identificationPackBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder clearIdentificationPack() {
        if (identificationPackBuilder_ == null) {
          identificationPack_ = maxpb.MaxpbReport.IDPack.getDefaultInstance();
          onChanged();
        } else {
          identificationPackBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.IDPack.Builder getIdentificationPackBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getIdentificationPackFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public maxpb.MaxpbReport.IDPackOrBuilder getIdentificationPackOrBuilder() {
        if (identificationPackBuilder_ != null) {
          return identificationPackBuilder_.getMessageOrBuilder();
        } else {
          return identificationPack_;
        }
      }
      /**
       * <code>optional .maxpb.IDPack identificationPack = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbReport.IDPack, maxpb.MaxpbReport.IDPack.Builder, maxpb.MaxpbReport.IDPackOrBuilder> 
          getIdentificationPackFieldBuilder() {
        if (identificationPackBuilder_ == null) {
          identificationPackBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbReport.IDPack, maxpb.MaxpbReport.IDPack.Builder, maxpb.MaxpbReport.IDPackOrBuilder>(
                  getIdentificationPack(),
                  getParentForChildren(),
                  isClean());
          identificationPack_ = null;
        }
        return identificationPackBuilder_;
      }

      private long datetime_ ;
      /**
       * <code>required uint64 datetime = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public boolean hasDatetime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint64 datetime = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public long getDatetime() {
        return datetime_;
      }
      /**
       * <code>required uint64 datetime = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder setDatetime(long value) {
        bitField0_ |= 0x00000008;
        datetime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 datetime = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder clearDatetime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        datetime_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<maxpb.MaxpbFiletransfer.FileInfo> files_ =
        java.util.Collections.emptyList();
      private void ensureFilesIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          files_ = new java.util.ArrayList<maxpb.MaxpbFiletransfer.FileInfo>(files_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbFiletransfer.FileInfo, maxpb.MaxpbFiletransfer.FileInfo.Builder, maxpb.MaxpbFiletransfer.FileInfoOrBuilder> filesBuilder_;

      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbFiletransfer.FileInfo> getFilesList() {
        if (filesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(files_);
        } else {
          return filesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public int getFilesCount() {
        if (filesBuilder_ == null) {
          return files_.size();
        } else {
          return filesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public maxpb.MaxpbFiletransfer.FileInfo getFiles(int index) {
        if (filesBuilder_ == null) {
          return files_.get(index);
        } else {
          return filesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder setFiles(
          int index, maxpb.MaxpbFiletransfer.FileInfo value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.set(index, value);
          onChanged();
        } else {
          filesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder setFiles(
          int index, maxpb.MaxpbFiletransfer.FileInfo.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.set(index, builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder addFiles(maxpb.MaxpbFiletransfer.FileInfo value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.add(value);
          onChanged();
        } else {
          filesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder addFiles(
          int index, maxpb.MaxpbFiletransfer.FileInfo value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.add(index, value);
          onChanged();
        } else {
          filesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder addFiles(
          maxpb.MaxpbFiletransfer.FileInfo.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.add(builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder addFiles(
          int index, maxpb.MaxpbFiletransfer.FileInfo.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.add(index, builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder addAllFiles(
          java.lang.Iterable<? extends maxpb.MaxpbFiletransfer.FileInfo> values) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, files_);
          onChanged();
        } else {
          filesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder clearFiles() {
        if (filesBuilder_ == null) {
          files_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          filesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder removeFiles(int index) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.remove(index);
          onChanged();
        } else {
          filesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public maxpb.MaxpbFiletransfer.FileInfo.Builder getFilesBuilder(
          int index) {
        return getFilesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public maxpb.MaxpbFiletransfer.FileInfoOrBuilder getFilesOrBuilder(
          int index) {
        if (filesBuilder_ == null) {
          return files_.get(index);  } else {
          return filesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbFiletransfer.FileInfoOrBuilder> 
           getFilesOrBuilderList() {
        if (filesBuilder_ != null) {
          return filesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(files_);
        }
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public maxpb.MaxpbFiletransfer.FileInfo.Builder addFilesBuilder() {
        return getFilesFieldBuilder().addBuilder(
            maxpb.MaxpbFiletransfer.FileInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public maxpb.MaxpbFiletransfer.FileInfo.Builder addFilesBuilder(
          int index) {
        return getFilesFieldBuilder().addBuilder(
            index, maxpb.MaxpbFiletransfer.FileInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.FileInfo files = 5;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbFiletransfer.FileInfo.Builder> 
           getFilesBuilderList() {
        return getFilesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbFiletransfer.FileInfo, maxpb.MaxpbFiletransfer.FileInfo.Builder, maxpb.MaxpbFiletransfer.FileInfoOrBuilder> 
          getFilesFieldBuilder() {
        if (filesBuilder_ == null) {
          filesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbFiletransfer.FileInfo, maxpb.MaxpbFiletransfer.FileInfo.Builder, maxpb.MaxpbFiletransfer.FileInfoOrBuilder>(
                  files_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          files_ = null;
        }
        return filesBuilder_;
      }

      private int deviceType_ ;
      /**
       * <code>optional uint32 deviceType = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public boolean hasDeviceType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 deviceType = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public int getDeviceType() {
        return deviceType_;
      }
      /**
       * <code>optional uint32 deviceType = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder setDeviceType(int value) {
        bitField0_ |= 0x00000020;
        deviceType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 deviceType = 6;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder clearDeviceType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        deviceType_ = 0;
        onChanged();
        return this;
      }

      private int boardRevision_ ;
      /**
       * <code>optional uint32 boardRevision = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public boolean hasBoardRevision() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 boardRevision = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public int getBoardRevision() {
        return boardRevision_;
      }
      /**
       * <code>optional uint32 boardRevision = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder setBoardRevision(int value) {
        bitField0_ |= 0x00000040;
        boardRevision_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 boardRevision = 7;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder clearBoardRevision() {
        bitField0_ = (bitField0_ & ~0x00000040);
        boardRevision_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object primaryICCID_ = "";
      /**
       * <code>optional string primaryICCID = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasPrimaryICCID() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string primaryICCID = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.lang.String getPrimaryICCID() {
        java.lang.Object ref = primaryICCID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            primaryICCID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string primaryICCID = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPrimaryICCIDBytes() {
        java.lang.Object ref = primaryICCID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          primaryICCID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string primaryICCID = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setPrimaryICCID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        primaryICCID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string primaryICCID = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearPrimaryICCID() {
        bitField0_ = (bitField0_ & ~0x00000080);
        primaryICCID_ = getDefaultInstance().getPrimaryICCID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string primaryICCID = 8;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setPrimaryICCIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        primaryICCID_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object secondaryICCID_ = "";
      /**
       * <code>optional string secondaryICCID = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasSecondaryICCID() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string secondaryICCID = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public java.lang.String getSecondaryICCID() {
        java.lang.Object ref = secondaryICCID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            secondaryICCID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string secondaryICCID = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSecondaryICCIDBytes() {
        java.lang.Object ref = secondaryICCID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          secondaryICCID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string secondaryICCID = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setSecondaryICCID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        secondaryICCID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string secondaryICCID = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearSecondaryICCID() {
        bitField0_ = (bitField0_ & ~0x00000100);
        secondaryICCID_ = getDefaultInstance().getSecondaryICCID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string secondaryICCID = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setSecondaryICCIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        secondaryICCID_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object macBT_ = "";
      /**
       * <code>optional string macBT = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasMacBT() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string macBT = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public java.lang.String getMacBT() {
        java.lang.Object ref = macBT_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            macBT_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string macBT = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMacBTBytes() {
        java.lang.Object ref = macBT_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          macBT_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string macBT = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setMacBT(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        macBT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string macBT = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearMacBT() {
        bitField0_ = (bitField0_ & ~0x00000200);
        macBT_ = getDefaultInstance().getMacBT();
        onChanged();
        return this;
      }
      /**
       * <code>optional string macBT = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setMacBTBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        macBT_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object macWIFI_ = "";
      /**
       * <code>optional string macWIFI = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasMacWIFI() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string macWIFI = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public java.lang.String getMacWIFI() {
        java.lang.Object ref = macWIFI_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            macWIFI_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string macWIFI = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMacWIFIBytes() {
        java.lang.Object ref = macWIFI_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          macWIFI_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string macWIFI = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setMacWIFI(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        macWIFI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string macWIFI = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearMacWIFI() {
        bitField0_ = (bitField0_ & ~0x00000400);
        macWIFI_ = getDefaultInstance().getMacWIFI();
        onChanged();
        return this;
      }
      /**
       * <code>optional string macWIFI = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setMacWIFIBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        macWIFI_ = value;
        onChanged();
        return this;
      }

      private maxpb.MaxpbDebug.ResetReason lastResetReason_ = maxpb.MaxpbDebug.ResetReason.RSTR_POWER_ON;
      /**
       * <code>optional .maxpb.ResetReason lastResetReason = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public boolean hasLastResetReason() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .maxpb.ResetReason lastResetReason = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public maxpb.MaxpbDebug.ResetReason getLastResetReason() {
        return lastResetReason_;
      }
      /**
       * <code>optional .maxpb.ResetReason lastResetReason = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder setLastResetReason(maxpb.MaxpbDebug.ResetReason value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000800;
        lastResetReason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.ResetReason lastResetReason = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO, MXT180
       * </pre>
       */
      public Builder clearLastResetReason() {
        bitField0_ = (bitField0_ & ~0x00000800);
        lastResetReason_ = maxpb.MaxpbDebug.ResetReason.RSTR_POWER_ON;
        onChanged();
        return this;
      }

      private boolean passwordRequired_ ;
      /**
       * <code>optional bool passwordRequired = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasPasswordRequired() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool passwordRequired = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean getPasswordRequired() {
        return passwordRequired_;
      }
      /**
       * <code>optional bool passwordRequired = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setPasswordRequired(boolean value) {
        bitField0_ |= 0x00001000;
        passwordRequired_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool passwordRequired = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearPasswordRequired() {
        bitField0_ = (bitField0_ & ~0x00001000);
        passwordRequired_ = false;
        onChanged();
        return this;
      }

      private maxpb.MaxpbGpio.VirtualIgnitionInfo virtualIgnition_ = maxpb.MaxpbGpio.VirtualIgnitionInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbGpio.VirtualIgnitionInfo, maxpb.MaxpbGpio.VirtualIgnitionInfo.Builder, maxpb.MaxpbGpio.VirtualIgnitionInfoOrBuilder> virtualIgnitionBuilder_;
      /**
       * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasVirtualIgnition() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public maxpb.MaxpbGpio.VirtualIgnitionInfo getVirtualIgnition() {
        if (virtualIgnitionBuilder_ == null) {
          return virtualIgnition_;
        } else {
          return virtualIgnitionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setVirtualIgnition(maxpb.MaxpbGpio.VirtualIgnitionInfo value) {
        if (virtualIgnitionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          virtualIgnition_ = value;
          onChanged();
        } else {
          virtualIgnitionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setVirtualIgnition(
          maxpb.MaxpbGpio.VirtualIgnitionInfo.Builder builderForValue) {
        if (virtualIgnitionBuilder_ == null) {
          virtualIgnition_ = builderForValue.build();
          onChanged();
        } else {
          virtualIgnitionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder mergeVirtualIgnition(maxpb.MaxpbGpio.VirtualIgnitionInfo value) {
        if (virtualIgnitionBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              virtualIgnition_ != maxpb.MaxpbGpio.VirtualIgnitionInfo.getDefaultInstance()) {
            virtualIgnition_ =
              maxpb.MaxpbGpio.VirtualIgnitionInfo.newBuilder(virtualIgnition_).mergeFrom(value).buildPartial();
          } else {
            virtualIgnition_ = value;
          }
          onChanged();
        } else {
          virtualIgnitionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearVirtualIgnition() {
        if (virtualIgnitionBuilder_ == null) {
          virtualIgnition_ = maxpb.MaxpbGpio.VirtualIgnitionInfo.getDefaultInstance();
          onChanged();
        } else {
          virtualIgnitionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public maxpb.MaxpbGpio.VirtualIgnitionInfo.Builder getVirtualIgnitionBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getVirtualIgnitionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public maxpb.MaxpbGpio.VirtualIgnitionInfoOrBuilder getVirtualIgnitionOrBuilder() {
        if (virtualIgnitionBuilder_ != null) {
          return virtualIgnitionBuilder_.getMessageOrBuilder();
        } else {
          return virtualIgnition_;
        }
      }
      /**
       * <code>optional .maxpb.VirtualIgnitionInfo virtualIgnition = 14;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbGpio.VirtualIgnitionInfo, maxpb.MaxpbGpio.VirtualIgnitionInfo.Builder, maxpb.MaxpbGpio.VirtualIgnitionInfoOrBuilder> 
          getVirtualIgnitionFieldBuilder() {
        if (virtualIgnitionBuilder_ == null) {
          virtualIgnitionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbGpio.VirtualIgnitionInfo, maxpb.MaxpbGpio.VirtualIgnitionInfo.Builder, maxpb.MaxpbGpio.VirtualIgnitionInfoOrBuilder>(
                  getVirtualIgnition(),
                  getParentForChildren(),
                  isClean());
          virtualIgnition_ = null;
        }
        return virtualIgnitionBuilder_;
      }

      private maxpb.MaxpbDebug.DiagnosticPacket diagnostic_ = maxpb.MaxpbDebug.DiagnosticPacket.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbDebug.DiagnosticPacket, maxpb.MaxpbDebug.DiagnosticPacket.Builder, maxpb.MaxpbDebug.DiagnosticPacketOrBuilder> diagnosticBuilder_;
      /**
       * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasDiagnostic() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbDebug.DiagnosticPacket getDiagnostic() {
        if (diagnosticBuilder_ == null) {
          return diagnostic_;
        } else {
          return diagnosticBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setDiagnostic(maxpb.MaxpbDebug.DiagnosticPacket value) {
        if (diagnosticBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          diagnostic_ = value;
          onChanged();
        } else {
          diagnosticBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setDiagnostic(
          maxpb.MaxpbDebug.DiagnosticPacket.Builder builderForValue) {
        if (diagnosticBuilder_ == null) {
          diagnostic_ = builderForValue.build();
          onChanged();
        } else {
          diagnosticBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder mergeDiagnostic(maxpb.MaxpbDebug.DiagnosticPacket value) {
        if (diagnosticBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
              diagnostic_ != maxpb.MaxpbDebug.DiagnosticPacket.getDefaultInstance()) {
            diagnostic_ =
              maxpb.MaxpbDebug.DiagnosticPacket.newBuilder(diagnostic_).mergeFrom(value).buildPartial();
          } else {
            diagnostic_ = value;
          }
          onChanged();
        } else {
          diagnosticBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearDiagnostic() {
        if (diagnosticBuilder_ == null) {
          diagnostic_ = maxpb.MaxpbDebug.DiagnosticPacket.getDefaultInstance();
          onChanged();
        } else {
          diagnosticBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbDebug.DiagnosticPacket.Builder getDiagnosticBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getDiagnosticFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbDebug.DiagnosticPacketOrBuilder getDiagnosticOrBuilder() {
        if (diagnosticBuilder_ != null) {
          return diagnosticBuilder_.getMessageOrBuilder();
        } else {
          return diagnostic_;
        }
      }
      /**
       * <code>optional .maxpb.DiagnosticPacket diagnostic = 15;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbDebug.DiagnosticPacket, maxpb.MaxpbDebug.DiagnosticPacket.Builder, maxpb.MaxpbDebug.DiagnosticPacketOrBuilder> 
          getDiagnosticFieldBuilder() {
        if (diagnosticBuilder_ == null) {
          diagnosticBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbDebug.DiagnosticPacket, maxpb.MaxpbDebug.DiagnosticPacket.Builder, maxpb.MaxpbDebug.DiagnosticPacketOrBuilder>(
                  getDiagnostic(),
                  getParentForChildren(),
                  isClean());
          diagnostic_ = null;
        }
        return diagnosticBuilder_;
      }

      private long loraID_ ;
      /**
       * <code>optional uint64 loraID = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasLoraID() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint64 loraID = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public long getLoraID() {
        return loraID_;
      }
      /**
       * <code>optional uint64 loraID = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setLoraID(long value) {
        bitField0_ |= 0x00008000;
        loraID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 loraID = 16;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearLoraID() {
        bitField0_ = (bitField0_ & ~0x00008000);
        loraID_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<maxpb.MaxpbReport.AccessoryStatus> accessories_ =
        java.util.Collections.emptyList();
      private void ensureAccessoriesIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          accessories_ = new java.util.ArrayList<maxpb.MaxpbReport.AccessoryStatus>(accessories_);
          bitField0_ |= 0x00010000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.AccessoryStatus, maxpb.MaxpbReport.AccessoryStatus.Builder, maxpb.MaxpbReport.AccessoryStatusOrBuilder> accessoriesBuilder_;

      /**
       * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.AccessoryStatus> getAccessoriesList() {
        if (accessoriesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(accessories_);
        } else {
          return accessoriesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public int getAccessoriesCount() {
        if (accessoriesBuilder_ == null) {
          return accessories_.size();
        } else {
          return accessoriesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public maxpb.MaxpbReport.AccessoryStatus getAccessories(int index) {
        if (accessoriesBuilder_ == null) {
          return accessories_.get(index);
        } else {
          return accessoriesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder setAccessories(
          int index, maxpb.MaxpbReport.AccessoryStatus value) {
        if (accessoriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccessoriesIsMutable();
          accessories_.set(index, value);
          onChanged();
        } else {
          accessoriesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder setAccessories(
          int index, maxpb.MaxpbReport.AccessoryStatus.Builder builderForValue) {
        if (accessoriesBuilder_ == null) {
          ensureAccessoriesIsMutable();
          accessories_.set(index, builderForValue.build());
          onChanged();
        } else {
          accessoriesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder addAccessories(maxpb.MaxpbReport.AccessoryStatus value) {
        if (accessoriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccessoriesIsMutable();
          accessories_.add(value);
          onChanged();
        } else {
          accessoriesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder addAccessories(
          int index, maxpb.MaxpbReport.AccessoryStatus value) {
        if (accessoriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccessoriesIsMutable();
          accessories_.add(index, value);
          onChanged();
        } else {
          accessoriesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder addAccessories(
          maxpb.MaxpbReport.AccessoryStatus.Builder builderForValue) {
        if (accessoriesBuilder_ == null) {
          ensureAccessoriesIsMutable();
          accessories_.add(builderForValue.build());
          onChanged();
        } else {
          accessoriesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder addAccessories(
          int index, maxpb.MaxpbReport.AccessoryStatus.Builder builderForValue) {
        if (accessoriesBuilder_ == null) {
          ensureAccessoriesIsMutable();
          accessories_.add(index, builderForValue.build());
          onChanged();
        } else {
          accessoriesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder addAllAccessories(
          java.lang.Iterable<? extends maxpb.MaxpbReport.AccessoryStatus> values) {
        if (accessoriesBuilder_ == null) {
          ensureAccessoriesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, accessories_);
          onChanged();
        } else {
          accessoriesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder clearAccessories() {
        if (accessoriesBuilder_ == null) {
          accessories_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
          onChanged();
        } else {
          accessoriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public Builder removeAccessories(int index) {
        if (accessoriesBuilder_ == null) {
          ensureAccessoriesIsMutable();
          accessories_.remove(index);
          onChanged();
        } else {
          accessoriesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public maxpb.MaxpbReport.AccessoryStatus.Builder getAccessoriesBuilder(
          int index) {
        return getAccessoriesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public maxpb.MaxpbReport.AccessoryStatusOrBuilder getAccessoriesOrBuilder(
          int index) {
        if (accessoriesBuilder_ == null) {
          return accessories_.get(index);  } else {
          return accessoriesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbReport.AccessoryStatusOrBuilder> 
           getAccessoriesOrBuilderList() {
        if (accessoriesBuilder_ != null) {
          return accessoriesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(accessories_);
        }
      }
      /**
       * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public maxpb.MaxpbReport.AccessoryStatus.Builder addAccessoriesBuilder() {
        return getAccessoriesFieldBuilder().addBuilder(
            maxpb.MaxpbReport.AccessoryStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public maxpb.MaxpbReport.AccessoryStatus.Builder addAccessoriesBuilder(
          int index) {
        return getAccessoriesFieldBuilder().addBuilder(
            index, maxpb.MaxpbReport.AccessoryStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.AccessoryStatus accessories = 17;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MAXIO
       * </pre>
       */
      public java.util.List<maxpb.MaxpbReport.AccessoryStatus.Builder> 
           getAccessoriesBuilderList() {
        return getAccessoriesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbReport.AccessoryStatus, maxpb.MaxpbReport.AccessoryStatus.Builder, maxpb.MaxpbReport.AccessoryStatusOrBuilder> 
          getAccessoriesFieldBuilder() {
        if (accessoriesBuilder_ == null) {
          accessoriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbReport.AccessoryStatus, maxpb.MaxpbReport.AccessoryStatus.Builder, maxpb.MaxpbReport.AccessoryStatusOrBuilder>(
                  accessories_,
                  ((bitField0_ & 0x00010000) == 0x00010000),
                  getParentForChildren(),
                  isClean());
          accessories_ = null;
        }
        return accessoriesBuilder_;
      }

      private maxpb.MaxpbIoexpander.VehicleSignature vehicleSignature_ = maxpb.MaxpbIoexpander.VehicleSignature.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbIoexpander.VehicleSignature, maxpb.MaxpbIoexpander.VehicleSignature.Builder, maxpb.MaxpbIoexpander.VehicleSignatureOrBuilder> vehicleSignatureBuilder_;
      /**
       * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public boolean hasVehicleSignature() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public maxpb.MaxpbIoexpander.VehicleSignature getVehicleSignature() {
        if (vehicleSignatureBuilder_ == null) {
          return vehicleSignature_;
        } else {
          return vehicleSignatureBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public Builder setVehicleSignature(maxpb.MaxpbIoexpander.VehicleSignature value) {
        if (vehicleSignatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vehicleSignature_ = value;
          onChanged();
        } else {
          vehicleSignatureBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public Builder setVehicleSignature(
          maxpb.MaxpbIoexpander.VehicleSignature.Builder builderForValue) {
        if (vehicleSignatureBuilder_ == null) {
          vehicleSignature_ = builderForValue.build();
          onChanged();
        } else {
          vehicleSignatureBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public Builder mergeVehicleSignature(maxpb.MaxpbIoexpander.VehicleSignature value) {
        if (vehicleSignatureBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000) &&
              vehicleSignature_ != maxpb.MaxpbIoexpander.VehicleSignature.getDefaultInstance()) {
            vehicleSignature_ =
              maxpb.MaxpbIoexpander.VehicleSignature.newBuilder(vehicleSignature_).mergeFrom(value).buildPartial();
          } else {
            vehicleSignature_ = value;
          }
          onChanged();
        } else {
          vehicleSignatureBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public Builder clearVehicleSignature() {
        if (vehicleSignatureBuilder_ == null) {
          vehicleSignature_ = maxpb.MaxpbIoexpander.VehicleSignature.getDefaultInstance();
          onChanged();
        } else {
          vehicleSignatureBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public maxpb.MaxpbIoexpander.VehicleSignature.Builder getVehicleSignatureBuilder() {
        bitField0_ |= 0x00020000;
        onChanged();
        return getVehicleSignatureFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
       * </pre>
       */
      public maxpb.MaxpbIoexpander.VehicleSignatureOrBuilder getVehicleSignatureOrBuilder() {
        if (vehicleSignatureBuilder_ != null) {
          return vehicleSignatureBuilder_.getMessageOrBuilder();
        } else {
          return vehicleSignature_;
        }
      }
      /**
       * <code>optional .maxpb.VehicleSignature vehicleSignature = 18;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: MXT162, MAXIO
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbIoexpander.VehicleSignature, maxpb.MaxpbIoexpander.VehicleSignature.Builder, maxpb.MaxpbIoexpander.VehicleSignatureOrBuilder> 
          getVehicleSignatureFieldBuilder() {
        if (vehicleSignatureBuilder_ == null) {
          vehicleSignatureBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbIoexpander.VehicleSignature, maxpb.MaxpbIoexpander.VehicleSignature.Builder, maxpb.MaxpbIoexpander.VehicleSignatureOrBuilder>(
                  getVehicleSignature(),
                  getParentForChildren(),
                  isClean());
          vehicleSignature_ = null;
        }
        return vehicleSignatureBuilder_;
      }

      private maxpb.MaxpbAccessories.ProductModel product_ = maxpb.MaxpbAccessories.ProductModel.DT_NONE;
      /**
       * <code>optional .maxpb.ProductModel product = 19;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40, MAXIO
       * </pre>
       */
      public boolean hasProduct() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .maxpb.ProductModel product = 19;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40, MAXIO
       * </pre>
       */
      public maxpb.MaxpbAccessories.ProductModel getProduct() {
        return product_;
      }
      /**
       * <code>optional .maxpb.ProductModel product = 19;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40, MAXIO
       * </pre>
       */
      public Builder setProduct(maxpb.MaxpbAccessories.ProductModel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00040000;
        product_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.ProductModel product = 19;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180, A40, MAXIO
       * </pre>
       */
      public Builder clearProduct() {
        bitField0_ = (bitField0_ & ~0x00040000);
        product_ = maxpb.MaxpbAccessories.ProductModel.DT_NONE;
        onChanged();
        return this;
      }

      private maxpb.MaxpbCustomerData.CustomerData customerData_ = maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbCustomerData.CustomerData, maxpb.MaxpbCustomerData.CustomerData.Builder, maxpb.MaxpbCustomerData.CustomerDataOrBuilder> customerDataBuilder_;
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public boolean hasCustomerData() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbCustomerData.CustomerData getCustomerData() {
        if (customerDataBuilder_ == null) {
          return customerData_;
        } else {
          return customerDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public Builder setCustomerData(maxpb.MaxpbCustomerData.CustomerData value) {
        if (customerDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          customerData_ = value;
          onChanged();
        } else {
          customerDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public Builder setCustomerData(
          maxpb.MaxpbCustomerData.CustomerData.Builder builderForValue) {
        if (customerDataBuilder_ == null) {
          customerData_ = builderForValue.build();
          onChanged();
        } else {
          customerDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public Builder mergeCustomerData(maxpb.MaxpbCustomerData.CustomerData value) {
        if (customerDataBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000) &&
              customerData_ != maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance()) {
            customerData_ =
              maxpb.MaxpbCustomerData.CustomerData.newBuilder(customerData_).mergeFrom(value).buildPartial();
          } else {
            customerData_ = value;
          }
          onChanged();
        } else {
          customerDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public Builder clearCustomerData() {
        if (customerDataBuilder_ == null) {
          customerData_ = maxpb.MaxpbCustomerData.CustomerData.getDefaultInstance();
          onChanged();
        } else {
          customerDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbCustomerData.CustomerData.Builder getCustomerDataBuilder() {
        bitField0_ |= 0x00080000;
        onChanged();
        return getCustomerDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbCustomerData.CustomerDataOrBuilder getCustomerDataOrBuilder() {
        if (customerDataBuilder_ != null) {
          return customerDataBuilder_.getMessageOrBuilder();
        } else {
          return customerData_;
        }
      }
      /**
       * <code>optional .maxpb.CustomerData customerData = 128;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          maxpb.MaxpbCustomerData.CustomerData, maxpb.MaxpbCustomerData.CustomerData.Builder, maxpb.MaxpbCustomerData.CustomerDataOrBuilder> 
          getCustomerDataFieldBuilder() {
        if (customerDataBuilder_ == null) {
          customerDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              maxpb.MaxpbCustomerData.CustomerData, maxpb.MaxpbCustomerData.CustomerData.Builder, maxpb.MaxpbCustomerData.CustomerDataOrBuilder>(
                  getCustomerData(),
                  getParentForChildren(),
                  isClean());
          customerData_ = null;
        }
        return customerDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.ReportStatus)
    }

    static {
      defaultInstance = new ReportStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.ReportStatus)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_DeviceEventsTransmissionMask_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_DeviceEventsTransmissionMask_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_DeviceEvents_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_DeviceEvents_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_EmbeddedActionEvents_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_EmbeddedActionEvents_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_DriverEvents_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_DriverEvents_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_Events_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_Events_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_PositionInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_PositionInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_CellInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_CellInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_ConnectionInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_ConnectionInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_DeviceInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_DeviceInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_OperationalInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_OperationalInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_FlagsInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_FlagsInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_ReportAccessories_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_ReportAccessories_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_ReportData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_ReportData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_IDPack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_IDPack_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_MultipleReportData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_MultipleReportData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_MultipleReportDataOldCorrupted_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_MultipleReportDataOldCorrupted_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_AccessoryStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_AccessoryStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_ReportStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_ReportStatus_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022maxpb_report.proto\022\005maxpb\032\030maxpb_filet" +
      "ransfer.proto\032\026maxpb_geographic.proto\032\017m" +
      "axpb_gps.proto\032\021maxpb_debug.proto\032\020maxpb" +
      "_gpio.proto\032\025maxpb_telemetry.proto\032\027maxp" +
      "b_accessories.proto\032\030maxpb_transmission." +
      "proto\032\031maxpb_customer_data.proto\032\026maxpb_" +
      "ioexpander.proto\"\247\005\n\034DeviceEventsTransmi" +
      "ssionMask\022\025\n\rconfigChanged\030\001 \001(\r\022\020\n\010gpsF" +
      "ixed\030\002 \001(\r\022\020\n\010ignition\030\003 \001(\r\022\r\n\005panic\030\004 " +
      "\001(\r\022\025\n\rexternalPower\030\005 \001(\r\022\022\n\ngpsAntenna",
      "\030\006 \001(\r\022\017\n\007battery\030\007 \001(\r\022\017\n\007jamming\030\010 \001(\r" +
      "\022\026\n\016enterDeepSleep\030\t \001(\r\022\017\n\007lbsInfo\030\n \001(" +
      "\r\022\r\n\005alarm\030\013 \001(\r\022\026\n\016reconstruction\030\014 \001(\r" +
      "\022\021\n\temergency\030\r \001(\r\022\016\n\006input1\0302 \001(\r\022\016\n\006i" +
      "nput2\0303 \001(\r\022\016\n\006input3\0304 \001(\r\022\016\n\006input4\0305 " +
      "\001(\r\022\016\n\006input5\0306 \001(\r\022\016\n\006input6\0307 \001(\r\022\016\n\006i" +
      "nput7\0308 \001(\r\022\016\n\006input8\0309 \001(\r\022\016\n\006input9\030: " +
      "\001(\r\022\017\n\007input10\030; \001(\r\022\017\n\007input11\030< \001(\r\022\017\n" +
      "\007input12\030= \001(\r\022\017\n\007input13\030> \001(\r\022\017\n\007input" +
      "14\030? \001(\r\022\017\n\007input15\030@ \001(\r\022\017\n\007input16\030A \001",
      "(\r\022\017\n\007output1\030d \001(\r\022\017\n\007output2\030e \001(\r\022\017\n\007" +
      "output3\030f \001(\r\022\017\n\007output4\030g \001(\r\022\017\n\007output" +
      "5\030h \001(\r\022\017\n\007output6\030i \001(\r\022\017\n\007output7\030j \001(" +
      "\r\022\017\n\007output8\030k \001(\r\"3\n\014DeviceEvents\022#\n\007ev" +
      "entID\030\001 \002(\0162\022.maxpb.DeviceEvent\"9\n\024Embed" +
      "dedActionEvents\022\017\n\007eventID\030\001 \002(\r\022\020\n\010dura" +
      "tion\030\002 \001(\r\"{\n\014DriverEvents\022\"\n\007eventID\030\001 " +
      "\002(\0162\021.maxpb.LoginEvent\022\020\n\010driverID\030\002 \002(\004" +
      "\022#\n\tloginType\030\003 \001(\0162\020.maxpb.LoginType\022\020\n" +
      "\010duration\030\004 \001(\r\"\331\001\n\006Events\022#\n\006device\030\001 \003",
      "(\0132\023.maxpb.DeviceEvents\022)\n\ttelemetry\030\002 \003" +
      "(\0132\026.maxpb.TelemetryEvents\022+\n\ngeographic" +
      "\030\003 \003(\0132\027.maxpb.GeographicEvents\022,\n\007actio" +
      "ns\030\004 \003(\0132\033.maxpb.EmbeddedActionEvents\022$\n" +
      "\007drivers\030\005 \003(\0132\023.maxpb.DriverEvents\"\207\002\n\014" +
      "PositionInfo\022-\n\016positionSource\030\001 \002(\0162\025.m" +
      "axpb.PositionSource\022-\n\016positionFormat\030\002 " +
      "\002(\0162\025.maxpb.PositionFormat\022\020\n\010latitude\030\003" +
      " \002(\017\022\021\n\tlongitude\030\004 \002(\017\022\020\n\010altitude\030\005 \001(" +
      "\005\022\036\n\026estimatedPositionError\030\006 \001(\005\022\030\n\020dir",
      "ectionDegrees\030\007 \001(\005\022(\n\020directionHeading\030" +
      "\010 \001(\0162\016.maxpb.Heading\"v\n\010CellInfo\022\013\n\003mcc" +
      "\030\001 \001(\r\022\013\n\003mnc\030\002 \001(\r\022\013\n\003lac\030\003 \001(\r\022\016\n\006cell" +
      "ID\030\004 \001(\r\022\013\n\003age\030\005 \001(\r\022\017\n\007rxLevel\030\006 \001(\r\022\025" +
      "\n\rtimingAdvance\030\007 \001(\r\"\274\002\n\016ConnectionInfo" +
      "\022-\n\016connectionType\030\001 \001(\0162\025.maxpb.Connect" +
      "ionType\022\017\n\007jamming\030\002 \001(\010\022$\n\014simCardInUse" +
      "\030\003 \001(\0162\016.maxpb.SimCard\022\013\n\003csq\030\004 \001(\r\022\020\n\010c" +
      "sqLevel\030\005 \001(\r\0220\n\023currentRegistration\030\006 \001" +
      "(\0162\023.maxpb.Registration\022$\n\013currentCell\030\007",
      " \001(\0132\017.maxpb.CellInfo\022\034\n\003lbs\030\010 \003(\0132\017.max" +
      "pb.CellInfo\022/\n\017connectionState\030\t \001(\0162\026.m" +
      "axpb.ConnectionState\"\332\002\n\nDeviceInfo\022\025\n\re" +
      "xtPowerState\030\001 \001(\010\022\025\n\rextPowerValue\030\002 \001(" +
      "\r\022&\n\tbattState\030\003 \001(\0162\023.maxpb.BatteryStat" +
      "e\022\023\n\013battPercent\030\004 \001(\r\022\021\n\tbattValue\030\005 \001(" +
      "\r\022%\n\npowerState\030\006 \001(\0162\021.maxpb.PowerState" +
      "\022\026\n\016primarySimCard\030\007 \001(\010\022\030\n\020secondarySim" +
      "Card\030\010 \001(\010\022\023\n\013temperature\030\t \001(\005\022\016\n\006uptim" +
      "e\030\n \001(\r\022\020\n\010lifeTime\030\013 \001(\r\022\021\n\tbattInUse\030\014",
      " \001(\r\022+\n\017lastResetReason\030\r \001(\0162\022.maxpb.Re" +
      "setReason\"l\n\017OperationalInfo\022\r\n\005panic\030\001 " +
      "\001(\010\022 \n\005alarm\030\002 \001(\0162\021.maxpb.AlarmState\022(\n" +
      "\temergency\030\003 \001(\0162\025.maxpb.EmergencyState\"" +
      "\222\001\n\tFlagsInfo\022%\n\ndeviceInfo\030\001 \001(\0132\021.maxp" +
      "b.DeviceInfo\022-\n\016connectionInfo\030\002 \001(\0132\025.m" +
      "axpb.ConnectionInfo\022/\n\017operationalInfo\030\003" +
      " \001(\0132\026.maxpb.OperationalInfo\"\355\002\n\021ReportA" +
      "ccessories\022\020\n\010deviceID\030\001 \001(\004\022)\n\022identifi" +
      "cationPack\030\002 \001(\0132\r.maxpb.IDPack\022\026\n\016seque",
      "nceNumber\030\003 \001(\r\022#\n\006reason\030\004 \001(\0162\023.maxpb." +
      "ReportReason\022\020\n\010dateTime\030\005 \001(\004\022)\n\014positi" +
      "onInfo\030\006 \003(\0132\023.maxpb.PositionInfo\022\033\n\003gps" +
      "\030\007 \001(\0132\016.maxpb.GpsInfo\022\033\n\003ios\030\010 \001(\0132\016.ma" +
      "xpb.IOsInfo\022\037\n\005flags\030\t \001(\0132\020.maxpb.Flags" +
      "Info\022\'\n\ttelemetry\030\n \001(\0132\024.maxpb.Telemetr" +
      "yInfo\022\035\n\006events\030\013 \001(\0132\r.maxpb.Events\"\202\003\n" +
      "\nReportData\022\026\n\016sequenceNumber\030\001 \002(\r\022#\n\006r" +
      "eason\030\002 \002(\0162\023.maxpb.ReportReason\022\020\n\010date" +
      "Time\030\003 \002(\004\022)\n\014positionInfo\030\004 \003(\0132\023.maxpb",
      ".PositionInfo\022\033\n\003gps\030\005 \001(\0132\016.maxpb.GpsIn" +
      "fo\022\033\n\003ios\030\006 \001(\0132\016.maxpb.IOsInfo\022\037\n\005flags" +
      "\030\007 \001(\0132\020.maxpb.FlagsInfo\022\'\n\ttelemetry\030\010 " +
      "\001(\0132\024.maxpb.TelemetryInfo\022\035\n\006events\030\t \001(" +
      "\0132\r.maxpb.Events\022\020\n\010openData\030\n \001(\014\022\026\n\016re" +
      "construction\030\013 \001(\014\022-\n\013accessories\030\014 \003(\0132" +
      "\030.maxpb.ReportAccessories\"\305\001\n\006IDPack\022\014\n\004" +
      "imei\030\001 \001(\004\022\014\n\004ieee\030\002 \001(\004\022\022\n\ncostumerID\030\003" +
      " \001(\004\022\021\n\tvehicleID\030\004 \001(\004\022\021\n\tsessionID\030\005 \001" +
      "(\014\022\021\n\tloraP2pID\030\006 \001(\r\022\022\n\nloraWanEUI\030\007 \001(",
      "\004\022\027\n\017loraWanDeviceID\030\010 \001(\004\022\023\n\013deviceIDSt" +
      "r\030\t \001(\t\022\020\n\010uniqueID\030\n \001(\014\"\343\001\n\022MultipleRe" +
      "portData\022\020\n\010deviceID\030\001 \002(\004\022\020\n\010packetID\030\002" +
      " \002(\004\022)\n\022identificationPack\030\003 \001(\0132\r.maxpb" +
      ".IDPack\022(\n\rnewReportData\030\004 \001(\0132\021.maxpb.R" +
      "eportData\022(\n\roldReportData\030\005 \003(\0132\021.maxpb" +
      ".ReportData\022*\n\014customerData\030\200\001 \001(\0132\023.max" +
      "pb.CustomerData\"\334\001\n\036MultipleReportDataOl" +
      "dCorrupted\022\020\n\010deviceID\030\001 \002(\004\022\020\n\010packetID" +
      "\030\002 \002(\004\022)\n\022identificationPack\030\003 \001(\0132\r.max",
      "pb.IDPack\022(\n\rnewReportData\030\004 \001(\0132\021.maxpb" +
      ".ReportData\022\025\n\roldReportData\030\005 \003(\t\022*\n\014cu" +
      "stomerData\030\200\001 \001(\0132\023.maxpb.CustomerData\"\271" +
      "\003\n\017AccessoryStatus\022\020\n\010deviceID\030\001 \002(\004\022)\n\022" +
      "identificationPack\030\003 \001(\0132\r.maxpb.IDPack\022" +
      "\020\n\010datetime\030\004 \001(\004\022\036\n\005files\030\005 \003(\0132\017.maxpb" +
      ".FileInfo\022\025\n\rboardRevision\030\007 \001(\r\022\r\n\005macB" +
      "T\030\n \001(\t\022\017\n\007macWIFI\030\013 \001(\t\022+\n\017lastResetRea" +
      "son\030\014 \001(\0162\022.maxpb.ResetReason\022\030\n\020passwor" +
      "dRequired\030\r \001(\010\0223\n\017virtualIgnition\030\016 \001(\013",
      "2\032.maxpb.VirtualIgnitionInfo\022+\n\ndiagnost" +
      "ic\030\017 \001(\0132\027.maxpb.DiagnosticPacket\0221\n\020veh" +
      "icleSignature\030\022 \001(\0132\027.maxpb.VehicleSigna" +
      "ture\022$\n\007product\030\023 \001(\0162\023.maxpb.ProductMod" +
      "el\"\364\004\n\014ReportStatus\022\020\n\010deviceID\030\001 \002(\004\022\021\n" +
      "\tcommandID\030\002 \002(\004\022)\n\022identificationPack\030\003" +
      " \001(\0132\r.maxpb.IDPack\022\020\n\010datetime\030\004 \002(\004\022\036\n" +
      "\005files\030\005 \003(\0132\017.maxpb.FileInfo\022\022\n\ndeviceT" +
      "ype\030\006 \001(\r\022\025\n\rboardRevision\030\007 \001(\r\022\024\n\014prim" +
      "aryICCID\030\010 \001(\t\022\026\n\016secondaryICCID\030\t \001(\t\022\r",
      "\n\005macBT\030\n \001(\t\022\017\n\007macWIFI\030\013 \001(\t\022+\n\017lastRe" +
      "setReason\030\014 \001(\0162\022.maxpb.ResetReason\022\030\n\020p" +
      "asswordRequired\030\r \001(\010\0223\n\017virtualIgnition" +
      "\030\016 \001(\0132\032.maxpb.VirtualIgnitionInfo\022+\n\ndi" +
      "agnostic\030\017 \001(\0132\027.maxpb.DiagnosticPacket\022" +
      "\016\n\006loraID\030\020 \001(\004\022+\n\013accessories\030\021 \003(\0132\026.m" +
      "axpb.AccessoryStatus\0221\n\020vehicleSignature" +
      "\030\022 \001(\0132\027.maxpb.VehicleSignature\022$\n\007produ" +
      "ct\030\023 \001(\0162\023.maxpb.ProductModel\022*\n\014custome" +
      "rData\030\200\001 \001(\0132\023.maxpb.CustomerData*\257\t\n\014Re",
      "portReason\022\017\n\013RR_SHUTDOWN\020\000\022\r\n\tRR_RFU_01" +
      "\020\001\022\r\n\tRR_RFU_02\020\002\022\r\n\tRR_RFU_03\020\003\022\027\n\023RR_H" +
      "IGH_TEMPERATURE\020\004\022\r\n\tRR_RFU_04\020\005\022\r\n\tRR_R" +
      "FU_05\020\006\022\r\n\tRR_RFU_06\020\007\022\035\n\031RR_PASSWORD_WR" +
      "ONG_3_TIMES\020\010\022\r\n\tRR_RFU_07\020\t\022\r\n\tRR_RFU_0" +
      "8\020\n\022\r\n\tRR_RFU_09\020\013\022\017\n\013RR_POWER_ON\020\014\022\r\n\tR" +
      "R_RFU_10\020\r\022\r\n\tRR_RFU_11\020\016\022\r\n\tRR_RFU_12\020\017" +
      "\022\r\n\tRR_EVENTS\020\020\022\r\n\tRR_RFU_13\020\021\022\r\n\tRR_RFU" +
      "_14\020\022\022\r\n\tRR_RFU_15\020\023\022\r\n\tRR_RFU_16\020\024\022\030\n\024R" +
      "R_DIRECTION_CHANGED\0202\022\031\n\025RR_DISTANCE_THR",
      "ESHOLD\0204\022\r\n\tRR_RFU_17\0205\022\r\n\tRR_RFU_18\0206\022\r" +
      "\n\tRR_RFU_19\0207\022\r\n\tRR_RFU_20\0208\022\r\n\tRR_RFU_2" +
      "1\0209\022\022\n\016RR_TIMER_PANIC\020<\022\r\n\tRR_RFU_22\020=\022\023" +
      "\n\017RR_TIMER_JAMMER\020>\022\r\n\tRR_RFU_23\020?\022\024\n\020RR" +
      "_TIMER_BATTERY\020@\022\r\n\tRR_RFU_24\020A\022\022\n\016RR_TI" +
      "MER_SLEEP\020B\022\r\n\tRR_RFU_25\020C\022\026\n\022RR_TIMER_L" +
      "OW_POWER\020D\022\r\n\tRR_RFU_26\020E\022\032\n\026RR_TIMER_IG" +
      "N_ON_MOVING\020F\022\r\n\tRR_RFU_27\020G\022\030\n\024RR_TIMER" +
      "_IGN_ON_STOP\020H\022\r\n\tRR_RFU_28\020I\022\033\n\027RR_TIME" +
      "R_IGN_OFF_MOVING\020J\022\r\n\tRR_RFU_29\020K\022\031\n\025RR_",
      "TIMER_IGN_OFF_STOP\020L\022\r\n\tRR_RFU_30\020M\022\034\n\030R" +
      "R_TIMER_PORTABLE_MOVING\020N\022\r\n\tRR_RFU_32\020O" +
      "\022\032\n\026RR_TIMER_PORTABLE_STOP\020P\022\r\n\tRR_RFU_3" +
      "4\020Q\022\027\n\023RR_LORA_REPORT_DATA\020d\022\r\n\tRR_RFU_3" +
      "5\020e\022\036\n\032RR_ACCESSORIES_REPORT_DATA\020f\022\r\n\tR" +
      "R_RFU_37\020g\022\r\n\tRR_RFU_38\020h\022\r\n\tRR_RFU_39\020i" +
      "\022\025\n\021RR_RECONSTRUCTION\020}\022\027\n\023RR_PASSWORD_C" +
      "HANGED\020~\022\031\n\025RR_SERVER_REQUISITION\020\177\022\016\n\tR" +
      "R_RFU_40\020\200\001\022\016\n\tRR_RFU_41\020\201\001\022\016\n\tRR_RFU_42" +
      "\020\202\001\022\016\n\tRR_RFU_43\020\203\001\022\016\n\tRR_RFU_44\020\204\001*k\n\014R",
      "eportEvents\022\013\n\007RE_NONE\020\000\022\r\n\tRE_ENABLE\020\001\022" +
      "\025\n\021RE_WIFI_BT_SERIAL\020\002\022\t\n\005RE_RF\020\004\022\013\n\007RE_" +
      "GPRS\020\010\022\020\n\014RE_SATELITTE\020\020*\335\r\n\013DeviceEvent" +
      "\022\013\n\007DE_NONE\020\000\022\025\n\021DE_CONFIG_CHANGED\020\001\022\020\n\014" +
      "DE_GPS_FIXED\020\002\022\023\n\017DE_GPS_FIX_LOST\020\003\022\022\n\016D" +
      "E_IGNITION_ON\020\004\022\023\n\017DE_IGNITION_OFF\020\005\022\026\n\022" +
      "DE_PANIC_ACTIVATED\020\006\022\030\n\024DE_PANIC_DEACTIV" +
      "ATED\020\007\022\024\n\020DE_EXTPOWER_FAIL\020\010\022\022\n\016DE_EXTPO" +
      "WER_OK\020\t\022\027\n\023DE_GPS_ANTENNA_FAIL\020\n\022\025\n\021DE_" +
      "GPS_ANTENNA_OK\020\013\022\023\n\017DE_BATTERY_FAIL\020\014\022\021\n",
      "\rDE_BATTERY_OK\020\r\022\024\n\020DE_JAMMING_START\020\016\022\022" +
      "\n\016DE_JAMMING_END\020\017\022\"\n\036DE_VIRTUAL_IGNITIO" +
      "N_CALIBRATED\020\020\022\027\n\023DE_ENTER_DEEP_SLEEP\020\021\022" +
      "\017\n\013DE_LBS_INFO\020\022\022\034\n\030DE_IGNITION_MODE_CHA" +
      "NGED\020\023\022\032\n\026DE_ALARM_STATE_CHANGED\020\024\022\r\n\tDE" +
      "_RFU_00\020\025\022\025\n\021DE_GPRS_CONNECTED\020\026\022!\n\035DE_T" +
      "RANSMISSION_RETRIES_LIMIT\020\027\022\032\n\026DE_TRIP_R" +
      "ECONSTRUCTION\020\030\022\036\n\032DE_EMERGENCY_STATE_CH" +
      "ANGED\020\031\022\r\n\tDE_RFU_01\020\032\022\r\n\tDE_RFU_02\020\033\022\r\n" +
      "\tDE_RFU_03\020\034\022\r\n\tDE_RFU_04\020\035\022\r\n\tDE_RFU_05",
      "\020\036\022\r\n\tDE_RFU_06\020\037\022\r\n\tDE_RFU_07\020 \022\r\n\tDE_R" +
      "FU_08\020!\022\r\n\tDE_RFU_09\020\"\022\r\n\tDE_RFU_10\020#\022\032\n" +
      "\026DE_INPUT1_STATE_CHANGE\0202\022\032\n\026DE_INPUT2_S" +
      "TATE_CHANGE\0203\022\032\n\026DE_INPUT3_STATE_CHANGE\020" +
      "4\022\032\n\026DE_INPUT4_STATE_CHANGE\0205\022\032\n\026DE_INPU" +
      "T5_STATE_CHANGE\0206\022\032\n\026DE_INPUT6_STATE_CHA" +
      "NGE\0207\022\032\n\026DE_INPUT7_STATE_CHANGE\0208\022\032\n\026DE_" +
      "INPUT8_STATE_CHANGE\0209\022\032\n\026DE_INPUT9_STATE" +
      "_CHANGE\020:\022\033\n\027DE_INPUT10_STATE_CHANGE\020;\022\033" +
      "\n\027DE_INPUT11_STATE_CHANGE\020<\022\033\n\027DE_INPUT1",
      "2_STATE_CHANGE\020=\022\033\n\027DE_INPUT13_STATE_CHA" +
      "NGE\020>\022\033\n\027DE_INPUT14_STATE_CHANGE\020?\022\033\n\027DE" +
      "_INPUT15_STATE_CHANGE\020@\022\033\n\027DE_INPUT16_ST" +
      "ATE_CHANGE\020A\022\r\n\tDE_RFU_11\020B\022\r\n\tDE_RFU_12" +
      "\020C\022\r\n\tDE_RFU_13\020D\022\r\n\tDE_RFU_14\020E\022\r\n\tDE_R" +
      "FU_15\020F\022\r\n\tDE_RFU_16\020G\022\r\n\tDE_RFU_17\020H\022\r\n" +
      "\tDE_RFU_18\020I\022\r\n\tDE_RFU_19\020J\022\r\n\tDE_RFU_20" +
      "\020K\022\033\n\027DE_OUTPUT1_STATE_CHANGE\020d\022\033\n\027DE_OU" +
      "TPUT2_STATE_CHANGE\020e\022\033\n\027DE_OUTPUT3_STATE" +
      "_CHANGE\020f\022\033\n\027DE_OUTPUT4_STATE_CHANGE\020g\022\033",
      "\n\027DE_OUTPUT5_STATE_CHANGE\020h\022\033\n\027DE_OUTPUT" +
      "6_STATE_CHANGE\020i\022\033\n\027DE_OUTPUT7_STATE_CHA" +
      "NGE\020j\022\033\n\027DE_OUTPUT8_STATE_CHANGE\020k\022\r\n\tDE" +
      "_RFU_21\020l\022\r\n\tDE_RFU_22\020m\022\r\n\tDE_RFU_23\020n\022" +
      "\r\n\tDE_RFU_24\020o\022\r\n\tDE_RFU_25\020p\022\r\n\tDE_RFU_" +
      "26\020q\022\r\n\tDE_RFU_27\020r\022\r\n\tDE_RFU_28\020s\022\r\n\tDE" +
      "_RFU_29\020t\022\r\n\tDE_RFU_30\020u*\220\001\n\016PositionSou" +
      "rce\022\n\n\006PS_GPS\020\000\022\n\n\006PS_LBS\020\001\022\013\n\007PS_LORA\020\002" +
      "\022\016\n\nPS_GLONASS\020\003\022\r\n\tPS_RFU_01\020\004\022\r\n\tPS_RF" +
      "U_02\020\005\022\r\n\tPS_RFU_03\020\006\022\r\n\tPS_RFU_04\020\007\022\r\n\t",
      "PS_RFU_05\020\010*\314\001\n\016PositionFormat\022\025\n\021PF_SOU" +
      "RCE_DEFAULT\020\000\022\014\n\010PF_WGS84\020\001\022\014\n\010PF_SAD69\020" +
      "\002\022\013\n\007PF_PZ90\020\003\022\013\n\007PF_GTRF\020\004\022\017\n\013PF_CGCS20" +
      "00\020\005\022\021\n\rPF_SIRGAS2000\020\006\022\r\n\tPF_RFU_01\020\007\022\r" +
      "\n\tPF_RFU_02\020\010\022\r\n\tPF_RFU_03\020\t\022\r\n\tPF_RFU_0" +
      "4\020\n\022\r\n\tPF_RFU_05\020\013*\247\001\n\nPowerState\022\r\n\tPS_" +
      "NORMAL\020\000\022\014\n\010PS_SLEEP\020\001\022\020\n\014PS_LOW_POWER\020\002" +
      "\022\014\n\010PS_STOCK\020\003\022\014\n\010PS_RESET\020\004\022\016\n\nPST_RFU_" +
      "01\020\005\022\016\n\nPST_RFU_02\020\006\022\016\n\nPST_RFU_03\020\007\022\016\n\n" +
      "PST_RFU_04\020\010\022\016\n\nPST_RFU_05\020\t*\237\001\n\017Connect",
      "ionState\022\023\n\017CT_DISCONNECTED\020\000\022\020\n\014CT_CONN" +
      "ECTED\020\001\022\032\n\026CT_SOCKET_ESTABILISHED\020\002\022\r\n\tC" +
      "T_RFU_01\020\003\022\r\n\tCT_RFU_02\020\004\022\r\n\tCT_RFU_03\020\005" +
      "\022\r\n\tCT_RFU_04\020\006\022\r\n\tCT_RFU_05\020\007*\222\001\n\016Conne" +
      "ctionType\022\r\n\tCONN_NONE\020\000\022\r\n\tCONN_GPRS\020\001\022" +
      "\r\n\tCONN_WIFI\020\002\022\017\n\013CONN_RFU_01\020\003\022\017\n\013CONN_" +
      "RFU_02\020\004\022\017\n\013CONN_RFU_03\020\005\022\017\n\013CONN_RFU_04" +
      "\020\006\022\017\n\013CONN_RFU_05\020\007*\203\001\n\007SimCard\022\013\n\007SC_NO" +
      "NE\020\000\022\016\n\nSC_PRIMARY\020\001\022\020\n\014SC_SECONDARY\020\002\022\r" +
      "\n\tSC_RFU_01\020\003\022\r\n\tSC_RFU_02\020\004\022\r\n\tSC_RFU_0",
      "3\020\005\022\r\n\tSC_RFU_04\020\006\022\r\n\tSC_RFU_05\020\007*\301\001\n\014Ba" +
      "tteryState\022\021\n\rBATT_CHARGING\020\000\022\021\n\rBATT_CO" +
      "MPLETE\020\001\022\016\n\nBATT_FAULT\020\002\022\024\n\020BATT_DISCHAR" +
      "GING\020\003\022\020\n\014BATT_MISSING\020\004\022\017\n\013BATT_RFU_01\020" +
      "\005\022\017\n\013BATT_RFU_02\020\006\022\017\n\013BATT_RFU_03\020\007\022\017\n\013B" +
      "ATT_RFU_04\020\010\022\017\n\013BATT_RFU_05\020\t*\262\002\n\014Regist" +
      "ration\022\026\n\022REG_NOT_REGISTERED\020\000\022\022\n\016REG_RE" +
      "GISTERED\020\001\022\021\n\rREG_SEARCHING\020\002\022\016\n\nREG_DEN" +
      "IED\020\003\022\017\n\013REG_UNKNOWN\020\004\022\017\n\013REG_ROAMING\020\005\022" +
      "\020\n\014REG_SMS_ONLY\020\006\022\030\n\024REG_SMS_ONLY_ROAMIN",
      "G\020\007\022\021\n\rREG_EMERGENCY\020\010\022\014\n\010REG_CSFB\020\t\022\024\n\020" +
      "REG_CSFB_ROAMING\020\n\022\016\n\nREG_RFU_01\020\013\022\016\n\nRE" +
      "G_RFU_02\020\014\022\016\n\nREG_RFU_03\020\r\022\016\n\nREG_RFU_04" +
      "\020\016\022\016\n\nREG_RFU_05\020\017*\371\001\n\nAlarmState\022\026\n\022ALM" +
      "_ST_DEACTIVATED\020\000\022\036\n\032ALM_ST_ACTIVATE_IN_" +
      "PROCESS\020\001\022\024\n\020ALM_ST_ACTIVATED\020\002\022\033\n\027ALM_S" +
      "T_ALARM_IN_PROCESS\020\003\022\022\n\016ALM_ST_ALARMED\020\004" +
      "\022\034\n\030ALM_ST_PARTIAL_ACTIVATED\020\005\022\016\n\nALM_RF" +
      "U_01\020\006\022\016\n\nALM_RFU_02\020\007\022\016\n\nALM_RFU_03\020\010\022\016" +
      "\n\nALM_RFU_04\020\t\022\016\n\nALM_RFU_05\020\n*\260\001\n\016Emerg",
      "encyState\022\026\n\022EME_ST_DEACTIVATED\020\000\022\024\n\020EME" +
      "_ST_ACTIVATED\020\001\022\021\n\rEME_ST_FORCED\020\002\022\021\n\rEM" +
      "E_ST_RFU_01\020\003\022\021\n\rEME_ST_RFU_02\020\004\022\021\n\rEME_" +
      "ST_RFU_03\020\005\022\021\n\rEME_ST_RFU_04\020\006\022\021\n\rEME_ST" +
      "_RFU_05\020\007*\267\001\n\tLoginType\022\013\n\007LT_NONE\020\000\022\r\n\t" +
      "LT_ZIGBEE\020\001\022\013\n\007LT_RFID\020\002\022\016\n\nLT_IBUTTON\020\003" +
      "\022\020\n\014LT_BLUETOOTH\020\004\022\024\n\020LT_DATA_TERMINAL\020\005" +
      "\022\r\n\tLT_RFU_01\020\006\022\r\n\tLT_RFU_02\020\007\022\r\n\tLT_RFU" +
      "_03\020\010\022\r\n\tLT_RFU_04\020\t\022\r\n\tLT_RFU_05\020\n*\257\001\n\n" +
      "LoginEvent\022\014\n\010LE_LOGIN\020\000\022\r\n\tLE_LOGOFF\020\001\022",
      "\026\n\022LE_LOGOFF_IGNITION\020\002\022\017\n\013LE_PRESENCE\020\003" +
      "\022\020\n\014LE_NOT_FOUND\020\004\022\r\n\tLE_RFU_01\020\005\022\r\n\tLE_" +
      "RFU_02\020\006\022\r\n\tLE_RFU_03\020\007\022\r\n\tLE_RFU_04\020\010\022\r" +
      "\n\tLE_RFU_05\020\t"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          maxpb.MaxpbFiletransfer.getDescriptor(),
          maxpb.MaxpbGeographic.getDescriptor(),
          maxpb.MaxpbGps.getDescriptor(),
          maxpb.MaxpbDebug.getDescriptor(),
          maxpb.MaxpbGpio.getDescriptor(),
          maxpb.MaxpbTelemetry.getDescriptor(),
          maxpb.MaxpbAccessories.getDescriptor(),
          maxpb.MaxpbTransmission.getDescriptor(),
          maxpb.MaxpbCustomerData.getDescriptor(),
          maxpb.MaxpbIoexpander.getDescriptor(),
        }, assigner);
    internal_static_maxpb_DeviceEventsTransmissionMask_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_maxpb_DeviceEventsTransmissionMask_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_DeviceEventsTransmissionMask_descriptor,
        new java.lang.String[] { "ConfigChanged", "GpsFixed", "Ignition", "Panic", "ExternalPower", "GpsAntenna", "Battery", "Jamming", "EnterDeepSleep", "LbsInfo", "Alarm", "Reconstruction", "Emergency", "Input1", "Input2", "Input3", "Input4", "Input5", "Input6", "Input7", "Input8", "Input9", "Input10", "Input11", "Input12", "Input13", "Input14", "Input15", "Input16", "Output1", "Output2", "Output3", "Output4", "Output5", "Output6", "Output7", "Output8", });
    internal_static_maxpb_DeviceEvents_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_maxpb_DeviceEvents_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_DeviceEvents_descriptor,
        new java.lang.String[] { "EventID", });
    internal_static_maxpb_EmbeddedActionEvents_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_maxpb_EmbeddedActionEvents_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_EmbeddedActionEvents_descriptor,
        new java.lang.String[] { "EventID", "Duration", });
    internal_static_maxpb_DriverEvents_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_maxpb_DriverEvents_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_DriverEvents_descriptor,
        new java.lang.String[] { "EventID", "DriverID", "LoginType", "Duration", });
    internal_static_maxpb_Events_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_maxpb_Events_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_Events_descriptor,
        new java.lang.String[] { "Device", "Telemetry", "Geographic", "Actions", "Drivers", });
    internal_static_maxpb_PositionInfo_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_maxpb_PositionInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_PositionInfo_descriptor,
        new java.lang.String[] { "PositionSource", "PositionFormat", "Latitude", "Longitude", "Altitude", "EstimatedPositionError", "DirectionDegrees", "DirectionHeading", });
    internal_static_maxpb_CellInfo_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_maxpb_CellInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_CellInfo_descriptor,
        new java.lang.String[] { "Mcc", "Mnc", "Lac", "CellID", "Age", "RxLevel", "TimingAdvance", });
    internal_static_maxpb_ConnectionInfo_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_maxpb_ConnectionInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_ConnectionInfo_descriptor,
        new java.lang.String[] { "ConnectionType", "Jamming", "SimCardInUse", "Csq", "CsqLevel", "CurrentRegistration", "CurrentCell", "Lbs", "ConnectionState", });
    internal_static_maxpb_DeviceInfo_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_maxpb_DeviceInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_DeviceInfo_descriptor,
        new java.lang.String[] { "ExtPowerState", "ExtPowerValue", "BattState", "BattPercent", "BattValue", "PowerState", "PrimarySimCard", "SecondarySimCard", "Temperature", "Uptime", "LifeTime", "BattInUse", "LastResetReason", });
    internal_static_maxpb_OperationalInfo_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_maxpb_OperationalInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_OperationalInfo_descriptor,
        new java.lang.String[] { "Panic", "Alarm", "Emergency", });
    internal_static_maxpb_FlagsInfo_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_maxpb_FlagsInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_FlagsInfo_descriptor,
        new java.lang.String[] { "DeviceInfo", "ConnectionInfo", "OperationalInfo", });
    internal_static_maxpb_ReportAccessories_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_maxpb_ReportAccessories_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_ReportAccessories_descriptor,
        new java.lang.String[] { "DeviceID", "IdentificationPack", "SequenceNumber", "Reason", "DateTime", "PositionInfo", "Gps", "Ios", "Flags", "Telemetry", "Events", });
    internal_static_maxpb_ReportData_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_maxpb_ReportData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_ReportData_descriptor,
        new java.lang.String[] { "SequenceNumber", "Reason", "DateTime", "PositionInfo", "Gps", "Ios", "Flags", "Telemetry", "Events", "OpenData", "Reconstruction", "Accessories", });
    internal_static_maxpb_IDPack_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_maxpb_IDPack_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_IDPack_descriptor,
        new java.lang.String[] { "Imei", "Ieee", "CostumerID", "VehicleID", "SessionID", "LoraP2PID", "LoraWanEUI", "LoraWanDeviceID", "DeviceIDStr", "UniqueID", });
    internal_static_maxpb_MultipleReportData_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_maxpb_MultipleReportData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_MultipleReportData_descriptor,
        new java.lang.String[] { "DeviceID", "PacketID", "IdentificationPack", "NewReportData", "OldReportData", "CustomerData", });
    internal_static_maxpb_MultipleReportDataOldCorrupted_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_maxpb_MultipleReportDataOldCorrupted_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_MultipleReportDataOldCorrupted_descriptor,
        new java.lang.String[] { "DeviceID", "PacketID", "IdentificationPack", "NewReportData", "OldReportData", "CustomerData", });
    internal_static_maxpb_AccessoryStatus_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_maxpb_AccessoryStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_AccessoryStatus_descriptor,
        new java.lang.String[] { "DeviceID", "IdentificationPack", "Datetime", "Files", "BoardRevision", "MacBT", "MacWIFI", "LastResetReason", "PasswordRequired", "VirtualIgnition", "Diagnostic", "VehicleSignature", "Product", });
    internal_static_maxpb_ReportStatus_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_maxpb_ReportStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_ReportStatus_descriptor,
        new java.lang.String[] { "DeviceID", "CommandID", "IdentificationPack", "Datetime", "Files", "DeviceType", "BoardRevision", "PrimaryICCID", "SecondaryICCID", "MacBT", "MacWIFI", "LastResetReason", "PasswordRequired", "VirtualIgnition", "Diagnostic", "LoraID", "Accessories", "VehicleSignature", "Product", "CustomerData", });
    maxpb.MaxpbFiletransfer.getDescriptor();
    maxpb.MaxpbGeographic.getDescriptor();
    maxpb.MaxpbGps.getDescriptor();
    maxpb.MaxpbDebug.getDescriptor();
    maxpb.MaxpbGpio.getDescriptor();
    maxpb.MaxpbTelemetry.getDescriptor();
    maxpb.MaxpbAccessories.getDescriptor();
    maxpb.MaxpbTransmission.getDescriptor();
    maxpb.MaxpbCustomerData.getDescriptor();
    maxpb.MaxpbIoexpander.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
