// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: maxpb_gps.proto

package maxpb;

public final class MaxpbGps {
  private MaxpbGps() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code maxpb.AntennaState}
   */
  public enum AntennaState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>AS_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    AS_NONE(0, 0),
    /**
     * <code>AS_OK = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142
     * </pre>
     */
    AS_OK(1, 1),
    /**
     * <code>AS_SHORT = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    AS_SHORT(2, 2),
    /**
     * <code>AS_OPEN = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142
     * </pre>
     */
    AS_OPEN(3, 3),
    /**
     * <code>AS_RFU_01 = 4;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    AS_RFU_01(4, 4),
    /**
     * <code>AS_RFU_02 = 5;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    AS_RFU_02(5, 5),
    /**
     * <code>AS_RFU_03 = 6;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    AS_RFU_03(6, 6),
    /**
     * <code>AS_RFU_04 = 7;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    AS_RFU_04(7, 7),
    /**
     * <code>AS_RFU_05 = 8;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    AS_RFU_05(8, 8),
    ;

    /**
     * <code>AS_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int AS_NONE_VALUE = 0;
    /**
     * <code>AS_OK = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142
     * </pre>
     */
    public static final int AS_OK_VALUE = 1;
    /**
     * <code>AS_SHORT = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public static final int AS_SHORT_VALUE = 2;
    /**
     * <code>AS_OPEN = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142
     * </pre>
     */
    public static final int AS_OPEN_VALUE = 3;
    /**
     * <code>AS_RFU_01 = 4;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int AS_RFU_01_VALUE = 4;
    /**
     * <code>AS_RFU_02 = 5;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int AS_RFU_02_VALUE = 5;
    /**
     * <code>AS_RFU_03 = 6;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int AS_RFU_03_VALUE = 6;
    /**
     * <code>AS_RFU_04 = 7;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int AS_RFU_04_VALUE = 7;
    /**
     * <code>AS_RFU_05 = 8;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int AS_RFU_05_VALUE = 8;


    public final int getNumber() { return value; }

    public static AntennaState valueOf(int value) {
      switch (value) {
        case 0: return AS_NONE;
        case 1: return AS_OK;
        case 2: return AS_SHORT;
        case 3: return AS_OPEN;
        case 4: return AS_RFU_01;
        case 5: return AS_RFU_02;
        case 6: return AS_RFU_03;
        case 7: return AS_RFU_04;
        case 8: return AS_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AntennaState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<AntennaState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AntennaState>() {
            public AntennaState findValueByNumber(int number) {
              return AntennaState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbGps.getDescriptor().getEnumTypes().get(0);
    }

    private static final AntennaState[] VALUES = values();

    public static AntennaState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private AntennaState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.AntennaState)
  }

  /**
   * Protobuf enum {@code maxpb.FixState}
   */
  public enum FixState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FS_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    FS_NONE(0, 0),
    /**
     * <code>FS_FIX_NOT_AVAILABLE = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    FS_FIX_NOT_AVAILABLE(1, 1),
    /**
     * <code>FS_FIX_2D = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    FS_FIX_2D(2, 2),
    /**
     * <code>FS_FIX_3D = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    FS_FIX_3D(3, 3),
    /**
     * <code>FS_RFU_01 = 4;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    FS_RFU_01(4, 4),
    /**
     * <code>FS_RFU_02 = 5;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    FS_RFU_02(5, 5),
    /**
     * <code>FS_RFU_03 = 6;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    FS_RFU_03(6, 6),
    /**
     * <code>FS_RFU_04 = 7;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    FS_RFU_04(7, 7),
    /**
     * <code>FS_RFU_05 = 8;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    FS_RFU_05(8, 8),
    ;

    /**
     * <code>FS_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int FS_NONE_VALUE = 0;
    /**
     * <code>FS_FIX_NOT_AVAILABLE = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int FS_FIX_NOT_AVAILABLE_VALUE = 1;
    /**
     * <code>FS_FIX_2D = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int FS_FIX_2D_VALUE = 2;
    /**
     * <code>FS_FIX_3D = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int FS_FIX_3D_VALUE = 3;
    /**
     * <code>FS_RFU_01 = 4;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int FS_RFU_01_VALUE = 4;
    /**
     * <code>FS_RFU_02 = 5;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int FS_RFU_02_VALUE = 5;
    /**
     * <code>FS_RFU_03 = 6;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int FS_RFU_03_VALUE = 6;
    /**
     * <code>FS_RFU_04 = 7;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int FS_RFU_04_VALUE = 7;
    /**
     * <code>FS_RFU_05 = 8;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int FS_RFU_05_VALUE = 8;


    public final int getNumber() { return value; }

    public static FixState valueOf(int value) {
      switch (value) {
        case 0: return FS_NONE;
        case 1: return FS_FIX_NOT_AVAILABLE;
        case 2: return FS_FIX_2D;
        case 3: return FS_FIX_3D;
        case 4: return FS_RFU_01;
        case 5: return FS_RFU_02;
        case 6: return FS_RFU_03;
        case 7: return FS_RFU_04;
        case 8: return FS_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FixState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<FixState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FixState>() {
            public FixState findValueByNumber(int number) {
              return FixState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbGps.getDescriptor().getEnumTypes().get(1);
    }

    private static final FixState[] VALUES = values();

    public static FixState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private FixState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.FixState)
  }

  /**
   * Protobuf enum {@code maxpb.FixQuality}
   */
  public enum FixQuality
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FQ_INVALID = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    FQ_INVALID(0, 0),
    /**
     * <code>FQ_GPS_FIX = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    FQ_GPS_FIX(1, 1),
    /**
     * <code>FQ_DGPS_FIX = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    FQ_DGPS_FIX(2, 2),
    /**
     * <code>FQ_REAL_TIME_KINEMATIC = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    FQ_REAL_TIME_KINEMATIC(3, 3),
    /**
     * <code>FQ_FLOAT_RTK = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    FQ_FLOAT_RTK(4, 4),
    /**
     * <code>FQ_ESTIMATED_DEAD_RECKONING = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    FQ_ESTIMATED_DEAD_RECKONING(5, 5),
    /**
     * <code>FQ_RFU_01 = 6;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    FQ_RFU_01(6, 6),
    /**
     * <code>FQ_RFU_02 = 7;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    FQ_RFU_02(7, 7),
    /**
     * <code>FQ_RFU_03 = 8;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    FQ_RFU_03(8, 8),
    /**
     * <code>FQ_RFU_04 = 9;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    FQ_RFU_04(9, 9),
    /**
     * <code>FQ_RFU_05 = 10;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    FQ_RFU_05(10, 10),
    ;

    /**
     * <code>FQ_INVALID = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int FQ_INVALID_VALUE = 0;
    /**
     * <code>FQ_GPS_FIX = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int FQ_GPS_FIX_VALUE = 1;
    /**
     * <code>FQ_DGPS_FIX = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int FQ_DGPS_FIX_VALUE = 2;
    /**
     * <code>FQ_REAL_TIME_KINEMATIC = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int FQ_REAL_TIME_KINEMATIC_VALUE = 3;
    /**
     * <code>FQ_FLOAT_RTK = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int FQ_FLOAT_RTK_VALUE = 4;
    /**
     * <code>FQ_ESTIMATED_DEAD_RECKONING = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int FQ_ESTIMATED_DEAD_RECKONING_VALUE = 5;
    /**
     * <code>FQ_RFU_01 = 6;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int FQ_RFU_01_VALUE = 6;
    /**
     * <code>FQ_RFU_02 = 7;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int FQ_RFU_02_VALUE = 7;
    /**
     * <code>FQ_RFU_03 = 8;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int FQ_RFU_03_VALUE = 8;
    /**
     * <code>FQ_RFU_04 = 9;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int FQ_RFU_04_VALUE = 9;
    /**
     * <code>FQ_RFU_05 = 10;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int FQ_RFU_05_VALUE = 10;


    public final int getNumber() { return value; }

    public static FixQuality valueOf(int value) {
      switch (value) {
        case 0: return FQ_INVALID;
        case 1: return FQ_GPS_FIX;
        case 2: return FQ_DGPS_FIX;
        case 3: return FQ_REAL_TIME_KINEMATIC;
        case 4: return FQ_FLOAT_RTK;
        case 5: return FQ_ESTIMATED_DEAD_RECKONING;
        case 6: return FQ_RFU_01;
        case 7: return FQ_RFU_02;
        case 8: return FQ_RFU_03;
        case 9: return FQ_RFU_04;
        case 10: return FQ_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FixQuality>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<FixQuality>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FixQuality>() {
            public FixQuality findValueByNumber(int number) {
              return FixQuality.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbGps.getDescriptor().getEnumTypes().get(2);
    }

    private static final FixQuality[] VALUES = values();

    public static FixQuality valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private FixQuality(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.FixQuality)
  }

  /**
   * Protobuf enum {@code maxpb.GpsStatus}
   */
  public enum GpsStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>GS_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    GS_NONE(0, 0),
    /**
     * <code>GS_POWER_ON_NOW_ACTUAL_FIX_STATE = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    GS_POWER_ON_NOW_ACTUAL_FIX_STATE(1, 1),
    /**
     * <code>GS_POWER_ON_NOW_OLD_FIX_STATE = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    GS_POWER_ON_NOW_OLD_FIX_STATE(2, 2),
    /**
     * <code>GS_POWER_OFF_RACING = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    GS_POWER_OFF_RACING(3, 3),
    /**
     * <code>GS_POWER_OFF_SAMPLING_INTERVAL_0 = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    GS_POWER_OFF_SAMPLING_INTERVAL_0(4, 4),
    /**
     * <code>GS_POWER_OFF_RACING_INTERVAL_0 = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    GS_POWER_OFF_RACING_INTERVAL_0(5, 5),
    /**
     * <code>GS_RFU_01 = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    GS_RFU_01(6, 6),
    /**
     * <code>GS_RFU_02 = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    GS_RFU_02(7, 7),
    /**
     * <code>GS_RFU_03 = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    GS_RFU_03(8, 8),
    /**
     * <code>GS_RFU_04 = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    GS_RFU_04(9, 9),
    /**
     * <code>GS_RFU_05 = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    GS_RFU_05(10, 10),
    ;

    /**
     * <code>GS_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int GS_NONE_VALUE = 0;
    /**
     * <code>GS_POWER_ON_NOW_ACTUAL_FIX_STATE = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int GS_POWER_ON_NOW_ACTUAL_FIX_STATE_VALUE = 1;
    /**
     * <code>GS_POWER_ON_NOW_OLD_FIX_STATE = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int GS_POWER_ON_NOW_OLD_FIX_STATE_VALUE = 2;
    /**
     * <code>GS_POWER_OFF_RACING = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int GS_POWER_OFF_RACING_VALUE = 3;
    /**
     * <code>GS_POWER_OFF_SAMPLING_INTERVAL_0 = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int GS_POWER_OFF_SAMPLING_INTERVAL_0_VALUE = 4;
    /**
     * <code>GS_POWER_OFF_RACING_INTERVAL_0 = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int GS_POWER_OFF_RACING_INTERVAL_0_VALUE = 5;
    /**
     * <code>GS_RFU_01 = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int GS_RFU_01_VALUE = 6;
    /**
     * <code>GS_RFU_02 = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int GS_RFU_02_VALUE = 7;
    /**
     * <code>GS_RFU_03 = 8;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int GS_RFU_03_VALUE = 8;
    /**
     * <code>GS_RFU_04 = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int GS_RFU_04_VALUE = 9;
    /**
     * <code>GS_RFU_05 = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int GS_RFU_05_VALUE = 10;


    public final int getNumber() { return value; }

    public static GpsStatus valueOf(int value) {
      switch (value) {
        case 0: return GS_NONE;
        case 1: return GS_POWER_ON_NOW_ACTUAL_FIX_STATE;
        case 2: return GS_POWER_ON_NOW_OLD_FIX_STATE;
        case 3: return GS_POWER_OFF_RACING;
        case 4: return GS_POWER_OFF_SAMPLING_INTERVAL_0;
        case 5: return GS_POWER_OFF_RACING_INTERVAL_0;
        case 6: return GS_RFU_01;
        case 7: return GS_RFU_02;
        case 8: return GS_RFU_03;
        case 9: return GS_RFU_04;
        case 10: return GS_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GpsStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GpsStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GpsStatus>() {
            public GpsStatus findValueByNumber(int number) {
              return GpsStatus.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbGps.getDescriptor().getEnumTypes().get(3);
    }

    private static final GpsStatus[] VALUES = values();

    public static GpsStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private GpsStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.GpsStatus)
  }

  /**
   * Protobuf enum {@code maxpb.GpsFilterState}
   */
  public enum GpsFilterState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>GFS_ANALYSIS_DISAPPROVED = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    GFS_ANALYSIS_DISAPPROVED(0, 0),
    /**
     * <code>GFS_ANALYSIS_APPROVED = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    GFS_ANALYSIS_APPROVED(1, 1),
    ;

    /**
     * <code>GFS_ANALYSIS_DISAPPROVED = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int GFS_ANALYSIS_DISAPPROVED_VALUE = 0;
    /**
     * <code>GFS_ANALYSIS_APPROVED = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int GFS_ANALYSIS_APPROVED_VALUE = 1;


    public final int getNumber() { return value; }

    public static GpsFilterState valueOf(int value) {
      switch (value) {
        case 0: return GFS_ANALYSIS_DISAPPROVED;
        case 1: return GFS_ANALYSIS_APPROVED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GpsFilterState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GpsFilterState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GpsFilterState>() {
            public GpsFilterState findValueByNumber(int number) {
              return GpsFilterState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbGps.getDescriptor().getEnumTypes().get(4);
    }

    private static final GpsFilterState[] VALUES = values();

    public static GpsFilterState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private GpsFilterState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.GpsFilterState)
  }

  /**
   * Protobuf enum {@code maxpb.Heading}
   */
  public enum Heading
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>H_NORTH = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    H_NORTH(0, 0),
    /**
     * <code>H_NORTHEAST = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    H_NORTHEAST(1, 1),
    /**
     * <code>H_EAST = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    H_EAST(2, 2),
    /**
     * <code>H_SOUTHEAST = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    H_SOUTHEAST(3, 3),
    /**
     * <code>H_SOUTH = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    H_SOUTH(4, 4),
    /**
     * <code>H_SOUTHWEST = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    H_SOUTHWEST(5, 5),
    /**
     * <code>H_WEST = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    H_WEST(6, 6),
    /**
     * <code>H_NORTHWEST = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    H_NORTHWEST(7, 7),
    /**
     * <code>H_ALL = 8;</code>
     *
     * <pre>
     *&#47; Used on Geographical libs SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    H_ALL(8, 8),
    ;

    /**
     * <code>H_NORTH = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int H_NORTH_VALUE = 0;
    /**
     * <code>H_NORTHEAST = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int H_NORTHEAST_VALUE = 1;
    /**
     * <code>H_EAST = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int H_EAST_VALUE = 2;
    /**
     * <code>H_SOUTHEAST = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int H_SOUTHEAST_VALUE = 3;
    /**
     * <code>H_SOUTH = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int H_SOUTH_VALUE = 4;
    /**
     * <code>H_SOUTHWEST = 5;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int H_SOUTHWEST_VALUE = 5;
    /**
     * <code>H_WEST = 6;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int H_WEST_VALUE = 6;
    /**
     * <code>H_NORTHWEST = 7;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int H_NORTHWEST_VALUE = 7;
    /**
     * <code>H_ALL = 8;</code>
     *
     * <pre>
     *&#47; Used on Geographical libs SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int H_ALL_VALUE = 8;


    public final int getNumber() { return value; }

    public static Heading valueOf(int value) {
      switch (value) {
        case 0: return H_NORTH;
        case 1: return H_NORTHEAST;
        case 2: return H_EAST;
        case 3: return H_SOUTHEAST;
        case 4: return H_SOUTH;
        case 5: return H_SOUTHWEST;
        case 6: return H_WEST;
        case 7: return H_NORTHWEST;
        case 8: return H_ALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Heading>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Heading>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Heading>() {
            public Heading findValueByNumber(int number) {
              return Heading.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbGps.getDescriptor().getEnumTypes().get(5);
    }

    private static final Heading[] VALUES = values();

    public static Heading valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Heading(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.Heading)
  }

  /**
   * Protobuf enum {@code maxpb.NavSystem}
   *
   * <pre>
   *&#47;&#64;exclude
   * </pre>
   */
  public enum NavSystem
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NS_GPS = 0;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    NS_GPS(0, 0),
    /**
     * <code>NS_GLONASS = 1;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    NS_GLONASS(1, 1),
    /**
     * <code>NS_GALILEO = 2;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    NS_GALILEO(2, 2),
    /**
     * <code>NS_BEIDOU = 3;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    NS_BEIDOU(3, 3),
    /**
     * <code>NS_BEIDOU_1 = 4;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    NS_BEIDOU_1(4, 4),
    /**
     * <code>NS_NAVIC = 5;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    NS_NAVIC(5, 5),
    /**
     * <code>NS_QZSS = 6;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    NS_QZSS(6, 6),
    /**
     * <code>NS_RFU_01 = 7;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    NS_RFU_01(7, 7),
    /**
     * <code>NS_RFU_02 = 8;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    NS_RFU_02(8, 8),
    /**
     * <code>NS_RFU_03 = 9;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    NS_RFU_03(9, 9),
    /**
     * <code>NS_RFU_04 = 10;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    NS_RFU_04(10, 10),
    /**
     * <code>NS_RFU_05 = 11;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    NS_RFU_05(11, 11),
    ;

    /**
     * <code>NS_GPS = 0;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int NS_GPS_VALUE = 0;
    /**
     * <code>NS_GLONASS = 1;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int NS_GLONASS_VALUE = 1;
    /**
     * <code>NS_GALILEO = 2;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int NS_GALILEO_VALUE = 2;
    /**
     * <code>NS_BEIDOU = 3;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int NS_BEIDOU_VALUE = 3;
    /**
     * <code>NS_BEIDOU_1 = 4;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int NS_BEIDOU_1_VALUE = 4;
    /**
     * <code>NS_NAVIC = 5;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int NS_NAVIC_VALUE = 5;
    /**
     * <code>NS_QZSS = 6;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int NS_QZSS_VALUE = 6;
    /**
     * <code>NS_RFU_01 = 7;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int NS_RFU_01_VALUE = 7;
    /**
     * <code>NS_RFU_02 = 8;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int NS_RFU_02_VALUE = 8;
    /**
     * <code>NS_RFU_03 = 9;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int NS_RFU_03_VALUE = 9;
    /**
     * <code>NS_RFU_04 = 10;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int NS_RFU_04_VALUE = 10;
    /**
     * <code>NS_RFU_05 = 11;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy:
     * </pre>
     */
    public static final int NS_RFU_05_VALUE = 11;


    public final int getNumber() { return value; }

    public static NavSystem valueOf(int value) {
      switch (value) {
        case 0: return NS_GPS;
        case 1: return NS_GLONASS;
        case 2: return NS_GALILEO;
        case 3: return NS_BEIDOU;
        case 4: return NS_BEIDOU_1;
        case 5: return NS_NAVIC;
        case 6: return NS_QZSS;
        case 7: return NS_RFU_01;
        case 8: return NS_RFU_02;
        case 9: return NS_RFU_03;
        case 10: return NS_RFU_04;
        case 11: return NS_RFU_05;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NavSystem>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<NavSystem>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NavSystem>() {
            public NavSystem findValueByNumber(int number) {
              return NavSystem.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbGps.getDescriptor().getEnumTypes().get(6);
    }

    private static final NavSystem[] VALUES = values();

    public static NavSystem valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private NavSystem(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.NavSystem)
  }

  /**
   * Protobuf enum {@code maxpb.AGPSState}
   */
  public enum AGPSState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>AGPSST_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180 
     * </pre>
     */
    AGPSST_NONE(0, 0),
    /**
     * <code>AGPSST_AUTONOMOUS = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    AGPSST_AUTONOMOUS(1, 1),
    /**
     * <code>AGPSST_AGPS_OFFLINE = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180 
     * </pre>
     */
    AGPSST_AGPS_OFFLINE(2, 2),
    /**
     * <code>AGPSST_AGPS_ONLINE = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180 
     * </pre>
     */
    AGPSST_AGPS_ONLINE(3, 3),
    ;

    /**
     * <code>AGPSST_NONE = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180 
     * </pre>
     */
    public static final int AGPSST_NONE_VALUE = 0;
    /**
     * <code>AGPSST_AUTONOMOUS = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy:
     * </pre>
     */
    public static final int AGPSST_AUTONOMOUS_VALUE = 1;
    /**
     * <code>AGPSST_AGPS_OFFLINE = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180 
     * </pre>
     */
    public static final int AGPSST_AGPS_OFFLINE_VALUE = 2;
    /**
     * <code>AGPSST_AGPS_ONLINE = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180 
     * </pre>
     */
    public static final int AGPSST_AGPS_ONLINE_VALUE = 3;


    public final int getNumber() { return value; }

    public static AGPSState valueOf(int value) {
      switch (value) {
        case 0: return AGPSST_NONE;
        case 1: return AGPSST_AUTONOMOUS;
        case 2: return AGPSST_AGPS_OFFLINE;
        case 3: return AGPSST_AGPS_ONLINE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AGPSState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<AGPSState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AGPSState>() {
            public AGPSState findValueByNumber(int number) {
              return AGPSState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbGps.getDescriptor().getEnumTypes().get(7);
    }

    private static final AGPSState[] VALUES = values();

    public static AGPSState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private AGPSState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.AGPSState)
  }

  /**
   * Protobuf enum {@code maxpb.GPSPowerState}
   */
  public enum GPSPowerState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>GPWS_POWER_OFF = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180 
     * </pre>
     */
    GPWS_POWER_OFF(0, 0),
    /**
     * <code>GPWS_POWER_LOW_POWER = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180 
     * </pre>
     */
    GPWS_POWER_LOW_POWER(1, 1),
    /**
     * <code>GPWS_POWER_ON = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    GPWS_POWER_ON(2, 2),
    ;

    /**
     * <code>GPWS_POWER_OFF = 0;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180 
     * </pre>
     */
    public static final int GPWS_POWER_OFF_VALUE = 0;
    /**
     * <code>GPWS_POWER_LOW_POWER = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180 
     * </pre>
     */
    public static final int GPWS_POWER_LOW_POWER_VALUE = 1;
    /**
     * <code>GPWS_POWER_ON = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public static final int GPWS_POWER_ON_VALUE = 2;


    public final int getNumber() { return value; }

    public static GPSPowerState valueOf(int value) {
      switch (value) {
        case 0: return GPWS_POWER_OFF;
        case 1: return GPWS_POWER_LOW_POWER;
        case 2: return GPWS_POWER_ON;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GPSPowerState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GPSPowerState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GPSPowerState>() {
            public GPSPowerState findValueByNumber(int number) {
              return GPSPowerState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return maxpb.MaxpbGps.getDescriptor().getEnumTypes().get(8);
    }

    private static final GPSPowerState[] VALUES = values();

    public static GPSPowerState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private GPSPowerState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maxpb.GPSPowerState)
  }

  public interface SatelliteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.Satellite)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 snr = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasSnr();
    /**
     * <code>required uint32 snr = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getSnr();

    /**
     * <code>optional uint32 prn = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasPrn();
    /**
     * <code>optional uint32 prn = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getPrn();

    /**
     * <code>optional uint32 elevation = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasElevation();
    /**
     * <code>optional uint32 elevation = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getElevation();

    /**
     * <code>optional uint32 azimuth = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    boolean hasAzimuth();
    /**
     * <code>optional uint32 azimuth = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    int getAzimuth();

    /**
     * <code>optional .maxpb.NavSystem system = 5;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    boolean hasSystem();
    /**
     * <code>optional .maxpb.NavSystem system = 5;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    maxpb.MaxpbGps.NavSystem getSystem();
  }
  /**
   * Protobuf type {@code maxpb.Satellite}
   */
  public static final class Satellite extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.Satellite)
      SatelliteOrBuilder {
    // Use Satellite.newBuilder() to construct.
    private Satellite(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Satellite(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Satellite defaultInstance;
    public static Satellite getDefaultInstance() {
      return defaultInstance;
    }

    public Satellite getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Satellite(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              snr_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              prn_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              elevation_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              azimuth_ = input.readUInt32();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              maxpb.MaxpbGps.NavSystem value = maxpb.MaxpbGps.NavSystem.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                system_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbGps.internal_static_maxpb_Satellite_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbGps.internal_static_maxpb_Satellite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbGps.Satellite.class, maxpb.MaxpbGps.Satellite.Builder.class);
    }

    public static com.google.protobuf.Parser<Satellite> PARSER =
        new com.google.protobuf.AbstractParser<Satellite>() {
      public Satellite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Satellite(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Satellite> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SNR_FIELD_NUMBER = 1;
    private int snr_;
    /**
     * <code>required uint32 snr = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasSnr() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 snr = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getSnr() {
      return snr_;
    }

    public static final int PRN_FIELD_NUMBER = 2;
    private int prn_;
    /**
     * <code>optional uint32 prn = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasPrn() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 prn = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getPrn() {
      return prn_;
    }

    public static final int ELEVATION_FIELD_NUMBER = 3;
    private int elevation_;
    /**
     * <code>optional uint32 elevation = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasElevation() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 elevation = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getElevation() {
      return elevation_;
    }

    public static final int AZIMUTH_FIELD_NUMBER = 4;
    private int azimuth_;
    /**
     * <code>optional uint32 azimuth = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public boolean hasAzimuth() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 azimuth = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: 
     * </pre>
     */
    public int getAzimuth() {
      return azimuth_;
    }

    public static final int SYSTEM_FIELD_NUMBER = 5;
    private maxpb.MaxpbGps.NavSystem system_;
    /**
     * <code>optional .maxpb.NavSystem system = 5;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    public boolean hasSystem() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .maxpb.NavSystem system = 5;</code>
     *
     * <pre>
     *&#47;&#64;exclude SupportedBy: 
     * </pre>
     */
    public maxpb.MaxpbGps.NavSystem getSystem() {
      return system_;
    }

    private void initFields() {
      snr_ = 0;
      prn_ = 0;
      elevation_ = 0;
      azimuth_ = 0;
      system_ = maxpb.MaxpbGps.NavSystem.NS_GPS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSnr()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, snr_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, prn_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, elevation_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, azimuth_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, system_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, snr_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, prn_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, elevation_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, azimuth_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, system_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbGps.Satellite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbGps.Satellite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbGps.Satellite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbGps.Satellite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbGps.Satellite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbGps.Satellite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbGps.Satellite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbGps.Satellite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbGps.Satellite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbGps.Satellite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbGps.Satellite prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.Satellite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.Satellite)
        maxpb.MaxpbGps.SatelliteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbGps.internal_static_maxpb_Satellite_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbGps.internal_static_maxpb_Satellite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbGps.Satellite.class, maxpb.MaxpbGps.Satellite.Builder.class);
      }

      // Construct using maxpb.MaxpbGps.Satellite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        snr_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        prn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        elevation_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        azimuth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        system_ = maxpb.MaxpbGps.NavSystem.NS_GPS;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbGps.internal_static_maxpb_Satellite_descriptor;
      }

      public maxpb.MaxpbGps.Satellite getDefaultInstanceForType() {
        return maxpb.MaxpbGps.Satellite.getDefaultInstance();
      }

      public maxpb.MaxpbGps.Satellite build() {
        maxpb.MaxpbGps.Satellite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbGps.Satellite buildPartial() {
        maxpb.MaxpbGps.Satellite result = new maxpb.MaxpbGps.Satellite(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.snr_ = snr_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.prn_ = prn_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.elevation_ = elevation_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.azimuth_ = azimuth_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.system_ = system_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbGps.Satellite) {
          return mergeFrom((maxpb.MaxpbGps.Satellite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbGps.Satellite other) {
        if (other == maxpb.MaxpbGps.Satellite.getDefaultInstance()) return this;
        if (other.hasSnr()) {
          setSnr(other.getSnr());
        }
        if (other.hasPrn()) {
          setPrn(other.getPrn());
        }
        if (other.hasElevation()) {
          setElevation(other.getElevation());
        }
        if (other.hasAzimuth()) {
          setAzimuth(other.getAzimuth());
        }
        if (other.hasSystem()) {
          setSystem(other.getSystem());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSnr()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbGps.Satellite parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbGps.Satellite) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int snr_ ;
      /**
       * <code>required uint32 snr = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasSnr() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 snr = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getSnr() {
        return snr_;
      }
      /**
       * <code>required uint32 snr = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setSnr(int value) {
        bitField0_ |= 0x00000001;
        snr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 snr = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearSnr() {
        bitField0_ = (bitField0_ & ~0x00000001);
        snr_ = 0;
        onChanged();
        return this;
      }

      private int prn_ ;
      /**
       * <code>optional uint32 prn = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasPrn() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 prn = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getPrn() {
        return prn_;
      }
      /**
       * <code>optional uint32 prn = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setPrn(int value) {
        bitField0_ |= 0x00000002;
        prn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 prn = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearPrn() {
        bitField0_ = (bitField0_ & ~0x00000002);
        prn_ = 0;
        onChanged();
        return this;
      }

      private int elevation_ ;
      /**
       * <code>optional uint32 elevation = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasElevation() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 elevation = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getElevation() {
        return elevation_;
      }
      /**
       * <code>optional uint32 elevation = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setElevation(int value) {
        bitField0_ |= 0x00000004;
        elevation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 elevation = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearElevation() {
        bitField0_ = (bitField0_ & ~0x00000004);
        elevation_ = 0;
        onChanged();
        return this;
      }

      private int azimuth_ ;
      /**
       * <code>optional uint32 azimuth = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public boolean hasAzimuth() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 azimuth = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public int getAzimuth() {
        return azimuth_;
      }
      /**
       * <code>optional uint32 azimuth = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder setAzimuth(int value) {
        bitField0_ |= 0x00000008;
        azimuth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 azimuth = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: 
       * </pre>
       */
      public Builder clearAzimuth() {
        bitField0_ = (bitField0_ & ~0x00000008);
        azimuth_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbGps.NavSystem system_ = maxpb.MaxpbGps.NavSystem.NS_GPS;
      /**
       * <code>optional .maxpb.NavSystem system = 5;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public boolean hasSystem() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .maxpb.NavSystem system = 5;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public maxpb.MaxpbGps.NavSystem getSystem() {
        return system_;
      }
      /**
       * <code>optional .maxpb.NavSystem system = 5;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public Builder setSystem(maxpb.MaxpbGps.NavSystem value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        system_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.NavSystem system = 5;</code>
       *
       * <pre>
       *&#47;&#64;exclude SupportedBy: 
       * </pre>
       */
      public Builder clearSystem() {
        bitField0_ = (bitField0_ & ~0x00000010);
        system_ = maxpb.MaxpbGps.NavSystem.NS_GPS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.Satellite)
    }

    static {
      defaultInstance = new Satellite(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.Satellite)
  }

  public interface GpsInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.GpsInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .maxpb.AntennaState internalAntenna = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142
     * </pre>
     */
    boolean hasInternalAntenna();
    /**
     * <code>optional .maxpb.AntennaState internalAntenna = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142
     * </pre>
     */
    maxpb.MaxpbGps.AntennaState getInternalAntenna();

    /**
     * <code>optional .maxpb.FixState fixState = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasFixState();
    /**
     * <code>optional .maxpb.FixState fixState = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbGps.FixState getFixState();

    /**
     * <code>optional int32 svn = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasSvn();
    /**
     * <code>optional int32 svn = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    int getSvn();

    /**
     * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<maxpb.MaxpbGps.Satellite> 
        getSatellitesInViewList();
    /**
     * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbGps.Satellite getSatellitesInView(int index);
    /**
     * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getSatellitesInViewCount();
    /**
     * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    java.util.List<? extends maxpb.MaxpbGps.SatelliteOrBuilder> 
        getSatellitesInViewOrBuilderList();
    /**
     * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbGps.SatelliteOrBuilder getSatellitesInViewOrBuilder(
        int index);

    /**
     * <code>optional int32 hdop = 5;</code>
     *
     * <pre>
     *&#47; HDOP * 10 SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasHdop();
    /**
     * <code>optional int32 hdop = 5;</code>
     *
     * <pre>
     *&#47; HDOP * 10 SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    int getHdop();

    /**
     * <code>optional int32 vdop = 6;</code>
     *
     * <pre>
     *&#47; VDOP * 10 SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasVdop();
    /**
     * <code>optional int32 vdop = 6;</code>
     *
     * <pre>
     *&#47; VDOP * 10 SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getVdop();

    /**
     * <code>optional int32 pdop = 7;</code>
     *
     * <pre>
     *&#47; PDOP * 10 SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasPdop();
    /**
     * <code>optional int32 pdop = 7;</code>
     *
     * <pre>
     *&#47; PDOP * 10 SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getPdop();

    /**
     * <code>optional uint32 age = 8;</code>
     *
     * <pre>
     *&#47; Seconds since last fix SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasAge();
    /**
     * <code>optional uint32 age = 8;</code>
     *
     * <pre>
     *&#47; Seconds since last fix SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    int getAge();

    /**
     * <code>optional .maxpb.GpsFilterState filter = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasFilter();
    /**
     * <code>optional .maxpb.GpsFilterState filter = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbGps.GpsFilterState getFilter();

    /**
     * <code>optional .maxpb.FixQuality fixQuality = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasFixQuality();
    /**
     * <code>optional .maxpb.FixQuality fixQuality = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbGps.FixQuality getFixQuality();

    /**
     * <code>optional uint32 averageSnr = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasAverageSnr();
    /**
     * <code>optional uint32 averageSnr = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    int getAverageSnr();

    /**
     * <code>optional .maxpb.AGPSState agpsState = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180 
     * </pre>
     */
    boolean hasAgpsState();
    /**
     * <code>optional .maxpb.AGPSState agpsState = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180 
     * </pre>
     */
    maxpb.MaxpbGps.AGPSState getAgpsState();

    /**
     * <code>optional .maxpb.GPSPowerState gpsPowerState = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasGpsPowerState();
    /**
     * <code>optional .maxpb.GPSPowerState gpsPowerState = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    maxpb.MaxpbGps.GPSPowerState getGpsPowerState();
  }
  /**
   * Protobuf type {@code maxpb.GpsInfo}
   */
  public static final class GpsInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.GpsInfo)
      GpsInfoOrBuilder {
    // Use GpsInfo.newBuilder() to construct.
    private GpsInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GpsInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GpsInfo defaultInstance;
    public static GpsInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GpsInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GpsInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              maxpb.MaxpbGps.AntennaState value = maxpb.MaxpbGps.AntennaState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                internalAntenna_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              maxpb.MaxpbGps.FixState value = maxpb.MaxpbGps.FixState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                fixState_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              svn_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                satellitesInView_ = new java.util.ArrayList<maxpb.MaxpbGps.Satellite>();
                mutable_bitField0_ |= 0x00000008;
              }
              satellitesInView_.add(input.readMessage(maxpb.MaxpbGps.Satellite.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              hdop_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              vdop_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              pdop_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              age_ = input.readUInt32();
              break;
            }
            case 72: {
              int rawValue = input.readEnum();
              maxpb.MaxpbGps.GpsFilterState value = maxpb.MaxpbGps.GpsFilterState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(9, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                filter_ = value;
              }
              break;
            }
            case 80: {
              int rawValue = input.readEnum();
              maxpb.MaxpbGps.FixQuality value = maxpb.MaxpbGps.FixQuality.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(10, rawValue);
              } else {
                bitField0_ |= 0x00000100;
                fixQuality_ = value;
              }
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              averageSnr_ = input.readUInt32();
              break;
            }
            case 96: {
              int rawValue = input.readEnum();
              maxpb.MaxpbGps.AGPSState value = maxpb.MaxpbGps.AGPSState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(12, rawValue);
              } else {
                bitField0_ |= 0x00000400;
                agpsState_ = value;
              }
              break;
            }
            case 104: {
              int rawValue = input.readEnum();
              maxpb.MaxpbGps.GPSPowerState value = maxpb.MaxpbGps.GPSPowerState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(13, rawValue);
              } else {
                bitField0_ |= 0x00000800;
                gpsPowerState_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          satellitesInView_ = java.util.Collections.unmodifiableList(satellitesInView_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbGps.internal_static_maxpb_GpsInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbGps.internal_static_maxpb_GpsInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbGps.GpsInfo.class, maxpb.MaxpbGps.GpsInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GpsInfo> PARSER =
        new com.google.protobuf.AbstractParser<GpsInfo>() {
      public GpsInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GpsInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GpsInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int INTERNALANTENNA_FIELD_NUMBER = 1;
    private maxpb.MaxpbGps.AntennaState internalAntenna_;
    /**
     * <code>optional .maxpb.AntennaState internalAntenna = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142
     * </pre>
     */
    public boolean hasInternalAntenna() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .maxpb.AntennaState internalAntenna = 1;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142
     * </pre>
     */
    public maxpb.MaxpbGps.AntennaState getInternalAntenna() {
      return internalAntenna_;
    }

    public static final int FIXSTATE_FIELD_NUMBER = 2;
    private maxpb.MaxpbGps.FixState fixState_;
    /**
     * <code>optional .maxpb.FixState fixState = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasFixState() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .maxpb.FixState fixState = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbGps.FixState getFixState() {
      return fixState_;
    }

    public static final int SVN_FIELD_NUMBER = 3;
    private int svn_;
    /**
     * <code>optional int32 svn = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasSvn() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 svn = 3;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public int getSvn() {
      return svn_;
    }

    public static final int SATELLITESINVIEW_FIELD_NUMBER = 4;
    private java.util.List<maxpb.MaxpbGps.Satellite> satellitesInView_;
    /**
     * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<maxpb.MaxpbGps.Satellite> getSatellitesInViewList() {
      return satellitesInView_;
    }
    /**
     * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public java.util.List<? extends maxpb.MaxpbGps.SatelliteOrBuilder> 
        getSatellitesInViewOrBuilderList() {
      return satellitesInView_;
    }
    /**
     * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getSatellitesInViewCount() {
      return satellitesInView_.size();
    }
    /**
     * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbGps.Satellite getSatellitesInView(int index) {
      return satellitesInView_.get(index);
    }
    /**
     * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbGps.SatelliteOrBuilder getSatellitesInViewOrBuilder(
        int index) {
      return satellitesInView_.get(index);
    }

    public static final int HDOP_FIELD_NUMBER = 5;
    private int hdop_;
    /**
     * <code>optional int32 hdop = 5;</code>
     *
     * <pre>
     *&#47; HDOP * 10 SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasHdop() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 hdop = 5;</code>
     *
     * <pre>
     *&#47; HDOP * 10 SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public int getHdop() {
      return hdop_;
    }

    public static final int VDOP_FIELD_NUMBER = 6;
    private int vdop_;
    /**
     * <code>optional int32 vdop = 6;</code>
     *
     * <pre>
     *&#47; VDOP * 10 SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasVdop() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 vdop = 6;</code>
     *
     * <pre>
     *&#47; VDOP * 10 SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getVdop() {
      return vdop_;
    }

    public static final int PDOP_FIELD_NUMBER = 7;
    private int pdop_;
    /**
     * <code>optional int32 pdop = 7;</code>
     *
     * <pre>
     *&#47; PDOP * 10 SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasPdop() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 pdop = 7;</code>
     *
     * <pre>
     *&#47; PDOP * 10 SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getPdop() {
      return pdop_;
    }

    public static final int AGE_FIELD_NUMBER = 8;
    private int age_;
    /**
     * <code>optional uint32 age = 8;</code>
     *
     * <pre>
     *&#47; Seconds since last fix SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasAge() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 age = 8;</code>
     *
     * <pre>
     *&#47; Seconds since last fix SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public int getAge() {
      return age_;
    }

    public static final int FILTER_FIELD_NUMBER = 9;
    private maxpb.MaxpbGps.GpsFilterState filter_;
    /**
     * <code>optional .maxpb.GpsFilterState filter = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasFilter() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .maxpb.GpsFilterState filter = 9;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbGps.GpsFilterState getFilter() {
      return filter_;
    }

    public static final int FIXQUALITY_FIELD_NUMBER = 10;
    private maxpb.MaxpbGps.FixQuality fixQuality_;
    /**
     * <code>optional .maxpb.FixQuality fixQuality = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasFixQuality() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .maxpb.FixQuality fixQuality = 10;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbGps.FixQuality getFixQuality() {
      return fixQuality_;
    }

    public static final int AVERAGESNR_FIELD_NUMBER = 11;
    private int averageSnr_;
    /**
     * <code>optional uint32 averageSnr = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasAverageSnr() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 averageSnr = 11;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
     * </pre>
     */
    public int getAverageSnr() {
      return averageSnr_;
    }

    public static final int AGPSSTATE_FIELD_NUMBER = 12;
    private maxpb.MaxpbGps.AGPSState agpsState_;
    /**
     * <code>optional .maxpb.AGPSState agpsState = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180 
     * </pre>
     */
    public boolean hasAgpsState() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .maxpb.AGPSState agpsState = 12;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180 
     * </pre>
     */
    public maxpb.MaxpbGps.AGPSState getAgpsState() {
      return agpsState_;
    }

    public static final int GPSPOWERSTATE_FIELD_NUMBER = 13;
    private maxpb.MaxpbGps.GPSPowerState gpsPowerState_;
    /**
     * <code>optional .maxpb.GPSPowerState gpsPowerState = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasGpsPowerState() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .maxpb.GPSPowerState gpsPowerState = 13;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public maxpb.MaxpbGps.GPSPowerState getGpsPowerState() {
      return gpsPowerState_;
    }

    private void initFields() {
      internalAntenna_ = maxpb.MaxpbGps.AntennaState.AS_NONE;
      fixState_ = maxpb.MaxpbGps.FixState.FS_NONE;
      svn_ = 0;
      satellitesInView_ = java.util.Collections.emptyList();
      hdop_ = 0;
      vdop_ = 0;
      pdop_ = 0;
      age_ = 0;
      filter_ = maxpb.MaxpbGps.GpsFilterState.GFS_ANALYSIS_DISAPPROVED;
      fixQuality_ = maxpb.MaxpbGps.FixQuality.FQ_INVALID;
      averageSnr_ = 0;
      agpsState_ = maxpb.MaxpbGps.AGPSState.AGPSST_NONE;
      gpsPowerState_ = maxpb.MaxpbGps.GPSPowerState.GPWS_POWER_OFF;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getSatellitesInViewCount(); i++) {
        if (!getSatellitesInView(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, internalAntenna_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, fixState_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, svn_);
      }
      for (int i = 0; i < satellitesInView_.size(); i++) {
        output.writeMessage(4, satellitesInView_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, hdop_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, vdop_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, pdop_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(8, age_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(9, filter_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeEnum(10, fixQuality_.getNumber());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(11, averageSnr_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeEnum(12, agpsState_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeEnum(13, gpsPowerState_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, internalAntenna_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, fixState_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, svn_);
      }
      for (int i = 0; i < satellitesInView_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, satellitesInView_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, hdop_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, vdop_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, pdop_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, age_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, filter_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, fixQuality_.getNumber());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, averageSnr_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, agpsState_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(13, gpsPowerState_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbGps.GpsInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbGps.GpsInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbGps.GpsInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbGps.GpsInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbGps.GpsInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbGps.GpsInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbGps.GpsInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbGps.GpsInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbGps.GpsInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbGps.GpsInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbGps.GpsInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.GpsInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.GpsInfo)
        maxpb.MaxpbGps.GpsInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbGps.internal_static_maxpb_GpsInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbGps.internal_static_maxpb_GpsInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbGps.GpsInfo.class, maxpb.MaxpbGps.GpsInfo.Builder.class);
      }

      // Construct using maxpb.MaxpbGps.GpsInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSatellitesInViewFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        internalAntenna_ = maxpb.MaxpbGps.AntennaState.AS_NONE;
        bitField0_ = (bitField0_ & ~0x00000001);
        fixState_ = maxpb.MaxpbGps.FixState.FS_NONE;
        bitField0_ = (bitField0_ & ~0x00000002);
        svn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (satellitesInViewBuilder_ == null) {
          satellitesInView_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          satellitesInViewBuilder_.clear();
        }
        hdop_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        vdop_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        pdop_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        age_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        filter_ = maxpb.MaxpbGps.GpsFilterState.GFS_ANALYSIS_DISAPPROVED;
        bitField0_ = (bitField0_ & ~0x00000100);
        fixQuality_ = maxpb.MaxpbGps.FixQuality.FQ_INVALID;
        bitField0_ = (bitField0_ & ~0x00000200);
        averageSnr_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        agpsState_ = maxpb.MaxpbGps.AGPSState.AGPSST_NONE;
        bitField0_ = (bitField0_ & ~0x00000800);
        gpsPowerState_ = maxpb.MaxpbGps.GPSPowerState.GPWS_POWER_OFF;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbGps.internal_static_maxpb_GpsInfo_descriptor;
      }

      public maxpb.MaxpbGps.GpsInfo getDefaultInstanceForType() {
        return maxpb.MaxpbGps.GpsInfo.getDefaultInstance();
      }

      public maxpb.MaxpbGps.GpsInfo build() {
        maxpb.MaxpbGps.GpsInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbGps.GpsInfo buildPartial() {
        maxpb.MaxpbGps.GpsInfo result = new maxpb.MaxpbGps.GpsInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.internalAntenna_ = internalAntenna_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fixState_ = fixState_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.svn_ = svn_;
        if (satellitesInViewBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            satellitesInView_ = java.util.Collections.unmodifiableList(satellitesInView_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.satellitesInView_ = satellitesInView_;
        } else {
          result.satellitesInView_ = satellitesInViewBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.hdop_ = hdop_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.vdop_ = vdop_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.pdop_ = pdop_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.age_ = age_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.filter_ = filter_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fixQuality_ = fixQuality_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.averageSnr_ = averageSnr_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.agpsState_ = agpsState_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.gpsPowerState_ = gpsPowerState_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbGps.GpsInfo) {
          return mergeFrom((maxpb.MaxpbGps.GpsInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbGps.GpsInfo other) {
        if (other == maxpb.MaxpbGps.GpsInfo.getDefaultInstance()) return this;
        if (other.hasInternalAntenna()) {
          setInternalAntenna(other.getInternalAntenna());
        }
        if (other.hasFixState()) {
          setFixState(other.getFixState());
        }
        if (other.hasSvn()) {
          setSvn(other.getSvn());
        }
        if (satellitesInViewBuilder_ == null) {
          if (!other.satellitesInView_.isEmpty()) {
            if (satellitesInView_.isEmpty()) {
              satellitesInView_ = other.satellitesInView_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSatellitesInViewIsMutable();
              satellitesInView_.addAll(other.satellitesInView_);
            }
            onChanged();
          }
        } else {
          if (!other.satellitesInView_.isEmpty()) {
            if (satellitesInViewBuilder_.isEmpty()) {
              satellitesInViewBuilder_.dispose();
              satellitesInViewBuilder_ = null;
              satellitesInView_ = other.satellitesInView_;
              bitField0_ = (bitField0_ & ~0x00000008);
              satellitesInViewBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSatellitesInViewFieldBuilder() : null;
            } else {
              satellitesInViewBuilder_.addAllMessages(other.satellitesInView_);
            }
          }
        }
        if (other.hasHdop()) {
          setHdop(other.getHdop());
        }
        if (other.hasVdop()) {
          setVdop(other.getVdop());
        }
        if (other.hasPdop()) {
          setPdop(other.getPdop());
        }
        if (other.hasAge()) {
          setAge(other.getAge());
        }
        if (other.hasFilter()) {
          setFilter(other.getFilter());
        }
        if (other.hasFixQuality()) {
          setFixQuality(other.getFixQuality());
        }
        if (other.hasAverageSnr()) {
          setAverageSnr(other.getAverageSnr());
        }
        if (other.hasAgpsState()) {
          setAgpsState(other.getAgpsState());
        }
        if (other.hasGpsPowerState()) {
          setGpsPowerState(other.getGpsPowerState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getSatellitesInViewCount(); i++) {
          if (!getSatellitesInView(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbGps.GpsInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbGps.GpsInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private maxpb.MaxpbGps.AntennaState internalAntenna_ = maxpb.MaxpbGps.AntennaState.AS_NONE;
      /**
       * <code>optional .maxpb.AntennaState internalAntenna = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142
       * </pre>
       */
      public boolean hasInternalAntenna() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .maxpb.AntennaState internalAntenna = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142
       * </pre>
       */
      public maxpb.MaxpbGps.AntennaState getInternalAntenna() {
        return internalAntenna_;
      }
      /**
       * <code>optional .maxpb.AntennaState internalAntenna = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142
       * </pre>
       */
      public Builder setInternalAntenna(maxpb.MaxpbGps.AntennaState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        internalAntenna_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.AntennaState internalAntenna = 1;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142
       * </pre>
       */
      public Builder clearInternalAntenna() {
        bitField0_ = (bitField0_ & ~0x00000001);
        internalAntenna_ = maxpb.MaxpbGps.AntennaState.AS_NONE;
        onChanged();
        return this;
      }

      private maxpb.MaxpbGps.FixState fixState_ = maxpb.MaxpbGps.FixState.FS_NONE;
      /**
       * <code>optional .maxpb.FixState fixState = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasFixState() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .maxpb.FixState fixState = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGps.FixState getFixState() {
        return fixState_;
      }
      /**
       * <code>optional .maxpb.FixState fixState = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setFixState(maxpb.MaxpbGps.FixState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        fixState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.FixState fixState = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearFixState() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fixState_ = maxpb.MaxpbGps.FixState.FS_NONE;
        onChanged();
        return this;
      }

      private int svn_ ;
      /**
       * <code>optional int32 svn = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasSvn() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 svn = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public int getSvn() {
        return svn_;
      }
      /**
       * <code>optional int32 svn = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setSvn(int value) {
        bitField0_ |= 0x00000004;
        svn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 svn = 3;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearSvn() {
        bitField0_ = (bitField0_ & ~0x00000004);
        svn_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<maxpb.MaxpbGps.Satellite> satellitesInView_ =
        java.util.Collections.emptyList();
      private void ensureSatellitesInViewIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          satellitesInView_ = new java.util.ArrayList<maxpb.MaxpbGps.Satellite>(satellitesInView_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbGps.Satellite, maxpb.MaxpbGps.Satellite.Builder, maxpb.MaxpbGps.SatelliteOrBuilder> satellitesInViewBuilder_;

      /**
       * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbGps.Satellite> getSatellitesInViewList() {
        if (satellitesInViewBuilder_ == null) {
          return java.util.Collections.unmodifiableList(satellitesInView_);
        } else {
          return satellitesInViewBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getSatellitesInViewCount() {
        if (satellitesInViewBuilder_ == null) {
          return satellitesInView_.size();
        } else {
          return satellitesInViewBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGps.Satellite getSatellitesInView(int index) {
        if (satellitesInViewBuilder_ == null) {
          return satellitesInView_.get(index);
        } else {
          return satellitesInViewBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setSatellitesInView(
          int index, maxpb.MaxpbGps.Satellite value) {
        if (satellitesInViewBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSatellitesInViewIsMutable();
          satellitesInView_.set(index, value);
          onChanged();
        } else {
          satellitesInViewBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setSatellitesInView(
          int index, maxpb.MaxpbGps.Satellite.Builder builderForValue) {
        if (satellitesInViewBuilder_ == null) {
          ensureSatellitesInViewIsMutable();
          satellitesInView_.set(index, builderForValue.build());
          onChanged();
        } else {
          satellitesInViewBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addSatellitesInView(maxpb.MaxpbGps.Satellite value) {
        if (satellitesInViewBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSatellitesInViewIsMutable();
          satellitesInView_.add(value);
          onChanged();
        } else {
          satellitesInViewBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addSatellitesInView(
          int index, maxpb.MaxpbGps.Satellite value) {
        if (satellitesInViewBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSatellitesInViewIsMutable();
          satellitesInView_.add(index, value);
          onChanged();
        } else {
          satellitesInViewBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addSatellitesInView(
          maxpb.MaxpbGps.Satellite.Builder builderForValue) {
        if (satellitesInViewBuilder_ == null) {
          ensureSatellitesInViewIsMutable();
          satellitesInView_.add(builderForValue.build());
          onChanged();
        } else {
          satellitesInViewBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addSatellitesInView(
          int index, maxpb.MaxpbGps.Satellite.Builder builderForValue) {
        if (satellitesInViewBuilder_ == null) {
          ensureSatellitesInViewIsMutable();
          satellitesInView_.add(index, builderForValue.build());
          onChanged();
        } else {
          satellitesInViewBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder addAllSatellitesInView(
          java.lang.Iterable<? extends maxpb.MaxpbGps.Satellite> values) {
        if (satellitesInViewBuilder_ == null) {
          ensureSatellitesInViewIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, satellitesInView_);
          onChanged();
        } else {
          satellitesInViewBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearSatellitesInView() {
        if (satellitesInViewBuilder_ == null) {
          satellitesInView_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          satellitesInViewBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder removeSatellitesInView(int index) {
        if (satellitesInViewBuilder_ == null) {
          ensureSatellitesInViewIsMutable();
          satellitesInView_.remove(index);
          onChanged();
        } else {
          satellitesInViewBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGps.Satellite.Builder getSatellitesInViewBuilder(
          int index) {
        return getSatellitesInViewFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGps.SatelliteOrBuilder getSatellitesInViewOrBuilder(
          int index) {
        if (satellitesInViewBuilder_ == null) {
          return satellitesInView_.get(index);  } else {
          return satellitesInViewBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<? extends maxpb.MaxpbGps.SatelliteOrBuilder> 
           getSatellitesInViewOrBuilderList() {
        if (satellitesInViewBuilder_ != null) {
          return satellitesInViewBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(satellitesInView_);
        }
      }
      /**
       * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGps.Satellite.Builder addSatellitesInViewBuilder() {
        return getSatellitesInViewFieldBuilder().addBuilder(
            maxpb.MaxpbGps.Satellite.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGps.Satellite.Builder addSatellitesInViewBuilder(
          int index) {
        return getSatellitesInViewFieldBuilder().addBuilder(
            index, maxpb.MaxpbGps.Satellite.getDefaultInstance());
      }
      /**
       * <code>repeated .maxpb.Satellite satellitesInView = 4;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public java.util.List<maxpb.MaxpbGps.Satellite.Builder> 
           getSatellitesInViewBuilderList() {
        return getSatellitesInViewFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          maxpb.MaxpbGps.Satellite, maxpb.MaxpbGps.Satellite.Builder, maxpb.MaxpbGps.SatelliteOrBuilder> 
          getSatellitesInViewFieldBuilder() {
        if (satellitesInViewBuilder_ == null) {
          satellitesInViewBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              maxpb.MaxpbGps.Satellite, maxpb.MaxpbGps.Satellite.Builder, maxpb.MaxpbGps.SatelliteOrBuilder>(
                  satellitesInView_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          satellitesInView_ = null;
        }
        return satellitesInViewBuilder_;
      }

      private int hdop_ ;
      /**
       * <code>optional int32 hdop = 5;</code>
       *
       * <pre>
       *&#47; HDOP * 10 SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasHdop() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 hdop = 5;</code>
       *
       * <pre>
       *&#47; HDOP * 10 SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public int getHdop() {
        return hdop_;
      }
      /**
       * <code>optional int32 hdop = 5;</code>
       *
       * <pre>
       *&#47; HDOP * 10 SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setHdop(int value) {
        bitField0_ |= 0x00000010;
        hdop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hdop = 5;</code>
       *
       * <pre>
       *&#47; HDOP * 10 SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearHdop() {
        bitField0_ = (bitField0_ & ~0x00000010);
        hdop_ = 0;
        onChanged();
        return this;
      }

      private int vdop_ ;
      /**
       * <code>optional int32 vdop = 6;</code>
       *
       * <pre>
       *&#47; VDOP * 10 SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasVdop() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 vdop = 6;</code>
       *
       * <pre>
       *&#47; VDOP * 10 SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getVdop() {
        return vdop_;
      }
      /**
       * <code>optional int32 vdop = 6;</code>
       *
       * <pre>
       *&#47; VDOP * 10 SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setVdop(int value) {
        bitField0_ |= 0x00000020;
        vdop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vdop = 6;</code>
       *
       * <pre>
       *&#47; VDOP * 10 SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearVdop() {
        bitField0_ = (bitField0_ & ~0x00000020);
        vdop_ = 0;
        onChanged();
        return this;
      }

      private int pdop_ ;
      /**
       * <code>optional int32 pdop = 7;</code>
       *
       * <pre>
       *&#47; PDOP * 10 SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasPdop() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 pdop = 7;</code>
       *
       * <pre>
       *&#47; PDOP * 10 SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getPdop() {
        return pdop_;
      }
      /**
       * <code>optional int32 pdop = 7;</code>
       *
       * <pre>
       *&#47; PDOP * 10 SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setPdop(int value) {
        bitField0_ |= 0x00000040;
        pdop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pdop = 7;</code>
       *
       * <pre>
       *&#47; PDOP * 10 SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearPdop() {
        bitField0_ = (bitField0_ & ~0x00000040);
        pdop_ = 0;
        onChanged();
        return this;
      }

      private int age_ ;
      /**
       * <code>optional uint32 age = 8;</code>
       *
       * <pre>
       *&#47; Seconds since last fix SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasAge() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 age = 8;</code>
       *
       * <pre>
       *&#47; Seconds since last fix SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public int getAge() {
        return age_;
      }
      /**
       * <code>optional uint32 age = 8;</code>
       *
       * <pre>
       *&#47; Seconds since last fix SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setAge(int value) {
        bitField0_ |= 0x00000080;
        age_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 age = 8;</code>
       *
       * <pre>
       *&#47; Seconds since last fix SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearAge() {
        bitField0_ = (bitField0_ & ~0x00000080);
        age_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbGps.GpsFilterState filter_ = maxpb.MaxpbGps.GpsFilterState.GFS_ANALYSIS_DISAPPROVED;
      /**
       * <code>optional .maxpb.GpsFilterState filter = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasFilter() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .maxpb.GpsFilterState filter = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGps.GpsFilterState getFilter() {
        return filter_;
      }
      /**
       * <code>optional .maxpb.GpsFilterState filter = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setFilter(maxpb.MaxpbGps.GpsFilterState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        filter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.GpsFilterState filter = 9;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearFilter() {
        bitField0_ = (bitField0_ & ~0x00000100);
        filter_ = maxpb.MaxpbGps.GpsFilterState.GFS_ANALYSIS_DISAPPROVED;
        onChanged();
        return this;
      }

      private maxpb.MaxpbGps.FixQuality fixQuality_ = maxpb.MaxpbGps.FixQuality.FQ_INVALID;
      /**
       * <code>optional .maxpb.FixQuality fixQuality = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasFixQuality() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .maxpb.FixQuality fixQuality = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGps.FixQuality getFixQuality() {
        return fixQuality_;
      }
      /**
       * <code>optional .maxpb.FixQuality fixQuality = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setFixQuality(maxpb.MaxpbGps.FixQuality value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        fixQuality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.FixQuality fixQuality = 10;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearFixQuality() {
        bitField0_ = (bitField0_ & ~0x00000200);
        fixQuality_ = maxpb.MaxpbGps.FixQuality.FQ_INVALID;
        onChanged();
        return this;
      }

      private int averageSnr_ ;
      /**
       * <code>optional uint32 averageSnr = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasAverageSnr() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 averageSnr = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public int getAverageSnr() {
        return averageSnr_;
      }
      /**
       * <code>optional uint32 averageSnr = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setAverageSnr(int value) {
        bitField0_ |= 0x00000400;
        averageSnr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 averageSnr = 11;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT142, MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearAverageSnr() {
        bitField0_ = (bitField0_ & ~0x00000400);
        averageSnr_ = 0;
        onChanged();
        return this;
      }

      private maxpb.MaxpbGps.AGPSState agpsState_ = maxpb.MaxpbGps.AGPSState.AGPSST_NONE;
      /**
       * <code>optional .maxpb.AGPSState agpsState = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180 
       * </pre>
       */
      public boolean hasAgpsState() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .maxpb.AGPSState agpsState = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180 
       * </pre>
       */
      public maxpb.MaxpbGps.AGPSState getAgpsState() {
        return agpsState_;
      }
      /**
       * <code>optional .maxpb.AGPSState agpsState = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180 
       * </pre>
       */
      public Builder setAgpsState(maxpb.MaxpbGps.AGPSState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000800;
        agpsState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.AGPSState agpsState = 12;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180 
       * </pre>
       */
      public Builder clearAgpsState() {
        bitField0_ = (bitField0_ & ~0x00000800);
        agpsState_ = maxpb.MaxpbGps.AGPSState.AGPSST_NONE;
        onChanged();
        return this;
      }

      private maxpb.MaxpbGps.GPSPowerState gpsPowerState_ = maxpb.MaxpbGps.GPSPowerState.GPWS_POWER_OFF;
      /**
       * <code>optional .maxpb.GPSPowerState gpsPowerState = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasGpsPowerState() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .maxpb.GPSPowerState gpsPowerState = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public maxpb.MaxpbGps.GPSPowerState getGpsPowerState() {
        return gpsPowerState_;
      }
      /**
       * <code>optional .maxpb.GPSPowerState gpsPowerState = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setGpsPowerState(maxpb.MaxpbGps.GPSPowerState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        gpsPowerState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .maxpb.GPSPowerState gpsPowerState = 13;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearGpsPowerState() {
        bitField0_ = (bitField0_ & ~0x00001000);
        gpsPowerState_ = maxpb.MaxpbGps.GPSPowerState.GPWS_POWER_OFF;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.GpsInfo)
    }

    static {
      defaultInstance = new GpsInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.GpsInfo)
  }

  public interface GpsConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maxpb.GpsConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bool sendUnfilteredPositions = 1;</code>
     *
     * <pre>
     *&#47; If enabled, other filter configurations has no effect SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean hasSendUnfilteredPositions();
    /**
     * <code>optional bool sendUnfilteredPositions = 1;</code>
     *
     * <pre>
     *&#47; If enabled, other filter configurations has no effect SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    boolean getSendUnfilteredPositions();

    /**
     * <code>optional bool signalStrenghtFilter = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean hasSignalStrenghtFilter();
    /**
     * <code>optional bool signalStrenghtFilter = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    boolean getSignalStrenghtFilter();

    /**
     * <code>optional uint32 intervalFixTransmissionMoving = 3;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT180
     * </pre>
     */
    boolean hasIntervalFixTransmissionMoving();
    /**
     * <code>optional uint32 intervalFixTransmissionMoving = 3;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT180
     * </pre>
     */
    int getIntervalFixTransmissionMoving();

    /**
     * <code>optional uint32 intervalFixTransmissionStop = 4;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT180
     * </pre>
     */
    boolean hasIntervalFixTransmissionStop();
    /**
     * <code>optional uint32 intervalFixTransmissionStop = 4;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT180
     * </pre>
     */
    int getIntervalFixTransmissionStop();

    /**
     * <code>optional uint32 intervalFixSampleMoving = 5;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT180
     * </pre>
     */
    boolean hasIntervalFixSampleMoving();
    /**
     * <code>optional uint32 intervalFixSampleMoving = 5;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT180
     * </pre>
     */
    int getIntervalFixSampleMoving();

    /**
     * <code>optional uint32 intervalFixSampleStop = 6;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT180
     * </pre>
     */
    boolean hasIntervalFixSampleStop();
    /**
     * <code>optional uint32 intervalFixSampleStop = 6;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT180
     * </pre>
     */
    int getIntervalFixSampleStop();
  }
  /**
   * Protobuf type {@code maxpb.GpsConfig}
   */
  public static final class GpsConfig extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maxpb.GpsConfig)
      GpsConfigOrBuilder {
    // Use GpsConfig.newBuilder() to construct.
    private GpsConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GpsConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GpsConfig defaultInstance;
    public static GpsConfig getDefaultInstance() {
      return defaultInstance;
    }

    public GpsConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GpsConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sendUnfilteredPositions_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              signalStrenghtFilter_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              intervalFixTransmissionMoving_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              intervalFixTransmissionStop_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              intervalFixSampleMoving_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              intervalFixSampleStop_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return maxpb.MaxpbGps.internal_static_maxpb_GpsConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return maxpb.MaxpbGps.internal_static_maxpb_GpsConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              maxpb.MaxpbGps.GpsConfig.class, maxpb.MaxpbGps.GpsConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<GpsConfig> PARSER =
        new com.google.protobuf.AbstractParser<GpsConfig>() {
      public GpsConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GpsConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GpsConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SENDUNFILTEREDPOSITIONS_FIELD_NUMBER = 1;
    private boolean sendUnfilteredPositions_;
    /**
     * <code>optional bool sendUnfilteredPositions = 1;</code>
     *
     * <pre>
     *&#47; If enabled, other filter configurations has no effect SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean hasSendUnfilteredPositions() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool sendUnfilteredPositions = 1;</code>
     *
     * <pre>
     *&#47; If enabled, other filter configurations has no effect SupportedBy: MXT160, MXT162, MXT180
     * </pre>
     */
    public boolean getSendUnfilteredPositions() {
      return sendUnfilteredPositions_;
    }

    public static final int SIGNALSTRENGHTFILTER_FIELD_NUMBER = 2;
    private boolean signalStrenghtFilter_;
    /**
     * <code>optional bool signalStrenghtFilter = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean hasSignalStrenghtFilter() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool signalStrenghtFilter = 2;</code>
     *
     * <pre>
     *&#47; SupportedBy: MXT160, MXT162
     * </pre>
     */
    public boolean getSignalStrenghtFilter() {
      return signalStrenghtFilter_;
    }

    public static final int INTERVALFIXTRANSMISSIONMOVING_FIELD_NUMBER = 3;
    private int intervalFixTransmissionMoving_;
    /**
     * <code>optional uint32 intervalFixTransmissionMoving = 3;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT180
     * </pre>
     */
    public boolean hasIntervalFixTransmissionMoving() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 intervalFixTransmissionMoving = 3;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT180
     * </pre>
     */
    public int getIntervalFixTransmissionMoving() {
      return intervalFixTransmissionMoving_;
    }

    public static final int INTERVALFIXTRANSMISSIONSTOP_FIELD_NUMBER = 4;
    private int intervalFixTransmissionStop_;
    /**
     * <code>optional uint32 intervalFixTransmissionStop = 4;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT180
     * </pre>
     */
    public boolean hasIntervalFixTransmissionStop() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 intervalFixTransmissionStop = 4;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT180
     * </pre>
     */
    public int getIntervalFixTransmissionStop() {
      return intervalFixTransmissionStop_;
    }

    public static final int INTERVALFIXSAMPLEMOVING_FIELD_NUMBER = 5;
    private int intervalFixSampleMoving_;
    /**
     * <code>optional uint32 intervalFixSampleMoving = 5;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT180
     * </pre>
     */
    public boolean hasIntervalFixSampleMoving() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 intervalFixSampleMoving = 5;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT180
     * </pre>
     */
    public int getIntervalFixSampleMoving() {
      return intervalFixSampleMoving_;
    }

    public static final int INTERVALFIXSAMPLESTOP_FIELD_NUMBER = 6;
    private int intervalFixSampleStop_;
    /**
     * <code>optional uint32 intervalFixSampleStop = 6;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT180
     * </pre>
     */
    public boolean hasIntervalFixSampleStop() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 intervalFixSampleStop = 6;</code>
     *
     * <pre>
     *&#47; seconds SupportedBy: MXT180
     * </pre>
     */
    public int getIntervalFixSampleStop() {
      return intervalFixSampleStop_;
    }

    private void initFields() {
      sendUnfilteredPositions_ = false;
      signalStrenghtFilter_ = false;
      intervalFixTransmissionMoving_ = 0;
      intervalFixTransmissionStop_ = 0;
      intervalFixSampleMoving_ = 0;
      intervalFixSampleStop_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, sendUnfilteredPositions_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, signalStrenghtFilter_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, intervalFixTransmissionMoving_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, intervalFixTransmissionStop_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, intervalFixSampleMoving_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, intervalFixSampleStop_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, sendUnfilteredPositions_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, signalStrenghtFilter_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, intervalFixTransmissionMoving_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, intervalFixTransmissionStop_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, intervalFixSampleMoving_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, intervalFixSampleStop_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static maxpb.MaxpbGps.GpsConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbGps.GpsConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbGps.GpsConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static maxpb.MaxpbGps.GpsConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static maxpb.MaxpbGps.GpsConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbGps.GpsConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbGps.GpsConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static maxpb.MaxpbGps.GpsConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static maxpb.MaxpbGps.GpsConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static maxpb.MaxpbGps.GpsConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(maxpb.MaxpbGps.GpsConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maxpb.GpsConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maxpb.GpsConfig)
        maxpb.MaxpbGps.GpsConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return maxpb.MaxpbGps.internal_static_maxpb_GpsConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return maxpb.MaxpbGps.internal_static_maxpb_GpsConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                maxpb.MaxpbGps.GpsConfig.class, maxpb.MaxpbGps.GpsConfig.Builder.class);
      }

      // Construct using maxpb.MaxpbGps.GpsConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sendUnfilteredPositions_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        signalStrenghtFilter_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        intervalFixTransmissionMoving_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        intervalFixTransmissionStop_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        intervalFixSampleMoving_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        intervalFixSampleStop_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return maxpb.MaxpbGps.internal_static_maxpb_GpsConfig_descriptor;
      }

      public maxpb.MaxpbGps.GpsConfig getDefaultInstanceForType() {
        return maxpb.MaxpbGps.GpsConfig.getDefaultInstance();
      }

      public maxpb.MaxpbGps.GpsConfig build() {
        maxpb.MaxpbGps.GpsConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public maxpb.MaxpbGps.GpsConfig buildPartial() {
        maxpb.MaxpbGps.GpsConfig result = new maxpb.MaxpbGps.GpsConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sendUnfilteredPositions_ = sendUnfilteredPositions_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.signalStrenghtFilter_ = signalStrenghtFilter_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.intervalFixTransmissionMoving_ = intervalFixTransmissionMoving_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.intervalFixTransmissionStop_ = intervalFixTransmissionStop_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.intervalFixSampleMoving_ = intervalFixSampleMoving_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.intervalFixSampleStop_ = intervalFixSampleStop_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof maxpb.MaxpbGps.GpsConfig) {
          return mergeFrom((maxpb.MaxpbGps.GpsConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(maxpb.MaxpbGps.GpsConfig other) {
        if (other == maxpb.MaxpbGps.GpsConfig.getDefaultInstance()) return this;
        if (other.hasSendUnfilteredPositions()) {
          setSendUnfilteredPositions(other.getSendUnfilteredPositions());
        }
        if (other.hasSignalStrenghtFilter()) {
          setSignalStrenghtFilter(other.getSignalStrenghtFilter());
        }
        if (other.hasIntervalFixTransmissionMoving()) {
          setIntervalFixTransmissionMoving(other.getIntervalFixTransmissionMoving());
        }
        if (other.hasIntervalFixTransmissionStop()) {
          setIntervalFixTransmissionStop(other.getIntervalFixTransmissionStop());
        }
        if (other.hasIntervalFixSampleMoving()) {
          setIntervalFixSampleMoving(other.getIntervalFixSampleMoving());
        }
        if (other.hasIntervalFixSampleStop()) {
          setIntervalFixSampleStop(other.getIntervalFixSampleStop());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        maxpb.MaxpbGps.GpsConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (maxpb.MaxpbGps.GpsConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean sendUnfilteredPositions_ ;
      /**
       * <code>optional bool sendUnfilteredPositions = 1;</code>
       *
       * <pre>
       *&#47; If enabled, other filter configurations has no effect SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean hasSendUnfilteredPositions() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool sendUnfilteredPositions = 1;</code>
       *
       * <pre>
       *&#47; If enabled, other filter configurations has no effect SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public boolean getSendUnfilteredPositions() {
        return sendUnfilteredPositions_;
      }
      /**
       * <code>optional bool sendUnfilteredPositions = 1;</code>
       *
       * <pre>
       *&#47; If enabled, other filter configurations has no effect SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder setSendUnfilteredPositions(boolean value) {
        bitField0_ |= 0x00000001;
        sendUnfilteredPositions_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool sendUnfilteredPositions = 1;</code>
       *
       * <pre>
       *&#47; If enabled, other filter configurations has no effect SupportedBy: MXT160, MXT162, MXT180
       * </pre>
       */
      public Builder clearSendUnfilteredPositions() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sendUnfilteredPositions_ = false;
        onChanged();
        return this;
      }

      private boolean signalStrenghtFilter_ ;
      /**
       * <code>optional bool signalStrenghtFilter = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean hasSignalStrenghtFilter() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool signalStrenghtFilter = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public boolean getSignalStrenghtFilter() {
        return signalStrenghtFilter_;
      }
      /**
       * <code>optional bool signalStrenghtFilter = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder setSignalStrenghtFilter(boolean value) {
        bitField0_ |= 0x00000002;
        signalStrenghtFilter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool signalStrenghtFilter = 2;</code>
       *
       * <pre>
       *&#47; SupportedBy: MXT160, MXT162
       * </pre>
       */
      public Builder clearSignalStrenghtFilter() {
        bitField0_ = (bitField0_ & ~0x00000002);
        signalStrenghtFilter_ = false;
        onChanged();
        return this;
      }

      private int intervalFixTransmissionMoving_ ;
      /**
       * <code>optional uint32 intervalFixTransmissionMoving = 3;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT180
       * </pre>
       */
      public boolean hasIntervalFixTransmissionMoving() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 intervalFixTransmissionMoving = 3;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT180
       * </pre>
       */
      public int getIntervalFixTransmissionMoving() {
        return intervalFixTransmissionMoving_;
      }
      /**
       * <code>optional uint32 intervalFixTransmissionMoving = 3;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT180
       * </pre>
       */
      public Builder setIntervalFixTransmissionMoving(int value) {
        bitField0_ |= 0x00000004;
        intervalFixTransmissionMoving_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 intervalFixTransmissionMoving = 3;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT180
       * </pre>
       */
      public Builder clearIntervalFixTransmissionMoving() {
        bitField0_ = (bitField0_ & ~0x00000004);
        intervalFixTransmissionMoving_ = 0;
        onChanged();
        return this;
      }

      private int intervalFixTransmissionStop_ ;
      /**
       * <code>optional uint32 intervalFixTransmissionStop = 4;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT180
       * </pre>
       */
      public boolean hasIntervalFixTransmissionStop() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 intervalFixTransmissionStop = 4;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT180
       * </pre>
       */
      public int getIntervalFixTransmissionStop() {
        return intervalFixTransmissionStop_;
      }
      /**
       * <code>optional uint32 intervalFixTransmissionStop = 4;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT180
       * </pre>
       */
      public Builder setIntervalFixTransmissionStop(int value) {
        bitField0_ |= 0x00000008;
        intervalFixTransmissionStop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 intervalFixTransmissionStop = 4;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT180
       * </pre>
       */
      public Builder clearIntervalFixTransmissionStop() {
        bitField0_ = (bitField0_ & ~0x00000008);
        intervalFixTransmissionStop_ = 0;
        onChanged();
        return this;
      }

      private int intervalFixSampleMoving_ ;
      /**
       * <code>optional uint32 intervalFixSampleMoving = 5;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT180
       * </pre>
       */
      public boolean hasIntervalFixSampleMoving() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 intervalFixSampleMoving = 5;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT180
       * </pre>
       */
      public int getIntervalFixSampleMoving() {
        return intervalFixSampleMoving_;
      }
      /**
       * <code>optional uint32 intervalFixSampleMoving = 5;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT180
       * </pre>
       */
      public Builder setIntervalFixSampleMoving(int value) {
        bitField0_ |= 0x00000010;
        intervalFixSampleMoving_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 intervalFixSampleMoving = 5;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT180
       * </pre>
       */
      public Builder clearIntervalFixSampleMoving() {
        bitField0_ = (bitField0_ & ~0x00000010);
        intervalFixSampleMoving_ = 0;
        onChanged();
        return this;
      }

      private int intervalFixSampleStop_ ;
      /**
       * <code>optional uint32 intervalFixSampleStop = 6;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT180
       * </pre>
       */
      public boolean hasIntervalFixSampleStop() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 intervalFixSampleStop = 6;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT180
       * </pre>
       */
      public int getIntervalFixSampleStop() {
        return intervalFixSampleStop_;
      }
      /**
       * <code>optional uint32 intervalFixSampleStop = 6;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT180
       * </pre>
       */
      public Builder setIntervalFixSampleStop(int value) {
        bitField0_ |= 0x00000020;
        intervalFixSampleStop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 intervalFixSampleStop = 6;</code>
       *
       * <pre>
       *&#47; seconds SupportedBy: MXT180
       * </pre>
       */
      public Builder clearIntervalFixSampleStop() {
        bitField0_ = (bitField0_ & ~0x00000020);
        intervalFixSampleStop_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maxpb.GpsConfig)
    }

    static {
      defaultInstance = new GpsConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maxpb.GpsConfig)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_Satellite_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_Satellite_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_GpsInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_GpsInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maxpb_GpsConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maxpb_GpsConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017maxpb_gps.proto\022\005maxpb\"k\n\tSatellite\022\013\n" +
      "\003snr\030\001 \002(\r\022\013\n\003prn\030\002 \001(\r\022\021\n\televation\030\003 \001" +
      "(\r\022\017\n\007azimuth\030\004 \001(\r\022 \n\006system\030\005 \001(\0162\020.ma" +
      "xpb.NavSystem\"\376\002\n\007GpsInfo\022,\n\017internalAnt" +
      "enna\030\001 \001(\0162\023.maxpb.AntennaState\022!\n\010fixSt" +
      "ate\030\002 \001(\0162\017.maxpb.FixState\022\013\n\003svn\030\003 \001(\005\022" +
      "*\n\020satellitesInView\030\004 \003(\0132\020.maxpb.Satell" +
      "ite\022\014\n\004hdop\030\005 \001(\005\022\014\n\004vdop\030\006 \001(\005\022\014\n\004pdop\030" +
      "\007 \001(\005\022\013\n\003age\030\010 \001(\r\022%\n\006filter\030\t \001(\0162\025.max" +
      "pb.GpsFilterState\022%\n\nfixQuality\030\n \001(\0162\021.",
      "maxpb.FixQuality\022\022\n\naverageSnr\030\013 \001(\r\022#\n\t" +
      "agpsState\030\014 \001(\0162\020.maxpb.AGPSState\022+\n\rgps" +
      "PowerState\030\r \001(\0162\024.maxpb.GPSPowerState\"\326" +
      "\001\n\tGpsConfig\022\037\n\027sendUnfilteredPositions\030" +
      "\001 \001(\010\022\034\n\024signalStrenghtFilter\030\002 \001(\010\022%\n\035i" +
      "ntervalFixTransmissionMoving\030\003 \001(\r\022#\n\033in" +
      "tervalFixTransmissionStop\030\004 \001(\r\022\037\n\027inter" +
      "valFixSampleMoving\030\005 \001(\r\022\035\n\025intervalFixS" +
      "ampleStop\030\006 \001(\r*\214\001\n\014AntennaState\022\013\n\007AS_N" +
      "ONE\020\000\022\t\n\005AS_OK\020\001\022\014\n\010AS_SHORT\020\002\022\013\n\007AS_OPE",
      "N\020\003\022\r\n\tAS_RFU_01\020\004\022\r\n\tAS_RFU_02\020\005\022\r\n\tAS_" +
      "RFU_03\020\006\022\r\n\tAS_RFU_04\020\007\022\r\n\tAS_RFU_05\020\010*\232" +
      "\001\n\010FixState\022\013\n\007FS_NONE\020\000\022\030\n\024FS_FIX_NOT_A" +
      "VAILABLE\020\001\022\r\n\tFS_FIX_2D\020\002\022\r\n\tFS_FIX_3D\020\003" +
      "\022\r\n\tFS_RFU_01\020\004\022\r\n\tFS_RFU_02\020\005\022\r\n\tFS_RFU" +
      "_03\020\006\022\r\n\tFS_RFU_04\020\007\022\r\n\tFS_RFU_05\020\010*\327\001\n\n" +
      "FixQuality\022\016\n\nFQ_INVALID\020\000\022\016\n\nFQ_GPS_FIX" +
      "\020\001\022\017\n\013FQ_DGPS_FIX\020\002\022\032\n\026FQ_REAL_TIME_KINE" +
      "MATIC\020\003\022\020\n\014FQ_FLOAT_RTK\020\004\022\037\n\033FQ_ESTIMATE" +
      "D_DEAD_RECKONING\020\005\022\r\n\tFQ_RFU_01\020\006\022\r\n\tFQ_",
      "RFU_02\020\007\022\r\n\tFQ_RFU_03\020\010\022\r\n\tFQ_RFU_04\020\t\022\r" +
      "\n\tFQ_RFU_05\020\n*\217\002\n\tGpsStatus\022\013\n\007GS_NONE\020\000" +
      "\022$\n GS_POWER_ON_NOW_ACTUAL_FIX_STATE\020\001\022!" +
      "\n\035GS_POWER_ON_NOW_OLD_FIX_STATE\020\002\022\027\n\023GS_" +
      "POWER_OFF_RACING\020\003\022$\n GS_POWER_OFF_SAMPL" +
      "ING_INTERVAL_0\020\004\022\"\n\036GS_POWER_OFF_RACING_" +
      "INTERVAL_0\020\005\022\r\n\tGS_RFU_01\020\006\022\r\n\tGS_RFU_02" +
      "\020\007\022\r\n\tGS_RFU_03\020\010\022\r\n\tGS_RFU_04\020\t\022\r\n\tGS_R" +
      "FU_05\020\n*I\n\016GpsFilterState\022\034\n\030GFS_ANALYSI" +
      "S_DISAPPROVED\020\000\022\031\n\025GFS_ANALYSIS_APPROVED",
      "\020\001*\212\001\n\007Heading\022\013\n\007H_NORTH\020\000\022\017\n\013H_NORTHEA" +
      "ST\020\001\022\n\n\006H_EAST\020\002\022\017\n\013H_SOUTHEAST\020\003\022\013\n\007H_S" +
      "OUTH\020\004\022\017\n\013H_SOUTHWEST\020\005\022\n\n\006H_WEST\020\006\022\017\n\013H" +
      "_NORTHWEST\020\007\022\t\n\005H_ALL\020\010*\275\001\n\tNavSystem\022\n\n" +
      "\006NS_GPS\020\000\022\016\n\nNS_GLONASS\020\001\022\016\n\nNS_GALILEO\020" +
      "\002\022\r\n\tNS_BEIDOU\020\003\022\017\n\013NS_BEIDOU_1\020\004\022\014\n\010NS_" +
      "NAVIC\020\005\022\013\n\007NS_QZSS\020\006\022\r\n\tNS_RFU_01\020\007\022\r\n\tN" +
      "S_RFU_02\020\010\022\r\n\tNS_RFU_03\020\t\022\r\n\tNS_RFU_04\020\n" +
      "\022\r\n\tNS_RFU_05\020\013*d\n\tAGPSState\022\017\n\013AGPSST_N" +
      "ONE\020\000\022\025\n\021AGPSST_AUTONOMOUS\020\001\022\027\n\023AGPSST_A",
      "GPS_OFFLINE\020\002\022\026\n\022AGPSST_AGPS_ONLINE\020\003*P\n" +
      "\rGPSPowerState\022\022\n\016GPWS_POWER_OFF\020\000\022\030\n\024GP" +
      "WS_POWER_LOW_POWER\020\001\022\021\n\rGPWS_POWER_ON\020\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_maxpb_Satellite_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_maxpb_Satellite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_Satellite_descriptor,
        new java.lang.String[] { "Snr", "Prn", "Elevation", "Azimuth", "System", });
    internal_static_maxpb_GpsInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_maxpb_GpsInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_GpsInfo_descriptor,
        new java.lang.String[] { "InternalAntenna", "FixState", "Svn", "SatellitesInView", "Hdop", "Vdop", "Pdop", "Age", "Filter", "FixQuality", "AverageSnr", "AgpsState", "GpsPowerState", });
    internal_static_maxpb_GpsConfig_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_maxpb_GpsConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maxpb_GpsConfig_descriptor,
        new java.lang.String[] { "SendUnfilteredPositions", "SignalStrenghtFilter", "IntervalFixTransmissionMoving", "IntervalFixTransmissionStop", "IntervalFixSampleMoving", "IntervalFixSampleStop", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
